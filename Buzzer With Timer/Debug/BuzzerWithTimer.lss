
BuzzerWithTimer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000583c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000140  00800060  0000583c  000058d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000021  008001a0  008001a0  00005a10  2**0
                  ALLOC
  3 .stab         00002cd0  00000000  00000000  00005a10  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000024a4  00000000  00000000  000086e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001e0  00000000  00000000  0000ab84  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 0000022f  00000000  00000000  0000ad64  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000306b  00000000  00000000  0000af93  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001532  00000000  00000000  0000dffe  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000148e  00000000  00000000  0000f530  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000200  00000000  00000000  000109c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000353  00000000  00000000  00010bc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000023b0  00000000  00000000  00010f13  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000080  00000000  00000000  000132c3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 81 17 	jmp	0x2f02	; 0x2f02 <__vector_7>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 32 1a 	jmp	0x3464	; 0x3464 <__vector_9>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ec e3       	ldi	r30, 0x3C	; 60
      68:	f8 e5       	ldi	r31, 0x58	; 88
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a0 3a       	cpi	r26, 0xA0	; 160
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a0 ea       	ldi	r26, 0xA0	; 160
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a1 3c       	cpi	r26, 0xC1	; 193
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 7f 2b 	call	0x56fe	; 0x56fe <main>
      8a:	0c 94 1c 2c 	jmp	0x5838	; 0x5838 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__muldi3>:
      92:	a0 e3       	ldi	r26, 0x30	; 48
      94:	b0 e0       	ldi	r27, 0x00	; 0
      96:	ef e4       	ldi	r30, 0x4F	; 79
      98:	f0 e0       	ldi	r31, 0x00	; 0
      9a:	0c 94 e5 2b 	jmp	0x57ca	; 0x57ca <__prologue_saves__>
      9e:	a8 e0       	ldi	r26, 0x08	; 8
      a0:	4e 01       	movw	r8, r28
      a2:	08 94       	sec
      a4:	81 1c       	adc	r8, r1
      a6:	91 1c       	adc	r9, r1
      a8:	f4 01       	movw	r30, r8
      aa:	ba 2f       	mov	r27, r26
      ac:	11 92       	st	Z+, r1
      ae:	ba 95       	dec	r27
      b0:	e9 f7       	brne	.-6      	; 0xac <__muldi3+0x1a>
      b2:	29 83       	std	Y+1, r18	; 0x01
      b4:	3a 83       	std	Y+2, r19	; 0x02
      b6:	4b 83       	std	Y+3, r20	; 0x03
      b8:	5c 83       	std	Y+4, r21	; 0x04
      ba:	6d 83       	std	Y+5, r22	; 0x05
      bc:	7e 83       	std	Y+6, r23	; 0x06
      be:	8f 83       	std	Y+7, r24	; 0x07
      c0:	98 87       	std	Y+8, r25	; 0x08
      c2:	ce 01       	movw	r24, r28
      c4:	09 96       	adiw	r24, 0x09	; 9
      c6:	fc 01       	movw	r30, r24
      c8:	11 92       	st	Z+, r1
      ca:	aa 95       	dec	r26
      cc:	e9 f7       	brne	.-6      	; 0xc8 <__muldi3+0x36>
      ce:	a9 86       	std	Y+9, r10	; 0x09
      d0:	ba 86       	std	Y+10, r11	; 0x0a
      d2:	cb 86       	std	Y+11, r12	; 0x0b
      d4:	dc 86       	std	Y+12, r13	; 0x0c
      d6:	ed 86       	std	Y+13, r14	; 0x0d
      d8:	fe 86       	std	Y+14, r15	; 0x0e
      da:	0f 87       	std	Y+15, r16	; 0x0f
      dc:	18 8b       	std	Y+16, r17	; 0x10
      de:	29 81       	ldd	r18, Y+1	; 0x01
      e0:	3a 81       	ldd	r19, Y+2	; 0x02
      e2:	4b 81       	ldd	r20, Y+3	; 0x03
      e4:	5c 81       	ldd	r21, Y+4	; 0x04
      e6:	2d a7       	std	Y+45, r18	; 0x2d
      e8:	3e a7       	std	Y+46, r19	; 0x2e
      ea:	4f a7       	std	Y+47, r20	; 0x2f
      ec:	58 ab       	std	Y+48, r21	; 0x30
      ee:	79 01       	movw	r14, r18
      f0:	8a 01       	movw	r16, r20
      f2:	8f ef       	ldi	r24, 0xFF	; 255
      f4:	9f ef       	ldi	r25, 0xFF	; 255
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b0 e0       	ldi	r27, 0x00	; 0
      fa:	e8 22       	and	r14, r24
      fc:	f9 22       	and	r15, r25
      fe:	0a 23       	and	r16, r26
     100:	1b 23       	and	r17, r27
     102:	1a 01       	movw	r2, r20
     104:	44 24       	eor	r4, r4
     106:	55 24       	eor	r5, r5
     108:	29 85       	ldd	r18, Y+9	; 0x09
     10a:	3a 85       	ldd	r19, Y+10	; 0x0a
     10c:	4b 85       	ldd	r20, Y+11	; 0x0b
     10e:	5c 85       	ldd	r21, Y+12	; 0x0c
     110:	29 a7       	std	Y+41, r18	; 0x29
     112:	3a a7       	std	Y+42, r19	; 0x2a
     114:	4b a7       	std	Y+43, r20	; 0x2b
     116:	5c a7       	std	Y+44, r21	; 0x2c
     118:	59 01       	movw	r10, r18
     11a:	6a 01       	movw	r12, r20
     11c:	a8 22       	and	r10, r24
     11e:	b9 22       	and	r11, r25
     120:	ca 22       	and	r12, r26
     122:	db 22       	and	r13, r27
     124:	3a 01       	movw	r6, r20
     126:	88 24       	eor	r8, r8
     128:	99 24       	eor	r9, r9
     12a:	c6 01       	movw	r24, r12
     12c:	b5 01       	movw	r22, r10
     12e:	a8 01       	movw	r20, r16
     130:	97 01       	movw	r18, r14
     132:	0e 94 98 2b 	call	0x5730	; 0x5730 <__mulsi3>
     136:	6d a3       	std	Y+37, r22	; 0x25
     138:	7e a3       	std	Y+38, r23	; 0x26
     13a:	8f a3       	std	Y+39, r24	; 0x27
     13c:	98 a7       	std	Y+40, r25	; 0x28
     13e:	c4 01       	movw	r24, r8
     140:	b3 01       	movw	r22, r6
     142:	0e 94 98 2b 	call	0x5730	; 0x5730 <__mulsi3>
     146:	69 a3       	std	Y+33, r22	; 0x21
     148:	7a a3       	std	Y+34, r23	; 0x22
     14a:	8b a3       	std	Y+35, r24	; 0x23
     14c:	9c a3       	std	Y+36, r25	; 0x24
     14e:	c6 01       	movw	r24, r12
     150:	b5 01       	movw	r22, r10
     152:	a2 01       	movw	r20, r4
     154:	91 01       	movw	r18, r2
     156:	0e 94 98 2b 	call	0x5730	; 0x5730 <__mulsi3>
     15a:	7b 01       	movw	r14, r22
     15c:	8c 01       	movw	r16, r24
     15e:	c4 01       	movw	r24, r8
     160:	b3 01       	movw	r22, r6
     162:	0e 94 98 2b 	call	0x5730	; 0x5730 <__mulsi3>
     166:	5b 01       	movw	r10, r22
     168:	6c 01       	movw	r12, r24
     16a:	89 a1       	ldd	r24, Y+33	; 0x21
     16c:	9a a1       	ldd	r25, Y+34	; 0x22
     16e:	ab a1       	ldd	r26, Y+35	; 0x23
     170:	bc a1       	ldd	r27, Y+36	; 0x24
     172:	8e 0d       	add	r24, r14
     174:	9f 1d       	adc	r25, r15
     176:	a0 1f       	adc	r26, r16
     178:	b1 1f       	adc	r27, r17
     17a:	89 a3       	std	Y+33, r24	; 0x21
     17c:	9a a3       	std	Y+34, r25	; 0x22
     17e:	ab a3       	std	Y+35, r26	; 0x23
     180:	bc a3       	std	Y+36, r27	; 0x24
     182:	2d a1       	ldd	r18, Y+37	; 0x25
     184:	3e a1       	ldd	r19, Y+38	; 0x26
     186:	4f a1       	ldd	r20, Y+39	; 0x27
     188:	58 a5       	ldd	r21, Y+40	; 0x28
     18a:	ca 01       	movw	r24, r20
     18c:	aa 27       	eor	r26, r26
     18e:	bb 27       	eor	r27, r27
     190:	29 a1       	ldd	r18, Y+33	; 0x21
     192:	3a a1       	ldd	r19, Y+34	; 0x22
     194:	4b a1       	ldd	r20, Y+35	; 0x23
     196:	5c a1       	ldd	r21, Y+36	; 0x24
     198:	28 0f       	add	r18, r24
     19a:	39 1f       	adc	r19, r25
     19c:	4a 1f       	adc	r20, r26
     19e:	5b 1f       	adc	r21, r27
     1a0:	29 a3       	std	Y+33, r18	; 0x21
     1a2:	3a a3       	std	Y+34, r19	; 0x22
     1a4:	4b a3       	std	Y+35, r20	; 0x23
     1a6:	5c a3       	std	Y+36, r21	; 0x24
     1a8:	2e 15       	cp	r18, r14
     1aa:	3f 05       	cpc	r19, r15
     1ac:	40 07       	cpc	r20, r16
     1ae:	51 07       	cpc	r21, r17
     1b0:	40 f4       	brcc	.+16     	; 0x1c2 <__muldi3+0x130>
     1b2:	80 e0       	ldi	r24, 0x00	; 0
     1b4:	90 e0       	ldi	r25, 0x00	; 0
     1b6:	a1 e0       	ldi	r26, 0x01	; 1
     1b8:	b0 e0       	ldi	r27, 0x00	; 0
     1ba:	a8 0e       	add	r10, r24
     1bc:	b9 1e       	adc	r11, r25
     1be:	ca 1e       	adc	r12, r26
     1c0:	db 1e       	adc	r13, r27
     1c2:	89 a1       	ldd	r24, Y+33	; 0x21
     1c4:	9a a1       	ldd	r25, Y+34	; 0x22
     1c6:	ab a1       	ldd	r26, Y+35	; 0x23
     1c8:	bc a1       	ldd	r27, Y+36	; 0x24
     1ca:	9d 01       	movw	r18, r26
     1cc:	44 27       	eor	r20, r20
     1ce:	55 27       	eor	r21, r21
     1d0:	2a 0d       	add	r18, r10
     1d2:	3b 1d       	adc	r19, r11
     1d4:	4c 1d       	adc	r20, r12
     1d6:	5d 1d       	adc	r21, r13
     1d8:	2d 8f       	std	Y+29, r18	; 0x1d
     1da:	3e 8f       	std	Y+30, r19	; 0x1e
     1dc:	4f 8f       	std	Y+31, r20	; 0x1f
     1de:	58 a3       	std	Y+32, r21	; 0x20
     1e0:	6c 01       	movw	r12, r24
     1e2:	bb 24       	eor	r11, r11
     1e4:	aa 24       	eor	r10, r10
     1e6:	8d a1       	ldd	r24, Y+37	; 0x25
     1e8:	9e a1       	ldd	r25, Y+38	; 0x26
     1ea:	af a1       	ldd	r26, Y+39	; 0x27
     1ec:	b8 a5       	ldd	r27, Y+40	; 0x28
     1ee:	a0 70       	andi	r26, 0x00	; 0
     1f0:	b0 70       	andi	r27, 0x00	; 0
     1f2:	a8 0e       	add	r10, r24
     1f4:	b9 1e       	adc	r11, r25
     1f6:	ca 1e       	adc	r12, r26
     1f8:	db 1e       	adc	r13, r27
     1fa:	a9 8e       	std	Y+25, r10	; 0x19
     1fc:	ba 8e       	std	Y+26, r11	; 0x1a
     1fe:	cb 8e       	std	Y+27, r12	; 0x1b
     200:	dc 8e       	std	Y+28, r13	; 0x1c
     202:	9a 8c       	ldd	r9, Y+26	; 0x1a
     204:	8b 8c       	ldd	r8, Y+27	; 0x1b
     206:	7c 8c       	ldd	r7, Y+28	; 0x1c
     208:	9e 8d       	ldd	r25, Y+30	; 0x1e
     20a:	6f 8d       	ldd	r22, Y+31	; 0x1f
     20c:	78 a1       	ldd	r23, Y+32	; 0x20
     20e:	fe 01       	movw	r30, r28
     210:	71 96       	adiw	r30, 0x11	; 17
     212:	88 e0       	ldi	r24, 0x08	; 8
     214:	df 01       	movw	r26, r30
     216:	1d 92       	st	X+, r1
     218:	8a 95       	dec	r24
     21a:	e9 f7       	brne	.-6      	; 0x216 <__muldi3+0x184>
     21c:	2d 8b       	std	Y+21, r18	; 0x15
     21e:	9e 8b       	std	Y+22, r25	; 0x16
     220:	6f 8b       	std	Y+23, r22	; 0x17
     222:	78 8f       	std	Y+24, r23	; 0x18
     224:	2d 85       	ldd	r18, Y+13	; 0x0d
     226:	3e 85       	ldd	r19, Y+14	; 0x0e
     228:	4f 85       	ldd	r20, Y+15	; 0x0f
     22a:	58 89       	ldd	r21, Y+16	; 0x10
     22c:	6d a5       	ldd	r22, Y+45	; 0x2d
     22e:	7e a5       	ldd	r23, Y+46	; 0x2e
     230:	8f a5       	ldd	r24, Y+47	; 0x2f
     232:	98 a9       	ldd	r25, Y+48	; 0x30
     234:	0e 94 98 2b 	call	0x5730	; 0x5730 <__mulsi3>
     238:	7b 01       	movw	r14, r22
     23a:	8c 01       	movw	r16, r24
     23c:	2d 81       	ldd	r18, Y+5	; 0x05
     23e:	3e 81       	ldd	r19, Y+6	; 0x06
     240:	4f 81       	ldd	r20, Y+7	; 0x07
     242:	58 85       	ldd	r21, Y+8	; 0x08
     244:	69 a5       	ldd	r22, Y+41	; 0x29
     246:	7a a5       	ldd	r23, Y+42	; 0x2a
     248:	8b a5       	ldd	r24, Y+43	; 0x2b
     24a:	9c a5       	ldd	r25, Y+44	; 0x2c
     24c:	0e 94 98 2b 	call	0x5730	; 0x5730 <__mulsi3>
     250:	e6 0e       	add	r14, r22
     252:	f7 1e       	adc	r15, r23
     254:	08 1f       	adc	r16, r24
     256:	19 1f       	adc	r17, r25
     258:	6d 89       	ldd	r22, Y+21	; 0x15
     25a:	7e 89       	ldd	r23, Y+22	; 0x16
     25c:	8f 89       	ldd	r24, Y+23	; 0x17
     25e:	98 8d       	ldd	r25, Y+24	; 0x18
     260:	6e 0d       	add	r22, r14
     262:	7f 1d       	adc	r23, r15
     264:	80 1f       	adc	r24, r16
     266:	91 1f       	adc	r25, r17
     268:	6d 8b       	std	Y+21, r22	; 0x15
     26a:	7e 8b       	std	Y+22, r23	; 0x16
     26c:	8f 8b       	std	Y+23, r24	; 0x17
     26e:	98 8f       	std	Y+24, r25	; 0x18
     270:	ee 89       	ldd	r30, Y+22	; 0x16
     272:	2a 2d       	mov	r18, r10
     274:	39 2d       	mov	r19, r9
     276:	48 2d       	mov	r20, r8
     278:	57 2d       	mov	r21, r7
     27a:	7e 2f       	mov	r23, r30
     27c:	8f 89       	ldd	r24, Y+23	; 0x17
     27e:	98 8d       	ldd	r25, Y+24	; 0x18
     280:	e0 96       	adiw	r28, 0x30	; 48
     282:	e2 e1       	ldi	r30, 0x12	; 18
     284:	0c 94 01 2c 	jmp	0x5802	; 0x5802 <__epilogue_restores__>

00000288 <__lshrdi3>:
     288:	ef 92       	push	r14
     28a:	ff 92       	push	r15
     28c:	0f 93       	push	r16
     28e:	df 93       	push	r29
     290:	cf 93       	push	r28
     292:	cd b7       	in	r28, 0x3d	; 61
     294:	de b7       	in	r29, 0x3e	; 62
     296:	60 97       	sbiw	r28, 0x10	; 16
     298:	0f b6       	in	r0, 0x3f	; 63
     29a:	f8 94       	cli
     29c:	de bf       	out	0x3e, r29	; 62
     29e:	0f be       	out	0x3f, r0	; 63
     2a0:	cd bf       	out	0x3d, r28	; 61
     2a2:	a8 2f       	mov	r26, r24
     2a4:	00 23       	and	r16, r16
     2a6:	09 f4       	brne	.+2      	; 0x2aa <__lshrdi3+0x22>
     2a8:	61 c0       	rjmp	.+194    	; 0x36c <__lshrdi3+0xe4>
     2aa:	7e 01       	movw	r14, r28
     2ac:	08 94       	sec
     2ae:	e1 1c       	adc	r14, r1
     2b0:	f1 1c       	adc	r15, r1
     2b2:	88 e0       	ldi	r24, 0x08	; 8
     2b4:	f7 01       	movw	r30, r14
     2b6:	11 92       	st	Z+, r1
     2b8:	8a 95       	dec	r24
     2ba:	e9 f7       	brne	.-6      	; 0x2b6 <__lshrdi3+0x2e>
     2bc:	29 83       	std	Y+1, r18	; 0x01
     2be:	3a 83       	std	Y+2, r19	; 0x02
     2c0:	4b 83       	std	Y+3, r20	; 0x03
     2c2:	5c 83       	std	Y+4, r21	; 0x04
     2c4:	6d 83       	std	Y+5, r22	; 0x05
     2c6:	7e 83       	std	Y+6, r23	; 0x06
     2c8:	af 83       	std	Y+7, r26	; 0x07
     2ca:	98 87       	std	Y+8, r25	; 0x08
     2cc:	80 e2       	ldi	r24, 0x20	; 32
     2ce:	80 1b       	sub	r24, r16
     2d0:	e8 2f       	mov	r30, r24
     2d2:	ff 27       	eor	r31, r31
     2d4:	e7 fd       	sbrc	r30, 7
     2d6:	f0 95       	com	r31
     2d8:	4d 81       	ldd	r20, Y+5	; 0x05
     2da:	5e 81       	ldd	r21, Y+6	; 0x06
     2dc:	6f 81       	ldd	r22, Y+7	; 0x07
     2de:	78 85       	ldd	r23, Y+8	; 0x08
     2e0:	18 16       	cp	r1, r24
     2e2:	84 f0       	brlt	.+32     	; 0x304 <__lshrdi3+0x7c>
     2e4:	1d 86       	std	Y+13, r1	; 0x0d
     2e6:	1e 86       	std	Y+14, r1	; 0x0e
     2e8:	1f 86       	std	Y+15, r1	; 0x0f
     2ea:	18 8a       	std	Y+16, r1	; 0x10
     2ec:	88 27       	eor	r24, r24
     2ee:	99 27       	eor	r25, r25
     2f0:	8e 1b       	sub	r24, r30
     2f2:	9f 0b       	sbc	r25, r31
     2f4:	04 c0       	rjmp	.+8      	; 0x2fe <__lshrdi3+0x76>
     2f6:	76 95       	lsr	r23
     2f8:	67 95       	ror	r22
     2fa:	57 95       	ror	r21
     2fc:	47 95       	ror	r20
     2fe:	8a 95       	dec	r24
     300:	d2 f7       	brpl	.-12     	; 0x2f6 <__lshrdi3+0x6e>
     302:	28 c0       	rjmp	.+80     	; 0x354 <__lshrdi3+0xcc>
     304:	20 2f       	mov	r18, r16
     306:	33 27       	eor	r19, r19
     308:	27 fd       	sbrc	r18, 7
     30a:	30 95       	com	r19
     30c:	db 01       	movw	r26, r22
     30e:	ca 01       	movw	r24, r20
     310:	02 2e       	mov	r0, r18
     312:	04 c0       	rjmp	.+8      	; 0x31c <__lshrdi3+0x94>
     314:	b6 95       	lsr	r27
     316:	a7 95       	ror	r26
     318:	97 95       	ror	r25
     31a:	87 95       	ror	r24
     31c:	0a 94       	dec	r0
     31e:	d2 f7       	brpl	.-12     	; 0x314 <__lshrdi3+0x8c>
     320:	8d 87       	std	Y+13, r24	; 0x0d
     322:	9e 87       	std	Y+14, r25	; 0x0e
     324:	af 87       	std	Y+15, r26	; 0x0f
     326:	b8 8b       	std	Y+16, r27	; 0x10
     328:	04 c0       	rjmp	.+8      	; 0x332 <__lshrdi3+0xaa>
     32a:	44 0f       	add	r20, r20
     32c:	55 1f       	adc	r21, r21
     32e:	66 1f       	adc	r22, r22
     330:	77 1f       	adc	r23, r23
     332:	ea 95       	dec	r30
     334:	d2 f7       	brpl	.-12     	; 0x32a <__lshrdi3+0xa2>
     336:	89 81       	ldd	r24, Y+1	; 0x01
     338:	9a 81       	ldd	r25, Y+2	; 0x02
     33a:	ab 81       	ldd	r26, Y+3	; 0x03
     33c:	bc 81       	ldd	r27, Y+4	; 0x04
     33e:	04 c0       	rjmp	.+8      	; 0x348 <__lshrdi3+0xc0>
     340:	b6 95       	lsr	r27
     342:	a7 95       	ror	r26
     344:	97 95       	ror	r25
     346:	87 95       	ror	r24
     348:	2a 95       	dec	r18
     34a:	d2 f7       	brpl	.-12     	; 0x340 <__lshrdi3+0xb8>
     34c:	48 2b       	or	r20, r24
     34e:	59 2b       	or	r21, r25
     350:	6a 2b       	or	r22, r26
     352:	7b 2b       	or	r23, r27
     354:	49 87       	std	Y+9, r20	; 0x09
     356:	5a 87       	std	Y+10, r21	; 0x0a
     358:	6b 87       	std	Y+11, r22	; 0x0b
     35a:	7c 87       	std	Y+12, r23	; 0x0c
     35c:	29 85       	ldd	r18, Y+9	; 0x09
     35e:	3a 85       	ldd	r19, Y+10	; 0x0a
     360:	4b 85       	ldd	r20, Y+11	; 0x0b
     362:	5c 85       	ldd	r21, Y+12	; 0x0c
     364:	6d 85       	ldd	r22, Y+13	; 0x0d
     366:	7e 85       	ldd	r23, Y+14	; 0x0e
     368:	af 85       	ldd	r26, Y+15	; 0x0f
     36a:	98 89       	ldd	r25, Y+16	; 0x10
     36c:	8a 2f       	mov	r24, r26
     36e:	60 96       	adiw	r28, 0x10	; 16
     370:	0f b6       	in	r0, 0x3f	; 63
     372:	f8 94       	cli
     374:	de bf       	out	0x3e, r29	; 62
     376:	0f be       	out	0x3f, r0	; 63
     378:	cd bf       	out	0x3d, r28	; 61
     37a:	cf 91       	pop	r28
     37c:	df 91       	pop	r29
     37e:	0f 91       	pop	r16
     380:	ff 90       	pop	r15
     382:	ef 90       	pop	r14
     384:	08 95       	ret

00000386 <__ashldi3>:
     386:	ef 92       	push	r14
     388:	ff 92       	push	r15
     38a:	0f 93       	push	r16
     38c:	df 93       	push	r29
     38e:	cf 93       	push	r28
     390:	cd b7       	in	r28, 0x3d	; 61
     392:	de b7       	in	r29, 0x3e	; 62
     394:	60 97       	sbiw	r28, 0x10	; 16
     396:	0f b6       	in	r0, 0x3f	; 63
     398:	f8 94       	cli
     39a:	de bf       	out	0x3e, r29	; 62
     39c:	0f be       	out	0x3f, r0	; 63
     39e:	cd bf       	out	0x3d, r28	; 61
     3a0:	a8 2f       	mov	r26, r24
     3a2:	00 23       	and	r16, r16
     3a4:	09 f4       	brne	.+2      	; 0x3a8 <__ashldi3+0x22>
     3a6:	61 c0       	rjmp	.+194    	; 0x46a <__ashldi3+0xe4>
     3a8:	7e 01       	movw	r14, r28
     3aa:	08 94       	sec
     3ac:	e1 1c       	adc	r14, r1
     3ae:	f1 1c       	adc	r15, r1
     3b0:	88 e0       	ldi	r24, 0x08	; 8
     3b2:	f7 01       	movw	r30, r14
     3b4:	11 92       	st	Z+, r1
     3b6:	8a 95       	dec	r24
     3b8:	e9 f7       	brne	.-6      	; 0x3b4 <__ashldi3+0x2e>
     3ba:	29 83       	std	Y+1, r18	; 0x01
     3bc:	3a 83       	std	Y+2, r19	; 0x02
     3be:	4b 83       	std	Y+3, r20	; 0x03
     3c0:	5c 83       	std	Y+4, r21	; 0x04
     3c2:	6d 83       	std	Y+5, r22	; 0x05
     3c4:	7e 83       	std	Y+6, r23	; 0x06
     3c6:	af 83       	std	Y+7, r26	; 0x07
     3c8:	98 87       	std	Y+8, r25	; 0x08
     3ca:	80 e2       	ldi	r24, 0x20	; 32
     3cc:	80 1b       	sub	r24, r16
     3ce:	e8 2f       	mov	r30, r24
     3d0:	ff 27       	eor	r31, r31
     3d2:	e7 fd       	sbrc	r30, 7
     3d4:	f0 95       	com	r31
     3d6:	49 81       	ldd	r20, Y+1	; 0x01
     3d8:	5a 81       	ldd	r21, Y+2	; 0x02
     3da:	6b 81       	ldd	r22, Y+3	; 0x03
     3dc:	7c 81       	ldd	r23, Y+4	; 0x04
     3de:	18 16       	cp	r1, r24
     3e0:	84 f0       	brlt	.+32     	; 0x402 <__ashldi3+0x7c>
     3e2:	19 86       	std	Y+9, r1	; 0x09
     3e4:	1a 86       	std	Y+10, r1	; 0x0a
     3e6:	1b 86       	std	Y+11, r1	; 0x0b
     3e8:	1c 86       	std	Y+12, r1	; 0x0c
     3ea:	88 27       	eor	r24, r24
     3ec:	99 27       	eor	r25, r25
     3ee:	8e 1b       	sub	r24, r30
     3f0:	9f 0b       	sbc	r25, r31
     3f2:	04 c0       	rjmp	.+8      	; 0x3fc <__ashldi3+0x76>
     3f4:	44 0f       	add	r20, r20
     3f6:	55 1f       	adc	r21, r21
     3f8:	66 1f       	adc	r22, r22
     3fa:	77 1f       	adc	r23, r23
     3fc:	8a 95       	dec	r24
     3fe:	d2 f7       	brpl	.-12     	; 0x3f4 <__ashldi3+0x6e>
     400:	28 c0       	rjmp	.+80     	; 0x452 <__ashldi3+0xcc>
     402:	20 2f       	mov	r18, r16
     404:	33 27       	eor	r19, r19
     406:	27 fd       	sbrc	r18, 7
     408:	30 95       	com	r19
     40a:	db 01       	movw	r26, r22
     40c:	ca 01       	movw	r24, r20
     40e:	02 2e       	mov	r0, r18
     410:	04 c0       	rjmp	.+8      	; 0x41a <__ashldi3+0x94>
     412:	88 0f       	add	r24, r24
     414:	99 1f       	adc	r25, r25
     416:	aa 1f       	adc	r26, r26
     418:	bb 1f       	adc	r27, r27
     41a:	0a 94       	dec	r0
     41c:	d2 f7       	brpl	.-12     	; 0x412 <__ashldi3+0x8c>
     41e:	89 87       	std	Y+9, r24	; 0x09
     420:	9a 87       	std	Y+10, r25	; 0x0a
     422:	ab 87       	std	Y+11, r26	; 0x0b
     424:	bc 87       	std	Y+12, r27	; 0x0c
     426:	04 c0       	rjmp	.+8      	; 0x430 <__ashldi3+0xaa>
     428:	76 95       	lsr	r23
     42a:	67 95       	ror	r22
     42c:	57 95       	ror	r21
     42e:	47 95       	ror	r20
     430:	ea 95       	dec	r30
     432:	d2 f7       	brpl	.-12     	; 0x428 <__ashldi3+0xa2>
     434:	8d 81       	ldd	r24, Y+5	; 0x05
     436:	9e 81       	ldd	r25, Y+6	; 0x06
     438:	af 81       	ldd	r26, Y+7	; 0x07
     43a:	b8 85       	ldd	r27, Y+8	; 0x08
     43c:	04 c0       	rjmp	.+8      	; 0x446 <__ashldi3+0xc0>
     43e:	88 0f       	add	r24, r24
     440:	99 1f       	adc	r25, r25
     442:	aa 1f       	adc	r26, r26
     444:	bb 1f       	adc	r27, r27
     446:	2a 95       	dec	r18
     448:	d2 f7       	brpl	.-12     	; 0x43e <__ashldi3+0xb8>
     44a:	48 2b       	or	r20, r24
     44c:	59 2b       	or	r21, r25
     44e:	6a 2b       	or	r22, r26
     450:	7b 2b       	or	r23, r27
     452:	4d 87       	std	Y+13, r20	; 0x0d
     454:	5e 87       	std	Y+14, r21	; 0x0e
     456:	6f 87       	std	Y+15, r22	; 0x0f
     458:	78 8b       	std	Y+16, r23	; 0x10
     45a:	29 85       	ldd	r18, Y+9	; 0x09
     45c:	3a 85       	ldd	r19, Y+10	; 0x0a
     45e:	4b 85       	ldd	r20, Y+11	; 0x0b
     460:	5c 85       	ldd	r21, Y+12	; 0x0c
     462:	6d 85       	ldd	r22, Y+13	; 0x0d
     464:	7e 85       	ldd	r23, Y+14	; 0x0e
     466:	af 85       	ldd	r26, Y+15	; 0x0f
     468:	98 89       	ldd	r25, Y+16	; 0x10
     46a:	8a 2f       	mov	r24, r26
     46c:	60 96       	adiw	r28, 0x10	; 16
     46e:	0f b6       	in	r0, 0x3f	; 63
     470:	f8 94       	cli
     472:	de bf       	out	0x3e, r29	; 62
     474:	0f be       	out	0x3f, r0	; 63
     476:	cd bf       	out	0x3d, r28	; 61
     478:	cf 91       	pop	r28
     47a:	df 91       	pop	r29
     47c:	0f 91       	pop	r16
     47e:	ff 90       	pop	r15
     480:	ef 90       	pop	r14
     482:	08 95       	ret

00000484 <__fixunssfsi>:
     484:	ef 92       	push	r14
     486:	ff 92       	push	r15
     488:	0f 93       	push	r16
     48a:	1f 93       	push	r17
     48c:	7b 01       	movw	r14, r22
     48e:	8c 01       	movw	r16, r24
     490:	20 e0       	ldi	r18, 0x00	; 0
     492:	30 e0       	ldi	r19, 0x00	; 0
     494:	40 e0       	ldi	r20, 0x00	; 0
     496:	5f e4       	ldi	r21, 0x4F	; 79
     498:	0e 94 27 12 	call	0x244e	; 0x244e <__gesf2>
     49c:	88 23       	and	r24, r24
     49e:	8c f0       	brlt	.+34     	; 0x4c2 <__fixunssfsi+0x3e>
     4a0:	c8 01       	movw	r24, r16
     4a2:	b7 01       	movw	r22, r14
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	30 e0       	ldi	r19, 0x00	; 0
     4a8:	40 e0       	ldi	r20, 0x00	; 0
     4aa:	5f e4       	ldi	r21, 0x4F	; 79
     4ac:	0e 94 9f 10 	call	0x213e	; 0x213e <__subsf3>
     4b0:	0e 94 87 12 	call	0x250e	; 0x250e <__fixsfsi>
     4b4:	9b 01       	movw	r18, r22
     4b6:	ac 01       	movw	r20, r24
     4b8:	20 50       	subi	r18, 0x00	; 0
     4ba:	30 40       	sbci	r19, 0x00	; 0
     4bc:	40 40       	sbci	r20, 0x00	; 0
     4be:	50 48       	sbci	r21, 0x80	; 128
     4c0:	06 c0       	rjmp	.+12     	; 0x4ce <__fixunssfsi+0x4a>
     4c2:	c8 01       	movw	r24, r16
     4c4:	b7 01       	movw	r22, r14
     4c6:	0e 94 87 12 	call	0x250e	; 0x250e <__fixsfsi>
     4ca:	9b 01       	movw	r18, r22
     4cc:	ac 01       	movw	r20, r24
     4ce:	b9 01       	movw	r22, r18
     4d0:	ca 01       	movw	r24, r20
     4d2:	1f 91       	pop	r17
     4d4:	0f 91       	pop	r16
     4d6:	ff 90       	pop	r15
     4d8:	ef 90       	pop	r14
     4da:	08 95       	ret

000004dc <__udivdi3>:
     4dc:	ae e5       	ldi	r26, 0x5E	; 94
     4de:	b0 e0       	ldi	r27, 0x00	; 0
     4e0:	e4 e7       	ldi	r30, 0x74	; 116
     4e2:	f2 e0       	ldi	r31, 0x02	; 2
     4e4:	0c 94 e5 2b 	jmp	0x57ca	; 0x57ca <__prologue_saves__>
     4e8:	a8 e0       	ldi	r26, 0x08	; 8
     4ea:	4e 01       	movw	r8, r28
     4ec:	08 94       	sec
     4ee:	81 1c       	adc	r8, r1
     4f0:	91 1c       	adc	r9, r1
     4f2:	f4 01       	movw	r30, r8
     4f4:	6a 2e       	mov	r6, r26
     4f6:	11 92       	st	Z+, r1
     4f8:	6a 94       	dec	r6
     4fa:	e9 f7       	brne	.-6      	; 0x4f6 <__udivdi3+0x1a>
     4fc:	29 83       	std	Y+1, r18	; 0x01
     4fe:	3a 83       	std	Y+2, r19	; 0x02
     500:	4b 83       	std	Y+3, r20	; 0x03
     502:	5c 83       	std	Y+4, r21	; 0x04
     504:	6d 83       	std	Y+5, r22	; 0x05
     506:	7e 83       	std	Y+6, r23	; 0x06
     508:	8f 83       	std	Y+7, r24	; 0x07
     50a:	98 87       	std	Y+8, r25	; 0x08
     50c:	ce 01       	movw	r24, r28
     50e:	09 96       	adiw	r24, 0x09	; 9
     510:	fc 01       	movw	r30, r24
     512:	11 92       	st	Z+, r1
     514:	aa 95       	dec	r26
     516:	e9 f7       	brne	.-6      	; 0x512 <__udivdi3+0x36>
     518:	a9 86       	std	Y+9, r10	; 0x09
     51a:	ba 86       	std	Y+10, r11	; 0x0a
     51c:	cb 86       	std	Y+11, r12	; 0x0b
     51e:	dc 86       	std	Y+12, r13	; 0x0c
     520:	ed 86       	std	Y+13, r14	; 0x0d
     522:	fe 86       	std	Y+14, r15	; 0x0e
     524:	0f 87       	std	Y+15, r16	; 0x0f
     526:	18 8b       	std	Y+16, r17	; 0x10
     528:	29 84       	ldd	r2, Y+9	; 0x09
     52a:	3a 84       	ldd	r3, Y+10	; 0x0a
     52c:	4b 84       	ldd	r4, Y+11	; 0x0b
     52e:	5c 84       	ldd	r5, Y+12	; 0x0c
     530:	ed 84       	ldd	r14, Y+13	; 0x0d
     532:	fe 84       	ldd	r15, Y+14	; 0x0e
     534:	0f 85       	ldd	r16, Y+15	; 0x0f
     536:	18 89       	ldd	r17, Y+16	; 0x10
     538:	69 80       	ldd	r6, Y+1	; 0x01
     53a:	7a 80       	ldd	r7, Y+2	; 0x02
     53c:	8b 80       	ldd	r8, Y+3	; 0x03
     53e:	9c 80       	ldd	r9, Y+4	; 0x04
     540:	6d a6       	std	Y+45, r6	; 0x2d
     542:	7e a6       	std	Y+46, r7	; 0x2e
     544:	8f a6       	std	Y+47, r8	; 0x2f
     546:	98 aa       	std	Y+48, r9	; 0x30
     548:	6d 80       	ldd	r6, Y+5	; 0x05
     54a:	7e 80       	ldd	r7, Y+6	; 0x06
     54c:	8f 80       	ldd	r8, Y+7	; 0x07
     54e:	98 84       	ldd	r9, Y+8	; 0x08
     550:	e1 14       	cp	r14, r1
     552:	f1 04       	cpc	r15, r1
     554:	01 05       	cpc	r16, r1
     556:	11 05       	cpc	r17, r1
     558:	09 f0       	breq	.+2      	; 0x55c <__udivdi3+0x80>
     55a:	b3 c3       	rjmp	.+1894   	; 0xcc2 <__stack+0x463>
     55c:	62 14       	cp	r6, r2
     55e:	73 04       	cpc	r7, r3
     560:	84 04       	cpc	r8, r4
     562:	95 04       	cpc	r9, r5
     564:	08 f0       	brcs	.+2      	; 0x568 <__udivdi3+0x8c>
     566:	3d c1       	rjmp	.+634    	; 0x7e2 <__udivdi3+0x306>
     568:	00 e0       	ldi	r16, 0x00	; 0
     56a:	20 16       	cp	r2, r16
     56c:	00 e0       	ldi	r16, 0x00	; 0
     56e:	30 06       	cpc	r3, r16
     570:	01 e0       	ldi	r16, 0x01	; 1
     572:	40 06       	cpc	r4, r16
     574:	00 e0       	ldi	r16, 0x00	; 0
     576:	50 06       	cpc	r5, r16
     578:	88 f4       	brcc	.+34     	; 0x59c <__udivdi3+0xc0>
     57a:	1f ef       	ldi	r17, 0xFF	; 255
     57c:	21 16       	cp	r2, r17
     57e:	31 04       	cpc	r3, r1
     580:	41 04       	cpc	r4, r1
     582:	51 04       	cpc	r5, r1
     584:	39 f0       	breq	.+14     	; 0x594 <__udivdi3+0xb8>
     586:	30 f0       	brcs	.+12     	; 0x594 <__udivdi3+0xb8>
     588:	48 e0       	ldi	r20, 0x08	; 8
     58a:	e4 2e       	mov	r14, r20
     58c:	f1 2c       	mov	r15, r1
     58e:	01 2d       	mov	r16, r1
     590:	11 2d       	mov	r17, r1
     592:	18 c0       	rjmp	.+48     	; 0x5c4 <__udivdi3+0xe8>
     594:	ee 24       	eor	r14, r14
     596:	ff 24       	eor	r15, r15
     598:	87 01       	movw	r16, r14
     59a:	14 c0       	rjmp	.+40     	; 0x5c4 <__udivdi3+0xe8>
     59c:	20 e0       	ldi	r18, 0x00	; 0
     59e:	22 16       	cp	r2, r18
     5a0:	20 e0       	ldi	r18, 0x00	; 0
     5a2:	32 06       	cpc	r3, r18
     5a4:	20 e0       	ldi	r18, 0x00	; 0
     5a6:	42 06       	cpc	r4, r18
     5a8:	21 e0       	ldi	r18, 0x01	; 1
     5aa:	52 06       	cpc	r5, r18
     5ac:	30 f0       	brcs	.+12     	; 0x5ba <__udivdi3+0xde>
     5ae:	38 e1       	ldi	r19, 0x18	; 24
     5b0:	e3 2e       	mov	r14, r19
     5b2:	f1 2c       	mov	r15, r1
     5b4:	01 2d       	mov	r16, r1
     5b6:	11 2d       	mov	r17, r1
     5b8:	05 c0       	rjmp	.+10     	; 0x5c4 <__udivdi3+0xe8>
     5ba:	20 e1       	ldi	r18, 0x10	; 16
     5bc:	e2 2e       	mov	r14, r18
     5be:	f1 2c       	mov	r15, r1
     5c0:	01 2d       	mov	r16, r1
     5c2:	11 2d       	mov	r17, r1
     5c4:	d2 01       	movw	r26, r4
     5c6:	c1 01       	movw	r24, r2
     5c8:	0e 2c       	mov	r0, r14
     5ca:	04 c0       	rjmp	.+8      	; 0x5d4 <__udivdi3+0xf8>
     5cc:	b6 95       	lsr	r27
     5ce:	a7 95       	ror	r26
     5d0:	97 95       	ror	r25
     5d2:	87 95       	ror	r24
     5d4:	0a 94       	dec	r0
     5d6:	d2 f7       	brpl	.-12     	; 0x5cc <__udivdi3+0xf0>
     5d8:	85 57       	subi	r24, 0x75	; 117
     5da:	9f 4f       	sbci	r25, 0xFF	; 255
     5dc:	dc 01       	movw	r26, r24
     5de:	2c 91       	ld	r18, X
     5e0:	80 e2       	ldi	r24, 0x20	; 32
     5e2:	90 e0       	ldi	r25, 0x00	; 0
     5e4:	a0 e0       	ldi	r26, 0x00	; 0
     5e6:	b0 e0       	ldi	r27, 0x00	; 0
     5e8:	8e 19       	sub	r24, r14
     5ea:	9f 09       	sbc	r25, r15
     5ec:	a0 0b       	sbc	r26, r16
     5ee:	b1 0b       	sbc	r27, r17
     5f0:	7c 01       	movw	r14, r24
     5f2:	8d 01       	movw	r16, r26
     5f4:	e2 1a       	sub	r14, r18
     5f6:	f1 08       	sbc	r15, r1
     5f8:	01 09       	sbc	r16, r1
     5fa:	11 09       	sbc	r17, r1
     5fc:	e1 14       	cp	r14, r1
     5fe:	f1 04       	cpc	r15, r1
     600:	01 05       	cpc	r16, r1
     602:	11 05       	cpc	r17, r1
     604:	a1 f1       	breq	.+104    	; 0x66e <__udivdi3+0x192>
     606:	0e 2c       	mov	r0, r14
     608:	04 c0       	rjmp	.+8      	; 0x612 <__udivdi3+0x136>
     60a:	22 0c       	add	r2, r2
     60c:	33 1c       	adc	r3, r3
     60e:	44 1c       	adc	r4, r4
     610:	55 1c       	adc	r5, r5
     612:	0a 94       	dec	r0
     614:	d2 f7       	brpl	.-12     	; 0x60a <__udivdi3+0x12e>
     616:	a4 01       	movw	r20, r8
     618:	93 01       	movw	r18, r6
     61a:	0e 2c       	mov	r0, r14
     61c:	04 c0       	rjmp	.+8      	; 0x626 <__udivdi3+0x14a>
     61e:	22 0f       	add	r18, r18
     620:	33 1f       	adc	r19, r19
     622:	44 1f       	adc	r20, r20
     624:	55 1f       	adc	r21, r21
     626:	0a 94       	dec	r0
     628:	d2 f7       	brpl	.-12     	; 0x61e <__udivdi3+0x142>
     62a:	80 e2       	ldi	r24, 0x20	; 32
     62c:	90 e0       	ldi	r25, 0x00	; 0
     62e:	8e 19       	sub	r24, r14
     630:	9f 09       	sbc	r25, r15
     632:	6d a4       	ldd	r6, Y+45	; 0x2d
     634:	7e a4       	ldd	r7, Y+46	; 0x2e
     636:	8f a4       	ldd	r8, Y+47	; 0x2f
     638:	98 a8       	ldd	r9, Y+48	; 0x30
     63a:	04 c0       	rjmp	.+8      	; 0x644 <__udivdi3+0x168>
     63c:	96 94       	lsr	r9
     63e:	87 94       	ror	r8
     640:	77 94       	ror	r7
     642:	67 94       	ror	r6
     644:	8a 95       	dec	r24
     646:	d2 f7       	brpl	.-12     	; 0x63c <__udivdi3+0x160>
     648:	62 2a       	or	r6, r18
     64a:	73 2a       	or	r7, r19
     64c:	84 2a       	or	r8, r20
     64e:	95 2a       	or	r9, r21
     650:	ad a4       	ldd	r10, Y+45	; 0x2d
     652:	be a4       	ldd	r11, Y+46	; 0x2e
     654:	cf a4       	ldd	r12, Y+47	; 0x2f
     656:	d8 a8       	ldd	r13, Y+48	; 0x30
     658:	04 c0       	rjmp	.+8      	; 0x662 <__udivdi3+0x186>
     65a:	aa 0c       	add	r10, r10
     65c:	bb 1c       	adc	r11, r11
     65e:	cc 1c       	adc	r12, r12
     660:	dd 1c       	adc	r13, r13
     662:	ea 94       	dec	r14
     664:	d2 f7       	brpl	.-12     	; 0x65a <__udivdi3+0x17e>
     666:	ad a6       	std	Y+45, r10	; 0x2d
     668:	be a6       	std	Y+46, r11	; 0x2e
     66a:	cf a6       	std	Y+47, r12	; 0x2f
     66c:	d8 aa       	std	Y+48, r13	; 0x30
     66e:	62 01       	movw	r12, r4
     670:	ee 24       	eor	r14, r14
     672:	ff 24       	eor	r15, r15
     674:	cd aa       	std	Y+53, r12	; 0x35
     676:	de aa       	std	Y+54, r13	; 0x36
     678:	ef aa       	std	Y+55, r14	; 0x37
     67a:	f8 ae       	std	Y+56, r15	; 0x38
     67c:	92 01       	movw	r18, r4
     67e:	81 01       	movw	r16, r2
     680:	20 70       	andi	r18, 0x00	; 0
     682:	30 70       	andi	r19, 0x00	; 0
     684:	09 af       	std	Y+57, r16	; 0x39
     686:	1a af       	std	Y+58, r17	; 0x3a
     688:	2b af       	std	Y+59, r18	; 0x3b
     68a:	3c af       	std	Y+60, r19	; 0x3c
     68c:	c4 01       	movw	r24, r8
     68e:	b3 01       	movw	r22, r6
     690:	a7 01       	movw	r20, r14
     692:	96 01       	movw	r18, r12
     694:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
     698:	7b 01       	movw	r14, r22
     69a:	8c 01       	movw	r16, r24
     69c:	c4 01       	movw	r24, r8
     69e:	b3 01       	movw	r22, r6
     6a0:	2d a9       	ldd	r18, Y+53	; 0x35
     6a2:	3e a9       	ldd	r19, Y+54	; 0x36
     6a4:	4f a9       	ldd	r20, Y+55	; 0x37
     6a6:	58 ad       	ldd	r21, Y+56	; 0x38
     6a8:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
     6ac:	c9 01       	movw	r24, r18
     6ae:	da 01       	movw	r26, r20
     6b0:	3c 01       	movw	r6, r24
     6b2:	4d 01       	movw	r8, r26
     6b4:	c4 01       	movw	r24, r8
     6b6:	b3 01       	movw	r22, r6
     6b8:	29 ad       	ldd	r18, Y+57	; 0x39
     6ba:	3a ad       	ldd	r19, Y+58	; 0x3a
     6bc:	4b ad       	ldd	r20, Y+59	; 0x3b
     6be:	5c ad       	ldd	r21, Y+60	; 0x3c
     6c0:	0e 94 98 2b 	call	0x5730	; 0x5730 <__mulsi3>
     6c4:	9b 01       	movw	r18, r22
     6c6:	ac 01       	movw	r20, r24
     6c8:	87 01       	movw	r16, r14
     6ca:	ff 24       	eor	r15, r15
     6cc:	ee 24       	eor	r14, r14
     6ce:	ad a4       	ldd	r10, Y+45	; 0x2d
     6d0:	be a4       	ldd	r11, Y+46	; 0x2e
     6d2:	cf a4       	ldd	r12, Y+47	; 0x2f
     6d4:	d8 a8       	ldd	r13, Y+48	; 0x30
     6d6:	c6 01       	movw	r24, r12
     6d8:	aa 27       	eor	r26, r26
     6da:	bb 27       	eor	r27, r27
     6dc:	57 01       	movw	r10, r14
     6de:	68 01       	movw	r12, r16
     6e0:	a8 2a       	or	r10, r24
     6e2:	b9 2a       	or	r11, r25
     6e4:	ca 2a       	or	r12, r26
     6e6:	db 2a       	or	r13, r27
     6e8:	a2 16       	cp	r10, r18
     6ea:	b3 06       	cpc	r11, r19
     6ec:	c4 06       	cpc	r12, r20
     6ee:	d5 06       	cpc	r13, r21
     6f0:	e0 f4       	brcc	.+56     	; 0x72a <__udivdi3+0x24e>
     6f2:	08 94       	sec
     6f4:	61 08       	sbc	r6, r1
     6f6:	71 08       	sbc	r7, r1
     6f8:	81 08       	sbc	r8, r1
     6fa:	91 08       	sbc	r9, r1
     6fc:	a2 0c       	add	r10, r2
     6fe:	b3 1c       	adc	r11, r3
     700:	c4 1c       	adc	r12, r4
     702:	d5 1c       	adc	r13, r5
     704:	a2 14       	cp	r10, r2
     706:	b3 04       	cpc	r11, r3
     708:	c4 04       	cpc	r12, r4
     70a:	d5 04       	cpc	r13, r5
     70c:	70 f0       	brcs	.+28     	; 0x72a <__udivdi3+0x24e>
     70e:	a2 16       	cp	r10, r18
     710:	b3 06       	cpc	r11, r19
     712:	c4 06       	cpc	r12, r20
     714:	d5 06       	cpc	r13, r21
     716:	48 f4       	brcc	.+18     	; 0x72a <__udivdi3+0x24e>
     718:	08 94       	sec
     71a:	61 08       	sbc	r6, r1
     71c:	71 08       	sbc	r7, r1
     71e:	81 08       	sbc	r8, r1
     720:	91 08       	sbc	r9, r1
     722:	a2 0c       	add	r10, r2
     724:	b3 1c       	adc	r11, r3
     726:	c4 1c       	adc	r12, r4
     728:	d5 1c       	adc	r13, r5
     72a:	a2 1a       	sub	r10, r18
     72c:	b3 0a       	sbc	r11, r19
     72e:	c4 0a       	sbc	r12, r20
     730:	d5 0a       	sbc	r13, r21
     732:	c6 01       	movw	r24, r12
     734:	b5 01       	movw	r22, r10
     736:	2d a9       	ldd	r18, Y+53	; 0x35
     738:	3e a9       	ldd	r19, Y+54	; 0x36
     73a:	4f a9       	ldd	r20, Y+55	; 0x37
     73c:	58 ad       	ldd	r21, Y+56	; 0x38
     73e:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
     742:	7b 01       	movw	r14, r22
     744:	8c 01       	movw	r16, r24
     746:	c6 01       	movw	r24, r12
     748:	b5 01       	movw	r22, r10
     74a:	2d a9       	ldd	r18, Y+53	; 0x35
     74c:	3e a9       	ldd	r19, Y+54	; 0x36
     74e:	4f a9       	ldd	r20, Y+55	; 0x37
     750:	58 ad       	ldd	r21, Y+56	; 0x38
     752:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
     756:	c9 01       	movw	r24, r18
     758:	da 01       	movw	r26, r20
     75a:	5c 01       	movw	r10, r24
     75c:	6d 01       	movw	r12, r26
     75e:	c6 01       	movw	r24, r12
     760:	b5 01       	movw	r22, r10
     762:	29 ad       	ldd	r18, Y+57	; 0x39
     764:	3a ad       	ldd	r19, Y+58	; 0x3a
     766:	4b ad       	ldd	r20, Y+59	; 0x3b
     768:	5c ad       	ldd	r21, Y+60	; 0x3c
     76a:	0e 94 98 2b 	call	0x5730	; 0x5730 <__mulsi3>
     76e:	9b 01       	movw	r18, r22
     770:	ac 01       	movw	r20, r24
     772:	87 01       	movw	r16, r14
     774:	ff 24       	eor	r15, r15
     776:	ee 24       	eor	r14, r14
     778:	8d a5       	ldd	r24, Y+45	; 0x2d
     77a:	9e a5       	ldd	r25, Y+46	; 0x2e
     77c:	af a5       	ldd	r26, Y+47	; 0x2f
     77e:	b8 a9       	ldd	r27, Y+48	; 0x30
     780:	a0 70       	andi	r26, 0x00	; 0
     782:	b0 70       	andi	r27, 0x00	; 0
     784:	e8 2a       	or	r14, r24
     786:	f9 2a       	or	r15, r25
     788:	0a 2b       	or	r16, r26
     78a:	1b 2b       	or	r17, r27
     78c:	e2 16       	cp	r14, r18
     78e:	f3 06       	cpc	r15, r19
     790:	04 07       	cpc	r16, r20
     792:	15 07       	cpc	r17, r21
     794:	c0 f4       	brcc	.+48     	; 0x7c6 <__udivdi3+0x2ea>
     796:	08 94       	sec
     798:	a1 08       	sbc	r10, r1
     79a:	b1 08       	sbc	r11, r1
     79c:	c1 08       	sbc	r12, r1
     79e:	d1 08       	sbc	r13, r1
     7a0:	e2 0c       	add	r14, r2
     7a2:	f3 1c       	adc	r15, r3
     7a4:	04 1d       	adc	r16, r4
     7a6:	15 1d       	adc	r17, r5
     7a8:	e2 14       	cp	r14, r2
     7aa:	f3 04       	cpc	r15, r3
     7ac:	04 05       	cpc	r16, r4
     7ae:	15 05       	cpc	r17, r5
     7b0:	50 f0       	brcs	.+20     	; 0x7c6 <__udivdi3+0x2ea>
     7b2:	e2 16       	cp	r14, r18
     7b4:	f3 06       	cpc	r15, r19
     7b6:	04 07       	cpc	r16, r20
     7b8:	15 07       	cpc	r17, r21
     7ba:	28 f4       	brcc	.+10     	; 0x7c6 <__udivdi3+0x2ea>
     7bc:	08 94       	sec
     7be:	a1 08       	sbc	r10, r1
     7c0:	b1 08       	sbc	r11, r1
     7c2:	c1 08       	sbc	r12, r1
     7c4:	d1 08       	sbc	r13, r1
     7c6:	d3 01       	movw	r26, r6
     7c8:	99 27       	eor	r25, r25
     7ca:	88 27       	eor	r24, r24
     7cc:	86 01       	movw	r16, r12
     7ce:	75 01       	movw	r14, r10
     7d0:	e8 2a       	or	r14, r24
     7d2:	f9 2a       	or	r15, r25
     7d4:	0a 2b       	or	r16, r26
     7d6:	1b 2b       	or	r17, r27
     7d8:	e9 aa       	std	Y+49, r14	; 0x31
     7da:	fa aa       	std	Y+50, r15	; 0x32
     7dc:	0b ab       	std	Y+51, r16	; 0x33
     7de:	1c ab       	std	Y+52, r17	; 0x34
     7e0:	cf c4       	rjmp	.+2462   	; 0x1180 <__stack+0x921>
     7e2:	21 14       	cp	r2, r1
     7e4:	31 04       	cpc	r3, r1
     7e6:	41 04       	cpc	r4, r1
     7e8:	51 04       	cpc	r5, r1
     7ea:	71 f4       	brne	.+28     	; 0x808 <__udivdi3+0x32c>
     7ec:	61 e0       	ldi	r22, 0x01	; 1
     7ee:	70 e0       	ldi	r23, 0x00	; 0
     7f0:	80 e0       	ldi	r24, 0x00	; 0
     7f2:	90 e0       	ldi	r25, 0x00	; 0
     7f4:	20 e0       	ldi	r18, 0x00	; 0
     7f6:	30 e0       	ldi	r19, 0x00	; 0
     7f8:	40 e0       	ldi	r20, 0x00	; 0
     7fa:	50 e0       	ldi	r21, 0x00	; 0
     7fc:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
     800:	c9 01       	movw	r24, r18
     802:	da 01       	movw	r26, r20
     804:	1c 01       	movw	r2, r24
     806:	2d 01       	movw	r4, r26
     808:	00 e0       	ldi	r16, 0x00	; 0
     80a:	20 16       	cp	r2, r16
     80c:	00 e0       	ldi	r16, 0x00	; 0
     80e:	30 06       	cpc	r3, r16
     810:	01 e0       	ldi	r16, 0x01	; 1
     812:	40 06       	cpc	r4, r16
     814:	00 e0       	ldi	r16, 0x00	; 0
     816:	50 06       	cpc	r5, r16
     818:	88 f4       	brcc	.+34     	; 0x83c <__udivdi3+0x360>
     81a:	1f ef       	ldi	r17, 0xFF	; 255
     81c:	21 16       	cp	r2, r17
     81e:	31 04       	cpc	r3, r1
     820:	41 04       	cpc	r4, r1
     822:	51 04       	cpc	r5, r1
     824:	31 f0       	breq	.+12     	; 0x832 <__udivdi3+0x356>
     826:	28 f0       	brcs	.+10     	; 0x832 <__udivdi3+0x356>
     828:	48 e0       	ldi	r20, 0x08	; 8
     82a:	50 e0       	ldi	r21, 0x00	; 0
     82c:	60 e0       	ldi	r22, 0x00	; 0
     82e:	70 e0       	ldi	r23, 0x00	; 0
     830:	17 c0       	rjmp	.+46     	; 0x860 <__stack+0x1>
     832:	40 e0       	ldi	r20, 0x00	; 0
     834:	50 e0       	ldi	r21, 0x00	; 0
     836:	60 e0       	ldi	r22, 0x00	; 0
     838:	70 e0       	ldi	r23, 0x00	; 0
     83a:	12 c0       	rjmp	.+36     	; 0x860 <__stack+0x1>
     83c:	20 e0       	ldi	r18, 0x00	; 0
     83e:	22 16       	cp	r2, r18
     840:	20 e0       	ldi	r18, 0x00	; 0
     842:	32 06       	cpc	r3, r18
     844:	20 e0       	ldi	r18, 0x00	; 0
     846:	42 06       	cpc	r4, r18
     848:	21 e0       	ldi	r18, 0x01	; 1
     84a:	52 06       	cpc	r5, r18
     84c:	28 f0       	brcs	.+10     	; 0x858 <__udivdi3+0x37c>
     84e:	48 e1       	ldi	r20, 0x18	; 24
     850:	50 e0       	ldi	r21, 0x00	; 0
     852:	60 e0       	ldi	r22, 0x00	; 0
     854:	70 e0       	ldi	r23, 0x00	; 0
     856:	04 c0       	rjmp	.+8      	; 0x860 <__stack+0x1>
     858:	40 e1       	ldi	r20, 0x10	; 16
     85a:	50 e0       	ldi	r21, 0x00	; 0
     85c:	60 e0       	ldi	r22, 0x00	; 0
     85e:	70 e0       	ldi	r23, 0x00	; 0
     860:	d2 01       	movw	r26, r4
     862:	c1 01       	movw	r24, r2
     864:	04 2e       	mov	r0, r20
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	b6 95       	lsr	r27
     86a:	a7 95       	ror	r26
     86c:	97 95       	ror	r25
     86e:	87 95       	ror	r24
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	85 57       	subi	r24, 0x75	; 117
     876:	9f 4f       	sbci	r25, 0xFF	; 255
     878:	dc 01       	movw	r26, r24
     87a:	2c 91       	ld	r18, X
     87c:	e0 e2       	ldi	r30, 0x20	; 32
     87e:	ee 2e       	mov	r14, r30
     880:	f1 2c       	mov	r15, r1
     882:	01 2d       	mov	r16, r1
     884:	11 2d       	mov	r17, r1
     886:	d8 01       	movw	r26, r16
     888:	c7 01       	movw	r24, r14
     88a:	84 1b       	sub	r24, r20
     88c:	95 0b       	sbc	r25, r21
     88e:	a6 0b       	sbc	r26, r22
     890:	b7 0b       	sbc	r27, r23
     892:	82 1b       	sub	r24, r18
     894:	91 09       	sbc	r25, r1
     896:	a1 09       	sbc	r26, r1
     898:	b1 09       	sbc	r27, r1
     89a:	00 97       	sbiw	r24, 0x00	; 0
     89c:	a1 05       	cpc	r26, r1
     89e:	b1 05       	cpc	r27, r1
     8a0:	61 f4       	brne	.+24     	; 0x8ba <__stack+0x5b>
     8a2:	64 01       	movw	r12, r8
     8a4:	53 01       	movw	r10, r6
     8a6:	a2 18       	sub	r10, r2
     8a8:	b3 08       	sbc	r11, r3
     8aa:	c4 08       	sbc	r12, r4
     8ac:	d5 08       	sbc	r13, r5
     8ae:	31 e0       	ldi	r19, 0x01	; 1
     8b0:	63 2e       	mov	r6, r19
     8b2:	71 2c       	mov	r7, r1
     8b4:	81 2c       	mov	r8, r1
     8b6:	91 2c       	mov	r9, r1
     8b8:	1e c1       	rjmp	.+572    	; 0xaf6 <__stack+0x297>
     8ba:	6f 96       	adiw	r28, 0x1f	; 31
     8bc:	8f af       	std	Y+63, r24	; 0x3f
     8be:	6f 97       	sbiw	r28, 0x1f	; 31
     8c0:	08 2e       	mov	r0, r24
     8c2:	04 c0       	rjmp	.+8      	; 0x8cc <__stack+0x6d>
     8c4:	22 0c       	add	r2, r2
     8c6:	33 1c       	adc	r3, r3
     8c8:	44 1c       	adc	r4, r4
     8ca:	55 1c       	adc	r5, r5
     8cc:	0a 94       	dec	r0
     8ce:	d2 f7       	brpl	.-12     	; 0x8c4 <__stack+0x65>
     8d0:	ee 2d       	mov	r30, r14
     8d2:	e8 1b       	sub	r30, r24
     8d4:	64 01       	movw	r12, r8
     8d6:	53 01       	movw	r10, r6
     8d8:	0e 2e       	mov	r0, r30
     8da:	04 c0       	rjmp	.+8      	; 0x8e4 <__stack+0x85>
     8dc:	d6 94       	lsr	r13
     8de:	c7 94       	ror	r12
     8e0:	b7 94       	ror	r11
     8e2:	a7 94       	ror	r10
     8e4:	0a 94       	dec	r0
     8e6:	d2 f7       	brpl	.-12     	; 0x8dc <__stack+0x7d>
     8e8:	a4 01       	movw	r20, r8
     8ea:	93 01       	movw	r18, r6
     8ec:	6f 96       	adiw	r28, 0x1f	; 31
     8ee:	0f ac       	ldd	r0, Y+63	; 0x3f
     8f0:	6f 97       	sbiw	r28, 0x1f	; 31
     8f2:	04 c0       	rjmp	.+8      	; 0x8fc <__stack+0x9d>
     8f4:	22 0f       	add	r18, r18
     8f6:	33 1f       	adc	r19, r19
     8f8:	44 1f       	adc	r20, r20
     8fa:	55 1f       	adc	r21, r21
     8fc:	0a 94       	dec	r0
     8fe:	d2 f7       	brpl	.-12     	; 0x8f4 <__stack+0x95>
     900:	6d a4       	ldd	r6, Y+45	; 0x2d
     902:	7e a4       	ldd	r7, Y+46	; 0x2e
     904:	8f a4       	ldd	r8, Y+47	; 0x2f
     906:	98 a8       	ldd	r9, Y+48	; 0x30
     908:	0e 2e       	mov	r0, r30
     90a:	04 c0       	rjmp	.+8      	; 0x914 <__stack+0xb5>
     90c:	96 94       	lsr	r9
     90e:	87 94       	ror	r8
     910:	77 94       	ror	r7
     912:	67 94       	ror	r6
     914:	0a 94       	dec	r0
     916:	d2 f7       	brpl	.-12     	; 0x90c <__stack+0xad>
     918:	84 01       	movw	r16, r8
     91a:	73 01       	movw	r14, r6
     91c:	e2 2a       	or	r14, r18
     91e:	f3 2a       	or	r15, r19
     920:	04 2b       	or	r16, r20
     922:	15 2b       	or	r17, r21
     924:	e9 a6       	std	Y+41, r14	; 0x29
     926:	fa a6       	std	Y+42, r15	; 0x2a
     928:	0b a7       	std	Y+43, r16	; 0x2b
     92a:	1c a7       	std	Y+44, r17	; 0x2c
     92c:	32 01       	movw	r6, r4
     92e:	88 24       	eor	r8, r8
     930:	99 24       	eor	r9, r9
     932:	92 01       	movw	r18, r4
     934:	81 01       	movw	r16, r2
     936:	20 70       	andi	r18, 0x00	; 0
     938:	30 70       	andi	r19, 0x00	; 0
     93a:	21 96       	adiw	r28, 0x01	; 1
     93c:	0c af       	std	Y+60, r16	; 0x3c
     93e:	1d af       	std	Y+61, r17	; 0x3d
     940:	2e af       	std	Y+62, r18	; 0x3e
     942:	3f af       	std	Y+63, r19	; 0x3f
     944:	21 97       	sbiw	r28, 0x01	; 1
     946:	c6 01       	movw	r24, r12
     948:	b5 01       	movw	r22, r10
     94a:	a4 01       	movw	r20, r8
     94c:	93 01       	movw	r18, r6
     94e:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
     952:	7b 01       	movw	r14, r22
     954:	8c 01       	movw	r16, r24
     956:	c6 01       	movw	r24, r12
     958:	b5 01       	movw	r22, r10
     95a:	a4 01       	movw	r20, r8
     95c:	93 01       	movw	r18, r6
     95e:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
     962:	c9 01       	movw	r24, r18
     964:	da 01       	movw	r26, r20
     966:	25 96       	adiw	r28, 0x05	; 5
     968:	8c af       	std	Y+60, r24	; 0x3c
     96a:	9d af       	std	Y+61, r25	; 0x3d
     96c:	ae af       	std	Y+62, r26	; 0x3e
     96e:	bf af       	std	Y+63, r27	; 0x3f
     970:	25 97       	sbiw	r28, 0x05	; 5
     972:	bc 01       	movw	r22, r24
     974:	cd 01       	movw	r24, r26
     976:	21 96       	adiw	r28, 0x01	; 1
     978:	2c ad       	ldd	r18, Y+60	; 0x3c
     97a:	3d ad       	ldd	r19, Y+61	; 0x3d
     97c:	4e ad       	ldd	r20, Y+62	; 0x3e
     97e:	5f ad       	ldd	r21, Y+63	; 0x3f
     980:	21 97       	sbiw	r28, 0x01	; 1
     982:	0e 94 98 2b 	call	0x5730	; 0x5730 <__mulsi3>
     986:	9b 01       	movw	r18, r22
     988:	ac 01       	movw	r20, r24
     98a:	87 01       	movw	r16, r14
     98c:	ff 24       	eor	r15, r15
     98e:	ee 24       	eor	r14, r14
     990:	a9 a4       	ldd	r10, Y+41	; 0x29
     992:	ba a4       	ldd	r11, Y+42	; 0x2a
     994:	cb a4       	ldd	r12, Y+43	; 0x2b
     996:	dc a4       	ldd	r13, Y+44	; 0x2c
     998:	c6 01       	movw	r24, r12
     99a:	aa 27       	eor	r26, r26
     99c:	bb 27       	eor	r27, r27
     99e:	5c 01       	movw	r10, r24
     9a0:	6d 01       	movw	r12, r26
     9a2:	ae 28       	or	r10, r14
     9a4:	bf 28       	or	r11, r15
     9a6:	c0 2a       	or	r12, r16
     9a8:	d1 2a       	or	r13, r17
     9aa:	a2 16       	cp	r10, r18
     9ac:	b3 06       	cpc	r11, r19
     9ae:	c4 06       	cpc	r12, r20
     9b0:	d5 06       	cpc	r13, r21
     9b2:	60 f5       	brcc	.+88     	; 0xa0c <__stack+0x1ad>
     9b4:	25 96       	adiw	r28, 0x05	; 5
     9b6:	6c ad       	ldd	r22, Y+60	; 0x3c
     9b8:	7d ad       	ldd	r23, Y+61	; 0x3d
     9ba:	8e ad       	ldd	r24, Y+62	; 0x3e
     9bc:	9f ad       	ldd	r25, Y+63	; 0x3f
     9be:	25 97       	sbiw	r28, 0x05	; 5
     9c0:	61 50       	subi	r22, 0x01	; 1
     9c2:	70 40       	sbci	r23, 0x00	; 0
     9c4:	80 40       	sbci	r24, 0x00	; 0
     9c6:	90 40       	sbci	r25, 0x00	; 0
     9c8:	25 96       	adiw	r28, 0x05	; 5
     9ca:	6c af       	std	Y+60, r22	; 0x3c
     9cc:	7d af       	std	Y+61, r23	; 0x3d
     9ce:	8e af       	std	Y+62, r24	; 0x3e
     9d0:	9f af       	std	Y+63, r25	; 0x3f
     9d2:	25 97       	sbiw	r28, 0x05	; 5
     9d4:	a2 0c       	add	r10, r2
     9d6:	b3 1c       	adc	r11, r3
     9d8:	c4 1c       	adc	r12, r4
     9da:	d5 1c       	adc	r13, r5
     9dc:	a2 14       	cp	r10, r2
     9de:	b3 04       	cpc	r11, r3
     9e0:	c4 04       	cpc	r12, r4
     9e2:	d5 04       	cpc	r13, r5
     9e4:	98 f0       	brcs	.+38     	; 0xa0c <__stack+0x1ad>
     9e6:	a2 16       	cp	r10, r18
     9e8:	b3 06       	cpc	r11, r19
     9ea:	c4 06       	cpc	r12, r20
     9ec:	d5 06       	cpc	r13, r21
     9ee:	70 f4       	brcc	.+28     	; 0xa0c <__stack+0x1ad>
     9f0:	61 50       	subi	r22, 0x01	; 1
     9f2:	70 40       	sbci	r23, 0x00	; 0
     9f4:	80 40       	sbci	r24, 0x00	; 0
     9f6:	90 40       	sbci	r25, 0x00	; 0
     9f8:	25 96       	adiw	r28, 0x05	; 5
     9fa:	6c af       	std	Y+60, r22	; 0x3c
     9fc:	7d af       	std	Y+61, r23	; 0x3d
     9fe:	8e af       	std	Y+62, r24	; 0x3e
     a00:	9f af       	std	Y+63, r25	; 0x3f
     a02:	25 97       	sbiw	r28, 0x05	; 5
     a04:	a2 0c       	add	r10, r2
     a06:	b3 1c       	adc	r11, r3
     a08:	c4 1c       	adc	r12, r4
     a0a:	d5 1c       	adc	r13, r5
     a0c:	a2 1a       	sub	r10, r18
     a0e:	b3 0a       	sbc	r11, r19
     a10:	c4 0a       	sbc	r12, r20
     a12:	d5 0a       	sbc	r13, r21
     a14:	c6 01       	movw	r24, r12
     a16:	b5 01       	movw	r22, r10
     a18:	a4 01       	movw	r20, r8
     a1a:	93 01       	movw	r18, r6
     a1c:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
     a20:	7b 01       	movw	r14, r22
     a22:	8c 01       	movw	r16, r24
     a24:	c6 01       	movw	r24, r12
     a26:	b5 01       	movw	r22, r10
     a28:	a4 01       	movw	r20, r8
     a2a:	93 01       	movw	r18, r6
     a2c:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
     a30:	c9 01       	movw	r24, r18
     a32:	da 01       	movw	r26, r20
     a34:	3c 01       	movw	r6, r24
     a36:	4d 01       	movw	r8, r26
     a38:	c4 01       	movw	r24, r8
     a3a:	b3 01       	movw	r22, r6
     a3c:	21 96       	adiw	r28, 0x01	; 1
     a3e:	2c ad       	ldd	r18, Y+60	; 0x3c
     a40:	3d ad       	ldd	r19, Y+61	; 0x3d
     a42:	4e ad       	ldd	r20, Y+62	; 0x3e
     a44:	5f ad       	ldd	r21, Y+63	; 0x3f
     a46:	21 97       	sbiw	r28, 0x01	; 1
     a48:	0e 94 98 2b 	call	0x5730	; 0x5730 <__mulsi3>
     a4c:	9b 01       	movw	r18, r22
     a4e:	ac 01       	movw	r20, r24
     a50:	87 01       	movw	r16, r14
     a52:	ff 24       	eor	r15, r15
     a54:	ee 24       	eor	r14, r14
     a56:	89 a5       	ldd	r24, Y+41	; 0x29
     a58:	9a a5       	ldd	r25, Y+42	; 0x2a
     a5a:	ab a5       	ldd	r26, Y+43	; 0x2b
     a5c:	bc a5       	ldd	r27, Y+44	; 0x2c
     a5e:	a0 70       	andi	r26, 0x00	; 0
     a60:	b0 70       	andi	r27, 0x00	; 0
     a62:	57 01       	movw	r10, r14
     a64:	68 01       	movw	r12, r16
     a66:	a8 2a       	or	r10, r24
     a68:	b9 2a       	or	r11, r25
     a6a:	ca 2a       	or	r12, r26
     a6c:	db 2a       	or	r13, r27
     a6e:	a2 16       	cp	r10, r18
     a70:	b3 06       	cpc	r11, r19
     a72:	c4 06       	cpc	r12, r20
     a74:	d5 06       	cpc	r13, r21
     a76:	e0 f4       	brcc	.+56     	; 0xab0 <__stack+0x251>
     a78:	08 94       	sec
     a7a:	61 08       	sbc	r6, r1
     a7c:	71 08       	sbc	r7, r1
     a7e:	81 08       	sbc	r8, r1
     a80:	91 08       	sbc	r9, r1
     a82:	a2 0c       	add	r10, r2
     a84:	b3 1c       	adc	r11, r3
     a86:	c4 1c       	adc	r12, r4
     a88:	d5 1c       	adc	r13, r5
     a8a:	a2 14       	cp	r10, r2
     a8c:	b3 04       	cpc	r11, r3
     a8e:	c4 04       	cpc	r12, r4
     a90:	d5 04       	cpc	r13, r5
     a92:	70 f0       	brcs	.+28     	; 0xab0 <__stack+0x251>
     a94:	a2 16       	cp	r10, r18
     a96:	b3 06       	cpc	r11, r19
     a98:	c4 06       	cpc	r12, r20
     a9a:	d5 06       	cpc	r13, r21
     a9c:	48 f4       	brcc	.+18     	; 0xab0 <__stack+0x251>
     a9e:	08 94       	sec
     aa0:	61 08       	sbc	r6, r1
     aa2:	71 08       	sbc	r7, r1
     aa4:	81 08       	sbc	r8, r1
     aa6:	91 08       	sbc	r9, r1
     aa8:	a2 0c       	add	r10, r2
     aaa:	b3 1c       	adc	r11, r3
     aac:	c4 1c       	adc	r12, r4
     aae:	d5 1c       	adc	r13, r5
     ab0:	8d a5       	ldd	r24, Y+45	; 0x2d
     ab2:	9e a5       	ldd	r25, Y+46	; 0x2e
     ab4:	af a5       	ldd	r26, Y+47	; 0x2f
     ab6:	b8 a9       	ldd	r27, Y+48	; 0x30
     ab8:	6f 96       	adiw	r28, 0x1f	; 31
     aba:	0f ac       	ldd	r0, Y+63	; 0x3f
     abc:	6f 97       	sbiw	r28, 0x1f	; 31
     abe:	04 c0       	rjmp	.+8      	; 0xac8 <__stack+0x269>
     ac0:	88 0f       	add	r24, r24
     ac2:	99 1f       	adc	r25, r25
     ac4:	aa 1f       	adc	r26, r26
     ac6:	bb 1f       	adc	r27, r27
     ac8:	0a 94       	dec	r0
     aca:	d2 f7       	brpl	.-12     	; 0xac0 <__stack+0x261>
     acc:	8d a7       	std	Y+45, r24	; 0x2d
     ace:	9e a7       	std	Y+46, r25	; 0x2e
     ad0:	af a7       	std	Y+47, r26	; 0x2f
     ad2:	b8 ab       	std	Y+48, r27	; 0x30
     ad4:	a2 1a       	sub	r10, r18
     ad6:	b3 0a       	sbc	r11, r19
     ad8:	c4 0a       	sbc	r12, r20
     ada:	d5 0a       	sbc	r13, r21
     adc:	25 96       	adiw	r28, 0x05	; 5
     ade:	ec ac       	ldd	r14, Y+60	; 0x3c
     ae0:	fd ac       	ldd	r15, Y+61	; 0x3d
     ae2:	0e ad       	ldd	r16, Y+62	; 0x3e
     ae4:	1f ad       	ldd	r17, Y+63	; 0x3f
     ae6:	25 97       	sbiw	r28, 0x05	; 5
     ae8:	d7 01       	movw	r26, r14
     aea:	99 27       	eor	r25, r25
     aec:	88 27       	eor	r24, r24
     aee:	68 2a       	or	r6, r24
     af0:	79 2a       	or	r7, r25
     af2:	8a 2a       	or	r8, r26
     af4:	9b 2a       	or	r9, r27
     af6:	82 01       	movw	r16, r4
     af8:	22 27       	eor	r18, r18
     afa:	33 27       	eor	r19, r19
     afc:	29 96       	adiw	r28, 0x09	; 9
     afe:	0c af       	std	Y+60, r16	; 0x3c
     b00:	1d af       	std	Y+61, r17	; 0x3d
     b02:	2e af       	std	Y+62, r18	; 0x3e
     b04:	3f af       	std	Y+63, r19	; 0x3f
     b06:	29 97       	sbiw	r28, 0x09	; 9
     b08:	a2 01       	movw	r20, r4
     b0a:	91 01       	movw	r18, r2
     b0c:	40 70       	andi	r20, 0x00	; 0
     b0e:	50 70       	andi	r21, 0x00	; 0
     b10:	2d 96       	adiw	r28, 0x0d	; 13
     b12:	2c af       	std	Y+60, r18	; 0x3c
     b14:	3d af       	std	Y+61, r19	; 0x3d
     b16:	4e af       	std	Y+62, r20	; 0x3e
     b18:	5f af       	std	Y+63, r21	; 0x3f
     b1a:	2d 97       	sbiw	r28, 0x0d	; 13
     b1c:	c6 01       	movw	r24, r12
     b1e:	b5 01       	movw	r22, r10
     b20:	29 96       	adiw	r28, 0x09	; 9
     b22:	2c ad       	ldd	r18, Y+60	; 0x3c
     b24:	3d ad       	ldd	r19, Y+61	; 0x3d
     b26:	4e ad       	ldd	r20, Y+62	; 0x3e
     b28:	5f ad       	ldd	r21, Y+63	; 0x3f
     b2a:	29 97       	sbiw	r28, 0x09	; 9
     b2c:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
     b30:	7b 01       	movw	r14, r22
     b32:	8c 01       	movw	r16, r24
     b34:	c6 01       	movw	r24, r12
     b36:	b5 01       	movw	r22, r10
     b38:	29 96       	adiw	r28, 0x09	; 9
     b3a:	2c ad       	ldd	r18, Y+60	; 0x3c
     b3c:	3d ad       	ldd	r19, Y+61	; 0x3d
     b3e:	4e ad       	ldd	r20, Y+62	; 0x3e
     b40:	5f ad       	ldd	r21, Y+63	; 0x3f
     b42:	29 97       	sbiw	r28, 0x09	; 9
     b44:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
     b48:	c9 01       	movw	r24, r18
     b4a:	da 01       	movw	r26, r20
     b4c:	61 96       	adiw	r28, 0x11	; 17
     b4e:	8c af       	std	Y+60, r24	; 0x3c
     b50:	9d af       	std	Y+61, r25	; 0x3d
     b52:	ae af       	std	Y+62, r26	; 0x3e
     b54:	bf af       	std	Y+63, r27	; 0x3f
     b56:	61 97       	sbiw	r28, 0x11	; 17
     b58:	bc 01       	movw	r22, r24
     b5a:	cd 01       	movw	r24, r26
     b5c:	2d 96       	adiw	r28, 0x0d	; 13
     b5e:	2c ad       	ldd	r18, Y+60	; 0x3c
     b60:	3d ad       	ldd	r19, Y+61	; 0x3d
     b62:	4e ad       	ldd	r20, Y+62	; 0x3e
     b64:	5f ad       	ldd	r21, Y+63	; 0x3f
     b66:	2d 97       	sbiw	r28, 0x0d	; 13
     b68:	0e 94 98 2b 	call	0x5730	; 0x5730 <__mulsi3>
     b6c:	9b 01       	movw	r18, r22
     b6e:	ac 01       	movw	r20, r24
     b70:	87 01       	movw	r16, r14
     b72:	ff 24       	eor	r15, r15
     b74:	ee 24       	eor	r14, r14
     b76:	ad a4       	ldd	r10, Y+45	; 0x2d
     b78:	be a4       	ldd	r11, Y+46	; 0x2e
     b7a:	cf a4       	ldd	r12, Y+47	; 0x2f
     b7c:	d8 a8       	ldd	r13, Y+48	; 0x30
     b7e:	c6 01       	movw	r24, r12
     b80:	aa 27       	eor	r26, r26
     b82:	bb 27       	eor	r27, r27
     b84:	57 01       	movw	r10, r14
     b86:	68 01       	movw	r12, r16
     b88:	a8 2a       	or	r10, r24
     b8a:	b9 2a       	or	r11, r25
     b8c:	ca 2a       	or	r12, r26
     b8e:	db 2a       	or	r13, r27
     b90:	a2 16       	cp	r10, r18
     b92:	b3 06       	cpc	r11, r19
     b94:	c4 06       	cpc	r12, r20
     b96:	d5 06       	cpc	r13, r21
     b98:	60 f5       	brcc	.+88     	; 0xbf2 <__stack+0x393>
     b9a:	61 96       	adiw	r28, 0x11	; 17
     b9c:	6c ad       	ldd	r22, Y+60	; 0x3c
     b9e:	7d ad       	ldd	r23, Y+61	; 0x3d
     ba0:	8e ad       	ldd	r24, Y+62	; 0x3e
     ba2:	9f ad       	ldd	r25, Y+63	; 0x3f
     ba4:	61 97       	sbiw	r28, 0x11	; 17
     ba6:	61 50       	subi	r22, 0x01	; 1
     ba8:	70 40       	sbci	r23, 0x00	; 0
     baa:	80 40       	sbci	r24, 0x00	; 0
     bac:	90 40       	sbci	r25, 0x00	; 0
     bae:	61 96       	adiw	r28, 0x11	; 17
     bb0:	6c af       	std	Y+60, r22	; 0x3c
     bb2:	7d af       	std	Y+61, r23	; 0x3d
     bb4:	8e af       	std	Y+62, r24	; 0x3e
     bb6:	9f af       	std	Y+63, r25	; 0x3f
     bb8:	61 97       	sbiw	r28, 0x11	; 17
     bba:	a2 0c       	add	r10, r2
     bbc:	b3 1c       	adc	r11, r3
     bbe:	c4 1c       	adc	r12, r4
     bc0:	d5 1c       	adc	r13, r5
     bc2:	a2 14       	cp	r10, r2
     bc4:	b3 04       	cpc	r11, r3
     bc6:	c4 04       	cpc	r12, r4
     bc8:	d5 04       	cpc	r13, r5
     bca:	98 f0       	brcs	.+38     	; 0xbf2 <__stack+0x393>
     bcc:	a2 16       	cp	r10, r18
     bce:	b3 06       	cpc	r11, r19
     bd0:	c4 06       	cpc	r12, r20
     bd2:	d5 06       	cpc	r13, r21
     bd4:	70 f4       	brcc	.+28     	; 0xbf2 <__stack+0x393>
     bd6:	61 50       	subi	r22, 0x01	; 1
     bd8:	70 40       	sbci	r23, 0x00	; 0
     bda:	80 40       	sbci	r24, 0x00	; 0
     bdc:	90 40       	sbci	r25, 0x00	; 0
     bde:	61 96       	adiw	r28, 0x11	; 17
     be0:	6c af       	std	Y+60, r22	; 0x3c
     be2:	7d af       	std	Y+61, r23	; 0x3d
     be4:	8e af       	std	Y+62, r24	; 0x3e
     be6:	9f af       	std	Y+63, r25	; 0x3f
     be8:	61 97       	sbiw	r28, 0x11	; 17
     bea:	a2 0c       	add	r10, r2
     bec:	b3 1c       	adc	r11, r3
     bee:	c4 1c       	adc	r12, r4
     bf0:	d5 1c       	adc	r13, r5
     bf2:	a2 1a       	sub	r10, r18
     bf4:	b3 0a       	sbc	r11, r19
     bf6:	c4 0a       	sbc	r12, r20
     bf8:	d5 0a       	sbc	r13, r21
     bfa:	c6 01       	movw	r24, r12
     bfc:	b5 01       	movw	r22, r10
     bfe:	29 96       	adiw	r28, 0x09	; 9
     c00:	2c ad       	ldd	r18, Y+60	; 0x3c
     c02:	3d ad       	ldd	r19, Y+61	; 0x3d
     c04:	4e ad       	ldd	r20, Y+62	; 0x3e
     c06:	5f ad       	ldd	r21, Y+63	; 0x3f
     c08:	29 97       	sbiw	r28, 0x09	; 9
     c0a:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
     c0e:	7b 01       	movw	r14, r22
     c10:	8c 01       	movw	r16, r24
     c12:	c6 01       	movw	r24, r12
     c14:	b5 01       	movw	r22, r10
     c16:	29 96       	adiw	r28, 0x09	; 9
     c18:	2c ad       	ldd	r18, Y+60	; 0x3c
     c1a:	3d ad       	ldd	r19, Y+61	; 0x3d
     c1c:	4e ad       	ldd	r20, Y+62	; 0x3e
     c1e:	5f ad       	ldd	r21, Y+63	; 0x3f
     c20:	29 97       	sbiw	r28, 0x09	; 9
     c22:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
     c26:	c9 01       	movw	r24, r18
     c28:	da 01       	movw	r26, r20
     c2a:	5c 01       	movw	r10, r24
     c2c:	6d 01       	movw	r12, r26
     c2e:	c6 01       	movw	r24, r12
     c30:	b5 01       	movw	r22, r10
     c32:	2d 96       	adiw	r28, 0x0d	; 13
     c34:	2c ad       	ldd	r18, Y+60	; 0x3c
     c36:	3d ad       	ldd	r19, Y+61	; 0x3d
     c38:	4e ad       	ldd	r20, Y+62	; 0x3e
     c3a:	5f ad       	ldd	r21, Y+63	; 0x3f
     c3c:	2d 97       	sbiw	r28, 0x0d	; 13
     c3e:	0e 94 98 2b 	call	0x5730	; 0x5730 <__mulsi3>
     c42:	9b 01       	movw	r18, r22
     c44:	ac 01       	movw	r20, r24
     c46:	87 01       	movw	r16, r14
     c48:	ff 24       	eor	r15, r15
     c4a:	ee 24       	eor	r14, r14
     c4c:	8d a5       	ldd	r24, Y+45	; 0x2d
     c4e:	9e a5       	ldd	r25, Y+46	; 0x2e
     c50:	af a5       	ldd	r26, Y+47	; 0x2f
     c52:	b8 a9       	ldd	r27, Y+48	; 0x30
     c54:	a0 70       	andi	r26, 0x00	; 0
     c56:	b0 70       	andi	r27, 0x00	; 0
     c58:	e8 2a       	or	r14, r24
     c5a:	f9 2a       	or	r15, r25
     c5c:	0a 2b       	or	r16, r26
     c5e:	1b 2b       	or	r17, r27
     c60:	e2 16       	cp	r14, r18
     c62:	f3 06       	cpc	r15, r19
     c64:	04 07       	cpc	r16, r20
     c66:	15 07       	cpc	r17, r21
     c68:	c0 f4       	brcc	.+48     	; 0xc9a <__stack+0x43b>
     c6a:	08 94       	sec
     c6c:	a1 08       	sbc	r10, r1
     c6e:	b1 08       	sbc	r11, r1
     c70:	c1 08       	sbc	r12, r1
     c72:	d1 08       	sbc	r13, r1
     c74:	e2 0c       	add	r14, r2
     c76:	f3 1c       	adc	r15, r3
     c78:	04 1d       	adc	r16, r4
     c7a:	15 1d       	adc	r17, r5
     c7c:	e2 14       	cp	r14, r2
     c7e:	f3 04       	cpc	r15, r3
     c80:	04 05       	cpc	r16, r4
     c82:	15 05       	cpc	r17, r5
     c84:	50 f0       	brcs	.+20     	; 0xc9a <__stack+0x43b>
     c86:	e2 16       	cp	r14, r18
     c88:	f3 06       	cpc	r15, r19
     c8a:	04 07       	cpc	r16, r20
     c8c:	15 07       	cpc	r17, r21
     c8e:	28 f4       	brcc	.+10     	; 0xc9a <__stack+0x43b>
     c90:	08 94       	sec
     c92:	a1 08       	sbc	r10, r1
     c94:	b1 08       	sbc	r11, r1
     c96:	c1 08       	sbc	r12, r1
     c98:	d1 08       	sbc	r13, r1
     c9a:	61 96       	adiw	r28, 0x11	; 17
     c9c:	ec ac       	ldd	r14, Y+60	; 0x3c
     c9e:	fd ac       	ldd	r15, Y+61	; 0x3d
     ca0:	0e ad       	ldd	r16, Y+62	; 0x3e
     ca2:	1f ad       	ldd	r17, Y+63	; 0x3f
     ca4:	61 97       	sbiw	r28, 0x11	; 17
     ca6:	d7 01       	movw	r26, r14
     ca8:	99 27       	eor	r25, r25
     caa:	88 27       	eor	r24, r24
     cac:	96 01       	movw	r18, r12
     cae:	85 01       	movw	r16, r10
     cb0:	08 2b       	or	r16, r24
     cb2:	19 2b       	or	r17, r25
     cb4:	2a 2b       	or	r18, r26
     cb6:	3b 2b       	or	r19, r27
     cb8:	09 ab       	std	Y+49, r16	; 0x31
     cba:	1a ab       	std	Y+50, r17	; 0x32
     cbc:	2b ab       	std	Y+51, r18	; 0x33
     cbe:	3c ab       	std	Y+52, r19	; 0x34
     cc0:	62 c2       	rjmp	.+1220   	; 0x1186 <__stack+0x927>
     cc2:	6e 14       	cp	r6, r14
     cc4:	7f 04       	cpc	r7, r15
     cc6:	80 06       	cpc	r8, r16
     cc8:	91 06       	cpc	r9, r17
     cca:	08 f4       	brcc	.+2      	; 0xcce <__stack+0x46f>
     ccc:	51 c2       	rjmp	.+1186   	; 0x1170 <__stack+0x911>
     cce:	20 e0       	ldi	r18, 0x00	; 0
     cd0:	e2 16       	cp	r14, r18
     cd2:	20 e0       	ldi	r18, 0x00	; 0
     cd4:	f2 06       	cpc	r15, r18
     cd6:	21 e0       	ldi	r18, 0x01	; 1
     cd8:	02 07       	cpc	r16, r18
     cda:	20 e0       	ldi	r18, 0x00	; 0
     cdc:	12 07       	cpc	r17, r18
     cde:	88 f4       	brcc	.+34     	; 0xd02 <__stack+0x4a3>
     ce0:	3f ef       	ldi	r19, 0xFF	; 255
     ce2:	e3 16       	cp	r14, r19
     ce4:	f1 04       	cpc	r15, r1
     ce6:	01 05       	cpc	r16, r1
     ce8:	11 05       	cpc	r17, r1
     cea:	31 f0       	breq	.+12     	; 0xcf8 <__stack+0x499>
     cec:	28 f0       	brcs	.+10     	; 0xcf8 <__stack+0x499>
     cee:	48 e0       	ldi	r20, 0x08	; 8
     cf0:	50 e0       	ldi	r21, 0x00	; 0
     cf2:	60 e0       	ldi	r22, 0x00	; 0
     cf4:	70 e0       	ldi	r23, 0x00	; 0
     cf6:	17 c0       	rjmp	.+46     	; 0xd26 <__stack+0x4c7>
     cf8:	40 e0       	ldi	r20, 0x00	; 0
     cfa:	50 e0       	ldi	r21, 0x00	; 0
     cfc:	60 e0       	ldi	r22, 0x00	; 0
     cfe:	70 e0       	ldi	r23, 0x00	; 0
     d00:	12 c0       	rjmp	.+36     	; 0xd26 <__stack+0x4c7>
     d02:	40 e0       	ldi	r20, 0x00	; 0
     d04:	e4 16       	cp	r14, r20
     d06:	40 e0       	ldi	r20, 0x00	; 0
     d08:	f4 06       	cpc	r15, r20
     d0a:	40 e0       	ldi	r20, 0x00	; 0
     d0c:	04 07       	cpc	r16, r20
     d0e:	41 e0       	ldi	r20, 0x01	; 1
     d10:	14 07       	cpc	r17, r20
     d12:	28 f0       	brcs	.+10     	; 0xd1e <__stack+0x4bf>
     d14:	48 e1       	ldi	r20, 0x18	; 24
     d16:	50 e0       	ldi	r21, 0x00	; 0
     d18:	60 e0       	ldi	r22, 0x00	; 0
     d1a:	70 e0       	ldi	r23, 0x00	; 0
     d1c:	04 c0       	rjmp	.+8      	; 0xd26 <__stack+0x4c7>
     d1e:	40 e1       	ldi	r20, 0x10	; 16
     d20:	50 e0       	ldi	r21, 0x00	; 0
     d22:	60 e0       	ldi	r22, 0x00	; 0
     d24:	70 e0       	ldi	r23, 0x00	; 0
     d26:	d8 01       	movw	r26, r16
     d28:	c7 01       	movw	r24, r14
     d2a:	04 2e       	mov	r0, r20
     d2c:	04 c0       	rjmp	.+8      	; 0xd36 <__stack+0x4d7>
     d2e:	b6 95       	lsr	r27
     d30:	a7 95       	ror	r26
     d32:	97 95       	ror	r25
     d34:	87 95       	ror	r24
     d36:	0a 94       	dec	r0
     d38:	d2 f7       	brpl	.-12     	; 0xd2e <__stack+0x4cf>
     d3a:	85 57       	subi	r24, 0x75	; 117
     d3c:	9f 4f       	sbci	r25, 0xFF	; 255
     d3e:	dc 01       	movw	r26, r24
     d40:	2c 91       	ld	r18, X
     d42:	30 e2       	ldi	r19, 0x20	; 32
     d44:	a3 2e       	mov	r10, r19
     d46:	b1 2c       	mov	r11, r1
     d48:	c1 2c       	mov	r12, r1
     d4a:	d1 2c       	mov	r13, r1
     d4c:	d6 01       	movw	r26, r12
     d4e:	c5 01       	movw	r24, r10
     d50:	84 1b       	sub	r24, r20
     d52:	95 0b       	sbc	r25, r21
     d54:	a6 0b       	sbc	r26, r22
     d56:	b7 0b       	sbc	r27, r23
     d58:	82 1b       	sub	r24, r18
     d5a:	91 09       	sbc	r25, r1
     d5c:	a1 09       	sbc	r26, r1
     d5e:	b1 09       	sbc	r27, r1
     d60:	00 97       	sbiw	r24, 0x00	; 0
     d62:	a1 05       	cpc	r26, r1
     d64:	b1 05       	cpc	r27, r1
     d66:	89 f4       	brne	.+34     	; 0xd8a <__stack+0x52b>
     d68:	e6 14       	cp	r14, r6
     d6a:	f7 04       	cpc	r15, r7
     d6c:	08 05       	cpc	r16, r8
     d6e:	19 05       	cpc	r17, r9
     d70:	08 f4       	brcc	.+2      	; 0xd74 <__stack+0x515>
     d72:	f2 c1       	rjmp	.+996    	; 0x1158 <__stack+0x8f9>
     d74:	6d a4       	ldd	r6, Y+45	; 0x2d
     d76:	7e a4       	ldd	r7, Y+46	; 0x2e
     d78:	8f a4       	ldd	r8, Y+47	; 0x2f
     d7a:	98 a8       	ldd	r9, Y+48	; 0x30
     d7c:	62 14       	cp	r6, r2
     d7e:	73 04       	cpc	r7, r3
     d80:	84 04       	cpc	r8, r4
     d82:	95 04       	cpc	r9, r5
     d84:	08 f0       	brcs	.+2      	; 0xd88 <__stack+0x529>
     d86:	e8 c1       	rjmp	.+976    	; 0x1158 <__stack+0x8f9>
     d88:	f3 c1       	rjmp	.+998    	; 0x1170 <__stack+0x911>
     d8a:	6e 96       	adiw	r28, 0x1e	; 30
     d8c:	8f af       	std	Y+63, r24	; 0x3f
     d8e:	6e 97       	sbiw	r28, 0x1e	; 30
     d90:	08 2e       	mov	r0, r24
     d92:	04 c0       	rjmp	.+8      	; 0xd9c <__stack+0x53d>
     d94:	ee 0c       	add	r14, r14
     d96:	ff 1c       	adc	r15, r15
     d98:	00 1f       	adc	r16, r16
     d9a:	11 1f       	adc	r17, r17
     d9c:	0a 94       	dec	r0
     d9e:	d2 f7       	brpl	.-12     	; 0xd94 <__stack+0x535>
     da0:	6a 2d       	mov	r22, r10
     da2:	68 1b       	sub	r22, r24
     da4:	d2 01       	movw	r26, r4
     da6:	c1 01       	movw	r24, r2
     da8:	06 2e       	mov	r0, r22
     daa:	04 c0       	rjmp	.+8      	; 0xdb4 <__stack+0x555>
     dac:	b6 95       	lsr	r27
     dae:	a7 95       	ror	r26
     db0:	97 95       	ror	r25
     db2:	87 95       	ror	r24
     db4:	0a 94       	dec	r0
     db6:	d2 f7       	brpl	.-12     	; 0xdac <__stack+0x54d>
     db8:	5c 01       	movw	r10, r24
     dba:	6d 01       	movw	r12, r26
     dbc:	ae 28       	or	r10, r14
     dbe:	bf 28       	or	r11, r15
     dc0:	c0 2a       	or	r12, r16
     dc2:	d1 2a       	or	r13, r17
     dc4:	ad a2       	std	Y+37, r10	; 0x25
     dc6:	be a2       	std	Y+38, r11	; 0x26
     dc8:	cf a2       	std	Y+39, r12	; 0x27
     dca:	d8 a6       	std	Y+40, r13	; 0x28
     dcc:	72 01       	movw	r14, r4
     dce:	61 01       	movw	r12, r2
     dd0:	6e 96       	adiw	r28, 0x1e	; 30
     dd2:	0f ac       	ldd	r0, Y+63	; 0x3f
     dd4:	6e 97       	sbiw	r28, 0x1e	; 30
     dd6:	04 c0       	rjmp	.+8      	; 0xde0 <__stack+0x581>
     dd8:	cc 0c       	add	r12, r12
     dda:	dd 1c       	adc	r13, r13
     ddc:	ee 1c       	adc	r14, r14
     dde:	ff 1c       	adc	r15, r15
     de0:	0a 94       	dec	r0
     de2:	d2 f7       	brpl	.-12     	; 0xdd8 <__stack+0x579>
     de4:	c9 a2       	std	Y+33, r12	; 0x21
     de6:	da a2       	std	Y+34, r13	; 0x22
     de8:	eb a2       	std	Y+35, r14	; 0x23
     dea:	fc a2       	std	Y+36, r15	; 0x24
     dec:	64 01       	movw	r12, r8
     dee:	53 01       	movw	r10, r6
     df0:	06 2e       	mov	r0, r22
     df2:	04 c0       	rjmp	.+8      	; 0xdfc <__stack+0x59d>
     df4:	d6 94       	lsr	r13
     df6:	c7 94       	ror	r12
     df8:	b7 94       	ror	r11
     dfa:	a7 94       	ror	r10
     dfc:	0a 94       	dec	r0
     dfe:	d2 f7       	brpl	.-12     	; 0xdf4 <__stack+0x595>
     e00:	d4 01       	movw	r26, r8
     e02:	c3 01       	movw	r24, r6
     e04:	6e 96       	adiw	r28, 0x1e	; 30
     e06:	0f ac       	ldd	r0, Y+63	; 0x3f
     e08:	6e 97       	sbiw	r28, 0x1e	; 30
     e0a:	04 c0       	rjmp	.+8      	; 0xe14 <__stack+0x5b5>
     e0c:	88 0f       	add	r24, r24
     e0e:	99 1f       	adc	r25, r25
     e10:	aa 1f       	adc	r26, r26
     e12:	bb 1f       	adc	r27, r27
     e14:	0a 94       	dec	r0
     e16:	d2 f7       	brpl	.-12     	; 0xe0c <__stack+0x5ad>
     e18:	ed a4       	ldd	r14, Y+45	; 0x2d
     e1a:	fe a4       	ldd	r15, Y+46	; 0x2e
     e1c:	0f a5       	ldd	r16, Y+47	; 0x2f
     e1e:	18 a9       	ldd	r17, Y+48	; 0x30
     e20:	04 c0       	rjmp	.+8      	; 0xe2a <__stack+0x5cb>
     e22:	16 95       	lsr	r17
     e24:	07 95       	ror	r16
     e26:	f7 94       	ror	r15
     e28:	e7 94       	ror	r14
     e2a:	6a 95       	dec	r22
     e2c:	d2 f7       	brpl	.-12     	; 0xe22 <__stack+0x5c3>
     e2e:	37 01       	movw	r6, r14
     e30:	48 01       	movw	r8, r16
     e32:	68 2a       	or	r6, r24
     e34:	79 2a       	or	r7, r25
     e36:	8a 2a       	or	r8, r26
     e38:	9b 2a       	or	r9, r27
     e3a:	6d 8e       	std	Y+29, r6	; 0x1d
     e3c:	7e 8e       	std	Y+30, r7	; 0x1e
     e3e:	8f 8e       	std	Y+31, r8	; 0x1f
     e40:	98 a2       	std	Y+32, r9	; 0x20
     e42:	ed a0       	ldd	r14, Y+37	; 0x25
     e44:	fe a0       	ldd	r15, Y+38	; 0x26
     e46:	0f a1       	ldd	r16, Y+39	; 0x27
     e48:	18 a5       	ldd	r17, Y+40	; 0x28
     e4a:	38 01       	movw	r6, r16
     e4c:	88 24       	eor	r8, r8
     e4e:	99 24       	eor	r9, r9
     e50:	98 01       	movw	r18, r16
     e52:	87 01       	movw	r16, r14
     e54:	20 70       	andi	r18, 0x00	; 0
     e56:	30 70       	andi	r19, 0x00	; 0
     e58:	65 96       	adiw	r28, 0x15	; 21
     e5a:	0c af       	std	Y+60, r16	; 0x3c
     e5c:	1d af       	std	Y+61, r17	; 0x3d
     e5e:	2e af       	std	Y+62, r18	; 0x3e
     e60:	3f af       	std	Y+63, r19	; 0x3f
     e62:	65 97       	sbiw	r28, 0x15	; 21
     e64:	c6 01       	movw	r24, r12
     e66:	b5 01       	movw	r22, r10
     e68:	a4 01       	movw	r20, r8
     e6a:	93 01       	movw	r18, r6
     e6c:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
     e70:	7b 01       	movw	r14, r22
     e72:	8c 01       	movw	r16, r24
     e74:	c6 01       	movw	r24, r12
     e76:	b5 01       	movw	r22, r10
     e78:	a4 01       	movw	r20, r8
     e7a:	93 01       	movw	r18, r6
     e7c:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
     e80:	c9 01       	movw	r24, r18
     e82:	da 01       	movw	r26, r20
     e84:	1c 01       	movw	r2, r24
     e86:	2d 01       	movw	r4, r26
     e88:	c2 01       	movw	r24, r4
     e8a:	b1 01       	movw	r22, r2
     e8c:	65 96       	adiw	r28, 0x15	; 21
     e8e:	2c ad       	ldd	r18, Y+60	; 0x3c
     e90:	3d ad       	ldd	r19, Y+61	; 0x3d
     e92:	4e ad       	ldd	r20, Y+62	; 0x3e
     e94:	5f ad       	ldd	r21, Y+63	; 0x3f
     e96:	65 97       	sbiw	r28, 0x15	; 21
     e98:	0e 94 98 2b 	call	0x5730	; 0x5730 <__mulsi3>
     e9c:	9b 01       	movw	r18, r22
     e9e:	ac 01       	movw	r20, r24
     ea0:	87 01       	movw	r16, r14
     ea2:	ff 24       	eor	r15, r15
     ea4:	ee 24       	eor	r14, r14
     ea6:	ad 8c       	ldd	r10, Y+29	; 0x1d
     ea8:	be 8c       	ldd	r11, Y+30	; 0x1e
     eaa:	cf 8c       	ldd	r12, Y+31	; 0x1f
     eac:	d8 a0       	ldd	r13, Y+32	; 0x20
     eae:	c6 01       	movw	r24, r12
     eb0:	aa 27       	eor	r26, r26
     eb2:	bb 27       	eor	r27, r27
     eb4:	57 01       	movw	r10, r14
     eb6:	68 01       	movw	r12, r16
     eb8:	a8 2a       	or	r10, r24
     eba:	b9 2a       	or	r11, r25
     ebc:	ca 2a       	or	r12, r26
     ebe:	db 2a       	or	r13, r27
     ec0:	a2 16       	cp	r10, r18
     ec2:	b3 06       	cpc	r11, r19
     ec4:	c4 06       	cpc	r12, r20
     ec6:	d5 06       	cpc	r13, r21
     ec8:	00 f5       	brcc	.+64     	; 0xf0a <__stack+0x6ab>
     eca:	08 94       	sec
     ecc:	21 08       	sbc	r2, r1
     ece:	31 08       	sbc	r3, r1
     ed0:	41 08       	sbc	r4, r1
     ed2:	51 08       	sbc	r5, r1
     ed4:	ed a0       	ldd	r14, Y+37	; 0x25
     ed6:	fe a0       	ldd	r15, Y+38	; 0x26
     ed8:	0f a1       	ldd	r16, Y+39	; 0x27
     eda:	18 a5       	ldd	r17, Y+40	; 0x28
     edc:	ae 0c       	add	r10, r14
     ede:	bf 1c       	adc	r11, r15
     ee0:	c0 1e       	adc	r12, r16
     ee2:	d1 1e       	adc	r13, r17
     ee4:	ae 14       	cp	r10, r14
     ee6:	bf 04       	cpc	r11, r15
     ee8:	c0 06       	cpc	r12, r16
     eea:	d1 06       	cpc	r13, r17
     eec:	70 f0       	brcs	.+28     	; 0xf0a <__stack+0x6ab>
     eee:	a2 16       	cp	r10, r18
     ef0:	b3 06       	cpc	r11, r19
     ef2:	c4 06       	cpc	r12, r20
     ef4:	d5 06       	cpc	r13, r21
     ef6:	48 f4       	brcc	.+18     	; 0xf0a <__stack+0x6ab>
     ef8:	08 94       	sec
     efa:	21 08       	sbc	r2, r1
     efc:	31 08       	sbc	r3, r1
     efe:	41 08       	sbc	r4, r1
     f00:	51 08       	sbc	r5, r1
     f02:	ae 0c       	add	r10, r14
     f04:	bf 1c       	adc	r11, r15
     f06:	c0 1e       	adc	r12, r16
     f08:	d1 1e       	adc	r13, r17
     f0a:	a2 1a       	sub	r10, r18
     f0c:	b3 0a       	sbc	r11, r19
     f0e:	c4 0a       	sbc	r12, r20
     f10:	d5 0a       	sbc	r13, r21
     f12:	c6 01       	movw	r24, r12
     f14:	b5 01       	movw	r22, r10
     f16:	a4 01       	movw	r20, r8
     f18:	93 01       	movw	r18, r6
     f1a:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
     f1e:	7b 01       	movw	r14, r22
     f20:	8c 01       	movw	r16, r24
     f22:	c6 01       	movw	r24, r12
     f24:	b5 01       	movw	r22, r10
     f26:	a4 01       	movw	r20, r8
     f28:	93 01       	movw	r18, r6
     f2a:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
     f2e:	c9 01       	movw	r24, r18
     f30:	da 01       	movw	r26, r20
     f32:	3c 01       	movw	r6, r24
     f34:	4d 01       	movw	r8, r26
     f36:	c4 01       	movw	r24, r8
     f38:	b3 01       	movw	r22, r6
     f3a:	65 96       	adiw	r28, 0x15	; 21
     f3c:	2c ad       	ldd	r18, Y+60	; 0x3c
     f3e:	3d ad       	ldd	r19, Y+61	; 0x3d
     f40:	4e ad       	ldd	r20, Y+62	; 0x3e
     f42:	5f ad       	ldd	r21, Y+63	; 0x3f
     f44:	65 97       	sbiw	r28, 0x15	; 21
     f46:	0e 94 98 2b 	call	0x5730	; 0x5730 <__mulsi3>
     f4a:	9b 01       	movw	r18, r22
     f4c:	ac 01       	movw	r20, r24
     f4e:	87 01       	movw	r16, r14
     f50:	ff 24       	eor	r15, r15
     f52:	ee 24       	eor	r14, r14
     f54:	8d 8d       	ldd	r24, Y+29	; 0x1d
     f56:	9e 8d       	ldd	r25, Y+30	; 0x1e
     f58:	af 8d       	ldd	r26, Y+31	; 0x1f
     f5a:	b8 a1       	ldd	r27, Y+32	; 0x20
     f5c:	a0 70       	andi	r26, 0x00	; 0
     f5e:	b0 70       	andi	r27, 0x00	; 0
     f60:	57 01       	movw	r10, r14
     f62:	68 01       	movw	r12, r16
     f64:	a8 2a       	or	r10, r24
     f66:	b9 2a       	or	r11, r25
     f68:	ca 2a       	or	r12, r26
     f6a:	db 2a       	or	r13, r27
     f6c:	a2 16       	cp	r10, r18
     f6e:	b3 06       	cpc	r11, r19
     f70:	c4 06       	cpc	r12, r20
     f72:	d5 06       	cpc	r13, r21
     f74:	00 f5       	brcc	.+64     	; 0xfb6 <__stack+0x757>
     f76:	08 94       	sec
     f78:	61 08       	sbc	r6, r1
     f7a:	71 08       	sbc	r7, r1
     f7c:	81 08       	sbc	r8, r1
     f7e:	91 08       	sbc	r9, r1
     f80:	6d a1       	ldd	r22, Y+37	; 0x25
     f82:	7e a1       	ldd	r23, Y+38	; 0x26
     f84:	8f a1       	ldd	r24, Y+39	; 0x27
     f86:	98 a5       	ldd	r25, Y+40	; 0x28
     f88:	a6 0e       	add	r10, r22
     f8a:	b7 1e       	adc	r11, r23
     f8c:	c8 1e       	adc	r12, r24
     f8e:	d9 1e       	adc	r13, r25
     f90:	a6 16       	cp	r10, r22
     f92:	b7 06       	cpc	r11, r23
     f94:	c8 06       	cpc	r12, r24
     f96:	d9 06       	cpc	r13, r25
     f98:	70 f0       	brcs	.+28     	; 0xfb6 <__stack+0x757>
     f9a:	a2 16       	cp	r10, r18
     f9c:	b3 06       	cpc	r11, r19
     f9e:	c4 06       	cpc	r12, r20
     fa0:	d5 06       	cpc	r13, r21
     fa2:	48 f4       	brcc	.+18     	; 0xfb6 <__stack+0x757>
     fa4:	08 94       	sec
     fa6:	61 08       	sbc	r6, r1
     fa8:	71 08       	sbc	r7, r1
     faa:	81 08       	sbc	r8, r1
     fac:	91 08       	sbc	r9, r1
     fae:	a6 0e       	add	r10, r22
     fb0:	b7 1e       	adc	r11, r23
     fb2:	c8 1e       	adc	r12, r24
     fb4:	d9 1e       	adc	r13, r25
     fb6:	d6 01       	movw	r26, r12
     fb8:	c5 01       	movw	r24, r10
     fba:	82 1b       	sub	r24, r18
     fbc:	93 0b       	sbc	r25, r19
     fbe:	a4 0b       	sbc	r26, r20
     fc0:	b5 0b       	sbc	r27, r21
     fc2:	89 8f       	std	Y+25, r24	; 0x19
     fc4:	9a 8f       	std	Y+26, r25	; 0x1a
     fc6:	ab 8f       	std	Y+27, r26	; 0x1b
     fc8:	bc 8f       	std	Y+28, r27	; 0x1c
     fca:	d1 01       	movw	r26, r2
     fcc:	99 27       	eor	r25, r25
     fce:	88 27       	eor	r24, r24
     fd0:	64 01       	movw	r12, r8
     fd2:	53 01       	movw	r10, r6
     fd4:	a8 2a       	or	r10, r24
     fd6:	b9 2a       	or	r11, r25
     fd8:	ca 2a       	or	r12, r26
     fda:	db 2a       	or	r13, r27
     fdc:	a9 aa       	std	Y+49, r10	; 0x31
     fde:	ba aa       	std	Y+50, r11	; 0x32
     fe0:	cb aa       	std	Y+51, r12	; 0x33
     fe2:	dc aa       	std	Y+52, r13	; 0x34
     fe4:	86 01       	movw	r16, r12
     fe6:	75 01       	movw	r14, r10
     fe8:	2f ef       	ldi	r18, 0xFF	; 255
     fea:	3f ef       	ldi	r19, 0xFF	; 255
     fec:	40 e0       	ldi	r20, 0x00	; 0
     fee:	50 e0       	ldi	r21, 0x00	; 0
     ff0:	e2 22       	and	r14, r18
     ff2:	f3 22       	and	r15, r19
     ff4:	04 23       	and	r16, r20
     ff6:	15 23       	and	r17, r21
     ff8:	a6 01       	movw	r20, r12
     ffa:	66 27       	eor	r22, r22
     ffc:	77 27       	eor	r23, r23
     ffe:	6d 96       	adiw	r28, 0x1d	; 29
    1000:	4c af       	std	Y+60, r20	; 0x3c
    1002:	5d af       	std	Y+61, r21	; 0x3d
    1004:	6e af       	std	Y+62, r22	; 0x3e
    1006:	7f af       	std	Y+63, r23	; 0x3f
    1008:	6d 97       	sbiw	r28, 0x1d	; 29
    100a:	a9 a0       	ldd	r10, Y+33	; 0x21
    100c:	ba a0       	ldd	r11, Y+34	; 0x22
    100e:	cb a0       	ldd	r12, Y+35	; 0x23
    1010:	dc a0       	ldd	r13, Y+36	; 0x24
    1012:	6f ef       	ldi	r22, 0xFF	; 255
    1014:	7f ef       	ldi	r23, 0xFF	; 255
    1016:	80 e0       	ldi	r24, 0x00	; 0
    1018:	90 e0       	ldi	r25, 0x00	; 0
    101a:	a6 22       	and	r10, r22
    101c:	b7 22       	and	r11, r23
    101e:	c8 22       	and	r12, r24
    1020:	d9 22       	and	r13, r25
    1022:	89 a1       	ldd	r24, Y+33	; 0x21
    1024:	9a a1       	ldd	r25, Y+34	; 0x22
    1026:	ab a1       	ldd	r26, Y+35	; 0x23
    1028:	bc a1       	ldd	r27, Y+36	; 0x24
    102a:	1d 01       	movw	r2, r26
    102c:	44 24       	eor	r4, r4
    102e:	55 24       	eor	r5, r5
    1030:	c8 01       	movw	r24, r16
    1032:	b7 01       	movw	r22, r14
    1034:	a6 01       	movw	r20, r12
    1036:	95 01       	movw	r18, r10
    1038:	0e 94 98 2b 	call	0x5730	; 0x5730 <__mulsi3>
    103c:	69 96       	adiw	r28, 0x19	; 25
    103e:	6c af       	std	Y+60, r22	; 0x3c
    1040:	7d af       	std	Y+61, r23	; 0x3d
    1042:	8e af       	std	Y+62, r24	; 0x3e
    1044:	9f af       	std	Y+63, r25	; 0x3f
    1046:	69 97       	sbiw	r28, 0x19	; 25
    1048:	c8 01       	movw	r24, r16
    104a:	b7 01       	movw	r22, r14
    104c:	a2 01       	movw	r20, r4
    104e:	91 01       	movw	r18, r2
    1050:	0e 94 98 2b 	call	0x5730	; 0x5730 <__mulsi3>
    1054:	3b 01       	movw	r6, r22
    1056:	4c 01       	movw	r8, r24
    1058:	6d 96       	adiw	r28, 0x1d	; 29
    105a:	6c ad       	ldd	r22, Y+60	; 0x3c
    105c:	7d ad       	ldd	r23, Y+61	; 0x3d
    105e:	8e ad       	ldd	r24, Y+62	; 0x3e
    1060:	9f ad       	ldd	r25, Y+63	; 0x3f
    1062:	6d 97       	sbiw	r28, 0x1d	; 29
    1064:	a6 01       	movw	r20, r12
    1066:	95 01       	movw	r18, r10
    1068:	0e 94 98 2b 	call	0x5730	; 0x5730 <__mulsi3>
    106c:	7b 01       	movw	r14, r22
    106e:	8c 01       	movw	r16, r24
    1070:	6d 96       	adiw	r28, 0x1d	; 29
    1072:	6c ad       	ldd	r22, Y+60	; 0x3c
    1074:	7d ad       	ldd	r23, Y+61	; 0x3d
    1076:	8e ad       	ldd	r24, Y+62	; 0x3e
    1078:	9f ad       	ldd	r25, Y+63	; 0x3f
    107a:	6d 97       	sbiw	r28, 0x1d	; 29
    107c:	a2 01       	movw	r20, r4
    107e:	91 01       	movw	r18, r2
    1080:	0e 94 98 2b 	call	0x5730	; 0x5730 <__mulsi3>
    1084:	5b 01       	movw	r10, r22
    1086:	6c 01       	movw	r12, r24
    1088:	a8 01       	movw	r20, r16
    108a:	97 01       	movw	r18, r14
    108c:	26 0d       	add	r18, r6
    108e:	37 1d       	adc	r19, r7
    1090:	48 1d       	adc	r20, r8
    1092:	59 1d       	adc	r21, r9
    1094:	69 96       	adiw	r28, 0x19	; 25
    1096:	6c ac       	ldd	r6, Y+60	; 0x3c
    1098:	7d ac       	ldd	r7, Y+61	; 0x3d
    109a:	8e ac       	ldd	r8, Y+62	; 0x3e
    109c:	9f ac       	ldd	r9, Y+63	; 0x3f
    109e:	69 97       	sbiw	r28, 0x19	; 25
    10a0:	c4 01       	movw	r24, r8
    10a2:	aa 27       	eor	r26, r26
    10a4:	bb 27       	eor	r27, r27
    10a6:	28 0f       	add	r18, r24
    10a8:	39 1f       	adc	r19, r25
    10aa:	4a 1f       	adc	r20, r26
    10ac:	5b 1f       	adc	r21, r27
    10ae:	2e 15       	cp	r18, r14
    10b0:	3f 05       	cpc	r19, r15
    10b2:	40 07       	cpc	r20, r16
    10b4:	51 07       	cpc	r21, r17
    10b6:	48 f4       	brcc	.+18     	; 0x10ca <__stack+0x86b>
    10b8:	e1 2c       	mov	r14, r1
    10ba:	f1 2c       	mov	r15, r1
    10bc:	61 e0       	ldi	r22, 0x01	; 1
    10be:	06 2f       	mov	r16, r22
    10c0:	11 2d       	mov	r17, r1
    10c2:	ae 0c       	add	r10, r14
    10c4:	bf 1c       	adc	r11, r15
    10c6:	c0 1e       	adc	r12, r16
    10c8:	d1 1e       	adc	r13, r17
    10ca:	ca 01       	movw	r24, r20
    10cc:	aa 27       	eor	r26, r26
    10ce:	bb 27       	eor	r27, r27
    10d0:	bc 01       	movw	r22, r24
    10d2:	cd 01       	movw	r24, r26
    10d4:	6a 0d       	add	r22, r10
    10d6:	7b 1d       	adc	r23, r11
    10d8:	8c 1d       	adc	r24, r12
    10da:	9d 1d       	adc	r25, r13
    10dc:	69 8c       	ldd	r6, Y+25	; 0x19
    10de:	7a 8c       	ldd	r7, Y+26	; 0x1a
    10e0:	8b 8c       	ldd	r8, Y+27	; 0x1b
    10e2:	9c 8c       	ldd	r9, Y+28	; 0x1c
    10e4:	66 16       	cp	r6, r22
    10e6:	77 06       	cpc	r7, r23
    10e8:	88 06       	cpc	r8, r24
    10ea:	99 06       	cpc	r9, r25
    10ec:	40 f1       	brcs	.+80     	; 0x113e <__stack+0x8df>
    10ee:	66 15       	cp	r22, r6
    10f0:	77 05       	cpc	r23, r7
    10f2:	88 05       	cpc	r24, r8
    10f4:	99 05       	cpc	r25, r9
    10f6:	09 f0       	breq	.+2      	; 0x10fa <__stack+0x89b>
    10f8:	43 c0       	rjmp	.+134    	; 0x1180 <__stack+0x921>
    10fa:	d9 01       	movw	r26, r18
    10fc:	99 27       	eor	r25, r25
    10fe:	88 27       	eor	r24, r24
    1100:	69 96       	adiw	r28, 0x19	; 25
    1102:	2c ad       	ldd	r18, Y+60	; 0x3c
    1104:	3d ad       	ldd	r19, Y+61	; 0x3d
    1106:	4e ad       	ldd	r20, Y+62	; 0x3e
    1108:	5f ad       	ldd	r21, Y+63	; 0x3f
    110a:	69 97       	sbiw	r28, 0x19	; 25
    110c:	40 70       	andi	r20, 0x00	; 0
    110e:	50 70       	andi	r21, 0x00	; 0
    1110:	82 0f       	add	r24, r18
    1112:	93 1f       	adc	r25, r19
    1114:	a4 1f       	adc	r26, r20
    1116:	b5 1f       	adc	r27, r21
    1118:	2d a5       	ldd	r18, Y+45	; 0x2d
    111a:	3e a5       	ldd	r19, Y+46	; 0x2e
    111c:	4f a5       	ldd	r20, Y+47	; 0x2f
    111e:	58 a9       	ldd	r21, Y+48	; 0x30
    1120:	6e 96       	adiw	r28, 0x1e	; 30
    1122:	0f ac       	ldd	r0, Y+63	; 0x3f
    1124:	6e 97       	sbiw	r28, 0x1e	; 30
    1126:	04 c0       	rjmp	.+8      	; 0x1130 <__stack+0x8d1>
    1128:	22 0f       	add	r18, r18
    112a:	33 1f       	adc	r19, r19
    112c:	44 1f       	adc	r20, r20
    112e:	55 1f       	adc	r21, r21
    1130:	0a 94       	dec	r0
    1132:	d2 f7       	brpl	.-12     	; 0x1128 <__stack+0x8c9>
    1134:	28 17       	cp	r18, r24
    1136:	39 07       	cpc	r19, r25
    1138:	4a 07       	cpc	r20, r26
    113a:	5b 07       	cpc	r21, r27
    113c:	08 f5       	brcc	.+66     	; 0x1180 <__stack+0x921>
    113e:	09 a9       	ldd	r16, Y+49	; 0x31
    1140:	1a a9       	ldd	r17, Y+50	; 0x32
    1142:	2b a9       	ldd	r18, Y+51	; 0x33
    1144:	3c a9       	ldd	r19, Y+52	; 0x34
    1146:	01 50       	subi	r16, 0x01	; 1
    1148:	10 40       	sbci	r17, 0x00	; 0
    114a:	20 40       	sbci	r18, 0x00	; 0
    114c:	30 40       	sbci	r19, 0x00	; 0
    114e:	09 ab       	std	Y+49, r16	; 0x31
    1150:	1a ab       	std	Y+50, r17	; 0x32
    1152:	2b ab       	std	Y+51, r18	; 0x33
    1154:	3c ab       	std	Y+52, r19	; 0x34
    1156:	14 c0       	rjmp	.+40     	; 0x1180 <__stack+0x921>
    1158:	66 24       	eor	r6, r6
    115a:	77 24       	eor	r7, r7
    115c:	43 01       	movw	r8, r6
    115e:	21 e0       	ldi	r18, 0x01	; 1
    1160:	30 e0       	ldi	r19, 0x00	; 0
    1162:	40 e0       	ldi	r20, 0x00	; 0
    1164:	50 e0       	ldi	r21, 0x00	; 0
    1166:	29 ab       	std	Y+49, r18	; 0x31
    1168:	3a ab       	std	Y+50, r19	; 0x32
    116a:	4b ab       	std	Y+51, r20	; 0x33
    116c:	5c ab       	std	Y+52, r21	; 0x34
    116e:	0b c0       	rjmp	.+22     	; 0x1186 <__stack+0x927>
    1170:	66 24       	eor	r6, r6
    1172:	77 24       	eor	r7, r7
    1174:	43 01       	movw	r8, r6
    1176:	19 aa       	std	Y+49, r1	; 0x31
    1178:	1a aa       	std	Y+50, r1	; 0x32
    117a:	1b aa       	std	Y+51, r1	; 0x33
    117c:	1c aa       	std	Y+52, r1	; 0x34
    117e:	03 c0       	rjmp	.+6      	; 0x1186 <__stack+0x927>
    1180:	66 24       	eor	r6, r6
    1182:	77 24       	eor	r7, r7
    1184:	43 01       	movw	r8, r6
    1186:	fe 01       	movw	r30, r28
    1188:	71 96       	adiw	r30, 0x11	; 17
    118a:	88 e0       	ldi	r24, 0x08	; 8
    118c:	df 01       	movw	r26, r30
    118e:	1d 92       	st	X+, r1
    1190:	8a 95       	dec	r24
    1192:	e9 f7       	brne	.-6      	; 0x118e <__stack+0x92f>
    1194:	a9 a8       	ldd	r10, Y+49	; 0x31
    1196:	ba a8       	ldd	r11, Y+50	; 0x32
    1198:	cb a8       	ldd	r12, Y+51	; 0x33
    119a:	dc a8       	ldd	r13, Y+52	; 0x34
    119c:	a9 8a       	std	Y+17, r10	; 0x11
    119e:	ba 8a       	std	Y+18, r11	; 0x12
    11a0:	cb 8a       	std	Y+19, r12	; 0x13
    11a2:	dc 8a       	std	Y+20, r13	; 0x14
    11a4:	6d 8a       	std	Y+21, r6	; 0x15
    11a6:	7e 8a       	std	Y+22, r7	; 0x16
    11a8:	8f 8a       	std	Y+23, r8	; 0x17
    11aa:	98 8e       	std	Y+24, r9	; 0x18
    11ac:	29 a9       	ldd	r18, Y+49	; 0x31
    11ae:	3a 89       	ldd	r19, Y+18	; 0x12
    11b0:	4b 89       	ldd	r20, Y+19	; 0x13
    11b2:	5c 89       	ldd	r21, Y+20	; 0x14
    11b4:	66 2d       	mov	r22, r6
    11b6:	7e 89       	ldd	r23, Y+22	; 0x16
    11b8:	8f 89       	ldd	r24, Y+23	; 0x17
    11ba:	98 8d       	ldd	r25, Y+24	; 0x18
    11bc:	c2 5a       	subi	r28, 0xA2	; 162
    11be:	df 4f       	sbci	r29, 0xFF	; 255
    11c0:	e2 e1       	ldi	r30, 0x12	; 18
    11c2:	0c 94 01 2c 	jmp	0x5802	; 0x5802 <__epilogue_restores__>

000011c6 <__umoddi3>:
    11c6:	ab e5       	ldi	r26, 0x5B	; 91
    11c8:	b0 e0       	ldi	r27, 0x00	; 0
    11ca:	e9 ee       	ldi	r30, 0xE9	; 233
    11cc:	f8 e0       	ldi	r31, 0x08	; 8
    11ce:	0c 94 e5 2b 	jmp	0x57ca	; 0x57ca <__prologue_saves__>
    11d2:	a8 e0       	ldi	r26, 0x08	; 8
    11d4:	4e 01       	movw	r8, r28
    11d6:	08 94       	sec
    11d8:	81 1c       	adc	r8, r1
    11da:	91 1c       	adc	r9, r1
    11dc:	f4 01       	movw	r30, r8
    11de:	6a 2e       	mov	r6, r26
    11e0:	11 92       	st	Z+, r1
    11e2:	6a 94       	dec	r6
    11e4:	e9 f7       	brne	.-6      	; 0x11e0 <__umoddi3+0x1a>
    11e6:	29 83       	std	Y+1, r18	; 0x01
    11e8:	3a 83       	std	Y+2, r19	; 0x02
    11ea:	4b 83       	std	Y+3, r20	; 0x03
    11ec:	5c 83       	std	Y+4, r21	; 0x04
    11ee:	6d 83       	std	Y+5, r22	; 0x05
    11f0:	7e 83       	std	Y+6, r23	; 0x06
    11f2:	8f 83       	std	Y+7, r24	; 0x07
    11f4:	98 87       	std	Y+8, r25	; 0x08
    11f6:	ce 01       	movw	r24, r28
    11f8:	09 96       	adiw	r24, 0x09	; 9
    11fa:	fc 01       	movw	r30, r24
    11fc:	11 92       	st	Z+, r1
    11fe:	aa 95       	dec	r26
    1200:	e9 f7       	brne	.-6      	; 0x11fc <__umoddi3+0x36>
    1202:	a9 86       	std	Y+9, r10	; 0x09
    1204:	ba 86       	std	Y+10, r11	; 0x0a
    1206:	cb 86       	std	Y+11, r12	; 0x0b
    1208:	dc 86       	std	Y+12, r13	; 0x0c
    120a:	ed 86       	std	Y+13, r14	; 0x0d
    120c:	fe 86       	std	Y+14, r15	; 0x0e
    120e:	0f 87       	std	Y+15, r16	; 0x0f
    1210:	18 8b       	std	Y+16, r17	; 0x10
    1212:	29 84       	ldd	r2, Y+9	; 0x09
    1214:	3a 84       	ldd	r3, Y+10	; 0x0a
    1216:	4b 84       	ldd	r4, Y+11	; 0x0b
    1218:	5c 84       	ldd	r5, Y+12	; 0x0c
    121a:	ad 84       	ldd	r10, Y+13	; 0x0d
    121c:	be 84       	ldd	r11, Y+14	; 0x0e
    121e:	cf 84       	ldd	r12, Y+15	; 0x0f
    1220:	d8 88       	ldd	r13, Y+16	; 0x10
    1222:	29 81       	ldd	r18, Y+1	; 0x01
    1224:	3a 81       	ldd	r19, Y+2	; 0x02
    1226:	4b 81       	ldd	r20, Y+3	; 0x03
    1228:	5c 81       	ldd	r21, Y+4	; 0x04
    122a:	69 96       	adiw	r28, 0x19	; 25
    122c:	2f af       	std	Y+63, r18	; 0x3f
    122e:	69 97       	sbiw	r28, 0x19	; 25
    1230:	6a 96       	adiw	r28, 0x1a	; 26
    1232:	3f af       	std	Y+63, r19	; 0x3f
    1234:	6a 97       	sbiw	r28, 0x1a	; 26
    1236:	6b 96       	adiw	r28, 0x1b	; 27
    1238:	4f af       	std	Y+63, r20	; 0x3f
    123a:	6b 97       	sbiw	r28, 0x1b	; 27
    123c:	6c 96       	adiw	r28, 0x1c	; 28
    123e:	5f af       	std	Y+63, r21	; 0x3f
    1240:	6c 97       	sbiw	r28, 0x1c	; 28
    1242:	6c 96       	adiw	r28, 0x1c	; 28
    1244:	6c ac       	ldd	r6, Y+60	; 0x3c
    1246:	7d ac       	ldd	r7, Y+61	; 0x3d
    1248:	8e ac       	ldd	r8, Y+62	; 0x3e
    124a:	9f ac       	ldd	r9, Y+63	; 0x3f
    124c:	6c 97       	sbiw	r28, 0x1c	; 28
    124e:	69 aa       	std	Y+49, r6	; 0x31
    1250:	7a aa       	std	Y+50, r7	; 0x32
    1252:	8b aa       	std	Y+51, r8	; 0x33
    1254:	9c aa       	std	Y+52, r9	; 0x34
    1256:	6d 81       	ldd	r22, Y+5	; 0x05
    1258:	7e 81       	ldd	r23, Y+6	; 0x06
    125a:	8f 81       	ldd	r24, Y+7	; 0x07
    125c:	98 85       	ldd	r25, Y+8	; 0x08
    125e:	3b 01       	movw	r6, r22
    1260:	4c 01       	movw	r8, r24
    1262:	6d aa       	std	Y+53, r6	; 0x35
    1264:	7e aa       	std	Y+54, r7	; 0x36
    1266:	8f aa       	std	Y+55, r8	; 0x37
    1268:	98 ae       	std	Y+56, r9	; 0x38
    126a:	a1 14       	cp	r10, r1
    126c:	b1 04       	cpc	r11, r1
    126e:	c1 04       	cpc	r12, r1
    1270:	d1 04       	cpc	r13, r1
    1272:	09 f0       	breq	.+2      	; 0x1276 <__umoddi3+0xb0>
    1274:	04 c3       	rjmp	.+1544   	; 0x187e <__umoddi3+0x6b8>
    1276:	62 14       	cp	r6, r2
    1278:	73 04       	cpc	r7, r3
    127a:	84 04       	cpc	r8, r4
    127c:	95 04       	cpc	r9, r5
    127e:	08 f0       	brcs	.+2      	; 0x1282 <__umoddi3+0xbc>
    1280:	00 c1       	rjmp	.+512    	; 0x1482 <__umoddi3+0x2bc>
    1282:	00 e0       	ldi	r16, 0x00	; 0
    1284:	20 16       	cp	r2, r16
    1286:	00 e0       	ldi	r16, 0x00	; 0
    1288:	30 06       	cpc	r3, r16
    128a:	01 e0       	ldi	r16, 0x01	; 1
    128c:	40 06       	cpc	r4, r16
    128e:	00 e0       	ldi	r16, 0x00	; 0
    1290:	50 06       	cpc	r5, r16
    1292:	88 f4       	brcc	.+34     	; 0x12b6 <__umoddi3+0xf0>
    1294:	1f ef       	ldi	r17, 0xFF	; 255
    1296:	21 16       	cp	r2, r17
    1298:	31 04       	cpc	r3, r1
    129a:	41 04       	cpc	r4, r1
    129c:	51 04       	cpc	r5, r1
    129e:	39 f0       	breq	.+14     	; 0x12ae <__umoddi3+0xe8>
    12a0:	30 f0       	brcs	.+12     	; 0x12ae <__umoddi3+0xe8>
    12a2:	88 e0       	ldi	r24, 0x08	; 8
    12a4:	e8 2e       	mov	r14, r24
    12a6:	f1 2c       	mov	r15, r1
    12a8:	01 2d       	mov	r16, r1
    12aa:	11 2d       	mov	r17, r1
    12ac:	18 c0       	rjmp	.+48     	; 0x12de <__umoddi3+0x118>
    12ae:	ee 24       	eor	r14, r14
    12b0:	ff 24       	eor	r15, r15
    12b2:	87 01       	movw	r16, r14
    12b4:	14 c0       	rjmp	.+40     	; 0x12de <__umoddi3+0x118>
    12b6:	40 e0       	ldi	r20, 0x00	; 0
    12b8:	24 16       	cp	r2, r20
    12ba:	40 e0       	ldi	r20, 0x00	; 0
    12bc:	34 06       	cpc	r3, r20
    12be:	40 e0       	ldi	r20, 0x00	; 0
    12c0:	44 06       	cpc	r4, r20
    12c2:	41 e0       	ldi	r20, 0x01	; 1
    12c4:	54 06       	cpc	r5, r20
    12c6:	30 f0       	brcs	.+12     	; 0x12d4 <__umoddi3+0x10e>
    12c8:	b8 e1       	ldi	r27, 0x18	; 24
    12ca:	eb 2e       	mov	r14, r27
    12cc:	f1 2c       	mov	r15, r1
    12ce:	01 2d       	mov	r16, r1
    12d0:	11 2d       	mov	r17, r1
    12d2:	05 c0       	rjmp	.+10     	; 0x12de <__umoddi3+0x118>
    12d4:	a0 e1       	ldi	r26, 0x10	; 16
    12d6:	ea 2e       	mov	r14, r26
    12d8:	f1 2c       	mov	r15, r1
    12da:	01 2d       	mov	r16, r1
    12dc:	11 2d       	mov	r17, r1
    12de:	d2 01       	movw	r26, r4
    12e0:	c1 01       	movw	r24, r2
    12e2:	0e 2c       	mov	r0, r14
    12e4:	04 c0       	rjmp	.+8      	; 0x12ee <__umoddi3+0x128>
    12e6:	b6 95       	lsr	r27
    12e8:	a7 95       	ror	r26
    12ea:	97 95       	ror	r25
    12ec:	87 95       	ror	r24
    12ee:	0a 94       	dec	r0
    12f0:	d2 f7       	brpl	.-12     	; 0x12e6 <__umoddi3+0x120>
    12f2:	85 57       	subi	r24, 0x75	; 117
    12f4:	9f 4f       	sbci	r25, 0xFF	; 255
    12f6:	dc 01       	movw	r26, r24
    12f8:	2c 91       	ld	r18, X
    12fa:	80 e2       	ldi	r24, 0x20	; 32
    12fc:	90 e0       	ldi	r25, 0x00	; 0
    12fe:	a0 e0       	ldi	r26, 0x00	; 0
    1300:	b0 e0       	ldi	r27, 0x00	; 0
    1302:	8e 19       	sub	r24, r14
    1304:	9f 09       	sbc	r25, r15
    1306:	a0 0b       	sbc	r26, r16
    1308:	b1 0b       	sbc	r27, r17
    130a:	5c 01       	movw	r10, r24
    130c:	6d 01       	movw	r12, r26
    130e:	a2 1a       	sub	r10, r18
    1310:	b1 08       	sbc	r11, r1
    1312:	c1 08       	sbc	r12, r1
    1314:	d1 08       	sbc	r13, r1
    1316:	a9 ae       	std	Y+57, r10	; 0x39
    1318:	ba ae       	std	Y+58, r11	; 0x3a
    131a:	cb ae       	std	Y+59, r12	; 0x3b
    131c:	dc ae       	std	Y+60, r13	; 0x3c
    131e:	a1 14       	cp	r10, r1
    1320:	b1 04       	cpc	r11, r1
    1322:	c1 04       	cpc	r12, r1
    1324:	d1 04       	cpc	r13, r1
    1326:	09 f4       	brne	.+2      	; 0x132a <__umoddi3+0x164>
    1328:	3f c0       	rjmp	.+126    	; 0x13a8 <__umoddi3+0x1e2>
    132a:	69 ad       	ldd	r22, Y+57	; 0x39
    132c:	06 2e       	mov	r0, r22
    132e:	04 c0       	rjmp	.+8      	; 0x1338 <__umoddi3+0x172>
    1330:	22 0c       	add	r2, r2
    1332:	33 1c       	adc	r3, r3
    1334:	44 1c       	adc	r4, r4
    1336:	55 1c       	adc	r5, r5
    1338:	0a 94       	dec	r0
    133a:	d2 f7       	brpl	.-12     	; 0x1330 <__umoddi3+0x16a>
    133c:	a4 01       	movw	r20, r8
    133e:	93 01       	movw	r18, r6
    1340:	06 2e       	mov	r0, r22
    1342:	04 c0       	rjmp	.+8      	; 0x134c <__umoddi3+0x186>
    1344:	22 0f       	add	r18, r18
    1346:	33 1f       	adc	r19, r19
    1348:	44 1f       	adc	r20, r20
    134a:	55 1f       	adc	r21, r21
    134c:	0a 94       	dec	r0
    134e:	d2 f7       	brpl	.-12     	; 0x1344 <__umoddi3+0x17e>
    1350:	80 e2       	ldi	r24, 0x20	; 32
    1352:	90 e0       	ldi	r25, 0x00	; 0
    1354:	8a 19       	sub	r24, r10
    1356:	9b 09       	sbc	r25, r11
    1358:	6c 96       	adiw	r28, 0x1c	; 28
    135a:	cc ac       	ldd	r12, Y+60	; 0x3c
    135c:	dd ac       	ldd	r13, Y+61	; 0x3d
    135e:	ee ac       	ldd	r14, Y+62	; 0x3e
    1360:	ff ac       	ldd	r15, Y+63	; 0x3f
    1362:	6c 97       	sbiw	r28, 0x1c	; 28
    1364:	04 c0       	rjmp	.+8      	; 0x136e <__umoddi3+0x1a8>
    1366:	f6 94       	lsr	r15
    1368:	e7 94       	ror	r14
    136a:	d7 94       	ror	r13
    136c:	c7 94       	ror	r12
    136e:	8a 95       	dec	r24
    1370:	d2 f7       	brpl	.-12     	; 0x1366 <__umoddi3+0x1a0>
    1372:	87 01       	movw	r16, r14
    1374:	76 01       	movw	r14, r12
    1376:	e2 2a       	or	r14, r18
    1378:	f3 2a       	or	r15, r19
    137a:	04 2b       	or	r16, r20
    137c:	15 2b       	or	r17, r21
    137e:	ed aa       	std	Y+53, r14	; 0x35
    1380:	fe aa       	std	Y+54, r15	; 0x36
    1382:	0f ab       	std	Y+55, r16	; 0x37
    1384:	18 af       	std	Y+56, r17	; 0x38
    1386:	6c 96       	adiw	r28, 0x1c	; 28
    1388:	8c ad       	ldd	r24, Y+60	; 0x3c
    138a:	9d ad       	ldd	r25, Y+61	; 0x3d
    138c:	ae ad       	ldd	r26, Y+62	; 0x3e
    138e:	bf ad       	ldd	r27, Y+63	; 0x3f
    1390:	6c 97       	sbiw	r28, 0x1c	; 28
    1392:	04 c0       	rjmp	.+8      	; 0x139c <__umoddi3+0x1d6>
    1394:	88 0f       	add	r24, r24
    1396:	99 1f       	adc	r25, r25
    1398:	aa 1f       	adc	r26, r26
    139a:	bb 1f       	adc	r27, r27
    139c:	6a 95       	dec	r22
    139e:	d2 f7       	brpl	.-12     	; 0x1394 <__umoddi3+0x1ce>
    13a0:	89 ab       	std	Y+49, r24	; 0x31
    13a2:	9a ab       	std	Y+50, r25	; 0x32
    13a4:	ab ab       	std	Y+51, r26	; 0x33
    13a6:	bc ab       	std	Y+52, r27	; 0x34
    13a8:	32 01       	movw	r6, r4
    13aa:	88 24       	eor	r8, r8
    13ac:	99 24       	eor	r9, r9
    13ae:	b2 01       	movw	r22, r4
    13b0:	a1 01       	movw	r20, r2
    13b2:	60 70       	andi	r22, 0x00	; 0
    13b4:	70 70       	andi	r23, 0x00	; 0
    13b6:	21 96       	adiw	r28, 0x01	; 1
    13b8:	4c af       	std	Y+60, r20	; 0x3c
    13ba:	5d af       	std	Y+61, r21	; 0x3d
    13bc:	6e af       	std	Y+62, r22	; 0x3e
    13be:	7f af       	std	Y+63, r23	; 0x3f
    13c0:	21 97       	sbiw	r28, 0x01	; 1
    13c2:	6d a9       	ldd	r22, Y+53	; 0x35
    13c4:	7e a9       	ldd	r23, Y+54	; 0x36
    13c6:	8f a9       	ldd	r24, Y+55	; 0x37
    13c8:	98 ad       	ldd	r25, Y+56	; 0x38
    13ca:	a4 01       	movw	r20, r8
    13cc:	93 01       	movw	r18, r6
    13ce:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
    13d2:	7b 01       	movw	r14, r22
    13d4:	8c 01       	movw	r16, r24
    13d6:	6d a9       	ldd	r22, Y+53	; 0x35
    13d8:	7e a9       	ldd	r23, Y+54	; 0x36
    13da:	8f a9       	ldd	r24, Y+55	; 0x37
    13dc:	98 ad       	ldd	r25, Y+56	; 0x38
    13de:	a4 01       	movw	r20, r8
    13e0:	93 01       	movw	r18, r6
    13e2:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
    13e6:	ca 01       	movw	r24, r20
    13e8:	b9 01       	movw	r22, r18
    13ea:	21 96       	adiw	r28, 0x01	; 1
    13ec:	2c ad       	ldd	r18, Y+60	; 0x3c
    13ee:	3d ad       	ldd	r19, Y+61	; 0x3d
    13f0:	4e ad       	ldd	r20, Y+62	; 0x3e
    13f2:	5f ad       	ldd	r21, Y+63	; 0x3f
    13f4:	21 97       	sbiw	r28, 0x01	; 1
    13f6:	0e 94 98 2b 	call	0x5730	; 0x5730 <__mulsi3>
    13fa:	9b 01       	movw	r18, r22
    13fc:	ac 01       	movw	r20, r24
    13fe:	87 01       	movw	r16, r14
    1400:	ff 24       	eor	r15, r15
    1402:	ee 24       	eor	r14, r14
    1404:	a9 a8       	ldd	r10, Y+49	; 0x31
    1406:	ba a8       	ldd	r11, Y+50	; 0x32
    1408:	cb a8       	ldd	r12, Y+51	; 0x33
    140a:	dc a8       	ldd	r13, Y+52	; 0x34
    140c:	c6 01       	movw	r24, r12
    140e:	aa 27       	eor	r26, r26
    1410:	bb 27       	eor	r27, r27
    1412:	57 01       	movw	r10, r14
    1414:	68 01       	movw	r12, r16
    1416:	a8 2a       	or	r10, r24
    1418:	b9 2a       	or	r11, r25
    141a:	ca 2a       	or	r12, r26
    141c:	db 2a       	or	r13, r27
    141e:	a2 16       	cp	r10, r18
    1420:	b3 06       	cpc	r11, r19
    1422:	c4 06       	cpc	r12, r20
    1424:	d5 06       	cpc	r13, r21
    1426:	90 f4       	brcc	.+36     	; 0x144c <__umoddi3+0x286>
    1428:	a2 0c       	add	r10, r2
    142a:	b3 1c       	adc	r11, r3
    142c:	c4 1c       	adc	r12, r4
    142e:	d5 1c       	adc	r13, r5
    1430:	a2 14       	cp	r10, r2
    1432:	b3 04       	cpc	r11, r3
    1434:	c4 04       	cpc	r12, r4
    1436:	d5 04       	cpc	r13, r5
    1438:	48 f0       	brcs	.+18     	; 0x144c <__umoddi3+0x286>
    143a:	a2 16       	cp	r10, r18
    143c:	b3 06       	cpc	r11, r19
    143e:	c4 06       	cpc	r12, r20
    1440:	d5 06       	cpc	r13, r21
    1442:	20 f4       	brcc	.+8      	; 0x144c <__umoddi3+0x286>
    1444:	a2 0c       	add	r10, r2
    1446:	b3 1c       	adc	r11, r3
    1448:	c4 1c       	adc	r12, r4
    144a:	d5 1c       	adc	r13, r5
    144c:	a2 1a       	sub	r10, r18
    144e:	b3 0a       	sbc	r11, r19
    1450:	c4 0a       	sbc	r12, r20
    1452:	d5 0a       	sbc	r13, r21
    1454:	c6 01       	movw	r24, r12
    1456:	b5 01       	movw	r22, r10
    1458:	a4 01       	movw	r20, r8
    145a:	93 01       	movw	r18, r6
    145c:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
    1460:	7b 01       	movw	r14, r22
    1462:	8c 01       	movw	r16, r24
    1464:	c6 01       	movw	r24, r12
    1466:	b5 01       	movw	r22, r10
    1468:	a4 01       	movw	r20, r8
    146a:	93 01       	movw	r18, r6
    146c:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
    1470:	ca 01       	movw	r24, r20
    1472:	b9 01       	movw	r22, r18
    1474:	21 96       	adiw	r28, 0x01	; 1
    1476:	2c ad       	ldd	r18, Y+60	; 0x3c
    1478:	3d ad       	ldd	r19, Y+61	; 0x3d
    147a:	4e ad       	ldd	r20, Y+62	; 0x3e
    147c:	5f ad       	ldd	r21, Y+63	; 0x3f
    147e:	21 97       	sbiw	r28, 0x01	; 1
    1480:	ba c1       	rjmp	.+884    	; 0x17f6 <__umoddi3+0x630>
    1482:	21 14       	cp	r2, r1
    1484:	31 04       	cpc	r3, r1
    1486:	41 04       	cpc	r4, r1
    1488:	51 04       	cpc	r5, r1
    148a:	71 f4       	brne	.+28     	; 0x14a8 <__umoddi3+0x2e2>
    148c:	61 e0       	ldi	r22, 0x01	; 1
    148e:	70 e0       	ldi	r23, 0x00	; 0
    1490:	80 e0       	ldi	r24, 0x00	; 0
    1492:	90 e0       	ldi	r25, 0x00	; 0
    1494:	20 e0       	ldi	r18, 0x00	; 0
    1496:	30 e0       	ldi	r19, 0x00	; 0
    1498:	40 e0       	ldi	r20, 0x00	; 0
    149a:	50 e0       	ldi	r21, 0x00	; 0
    149c:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
    14a0:	c9 01       	movw	r24, r18
    14a2:	da 01       	movw	r26, r20
    14a4:	1c 01       	movw	r2, r24
    14a6:	2d 01       	movw	r4, r26
    14a8:	00 e0       	ldi	r16, 0x00	; 0
    14aa:	20 16       	cp	r2, r16
    14ac:	00 e0       	ldi	r16, 0x00	; 0
    14ae:	30 06       	cpc	r3, r16
    14b0:	01 e0       	ldi	r16, 0x01	; 1
    14b2:	40 06       	cpc	r4, r16
    14b4:	00 e0       	ldi	r16, 0x00	; 0
    14b6:	50 06       	cpc	r5, r16
    14b8:	88 f4       	brcc	.+34     	; 0x14dc <__umoddi3+0x316>
    14ba:	1f ef       	ldi	r17, 0xFF	; 255
    14bc:	21 16       	cp	r2, r17
    14be:	31 04       	cpc	r3, r1
    14c0:	41 04       	cpc	r4, r1
    14c2:	51 04       	cpc	r5, r1
    14c4:	39 f0       	breq	.+14     	; 0x14d4 <__umoddi3+0x30e>
    14c6:	30 f0       	brcs	.+12     	; 0x14d4 <__umoddi3+0x30e>
    14c8:	68 e0       	ldi	r22, 0x08	; 8
    14ca:	e6 2e       	mov	r14, r22
    14cc:	f1 2c       	mov	r15, r1
    14ce:	01 2d       	mov	r16, r1
    14d0:	11 2d       	mov	r17, r1
    14d2:	18 c0       	rjmp	.+48     	; 0x1504 <__umoddi3+0x33e>
    14d4:	ee 24       	eor	r14, r14
    14d6:	ff 24       	eor	r15, r15
    14d8:	87 01       	movw	r16, r14
    14da:	14 c0       	rjmp	.+40     	; 0x1504 <__umoddi3+0x33e>
    14dc:	40 e0       	ldi	r20, 0x00	; 0
    14de:	24 16       	cp	r2, r20
    14e0:	40 e0       	ldi	r20, 0x00	; 0
    14e2:	34 06       	cpc	r3, r20
    14e4:	40 e0       	ldi	r20, 0x00	; 0
    14e6:	44 06       	cpc	r4, r20
    14e8:	41 e0       	ldi	r20, 0x01	; 1
    14ea:	54 06       	cpc	r5, r20
    14ec:	30 f0       	brcs	.+12     	; 0x14fa <__umoddi3+0x334>
    14ee:	58 e1       	ldi	r21, 0x18	; 24
    14f0:	e5 2e       	mov	r14, r21
    14f2:	f1 2c       	mov	r15, r1
    14f4:	01 2d       	mov	r16, r1
    14f6:	11 2d       	mov	r17, r1
    14f8:	05 c0       	rjmp	.+10     	; 0x1504 <__umoddi3+0x33e>
    14fa:	40 e1       	ldi	r20, 0x10	; 16
    14fc:	e4 2e       	mov	r14, r20
    14fe:	f1 2c       	mov	r15, r1
    1500:	01 2d       	mov	r16, r1
    1502:	11 2d       	mov	r17, r1
    1504:	d2 01       	movw	r26, r4
    1506:	c1 01       	movw	r24, r2
    1508:	0e 2c       	mov	r0, r14
    150a:	04 c0       	rjmp	.+8      	; 0x1514 <__umoddi3+0x34e>
    150c:	b6 95       	lsr	r27
    150e:	a7 95       	ror	r26
    1510:	97 95       	ror	r25
    1512:	87 95       	ror	r24
    1514:	0a 94       	dec	r0
    1516:	d2 f7       	brpl	.-12     	; 0x150c <__umoddi3+0x346>
    1518:	85 57       	subi	r24, 0x75	; 117
    151a:	9f 4f       	sbci	r25, 0xFF	; 255
    151c:	dc 01       	movw	r26, r24
    151e:	2c 91       	ld	r18, X
    1520:	30 e2       	ldi	r19, 0x20	; 32
    1522:	a3 2e       	mov	r10, r19
    1524:	b1 2c       	mov	r11, r1
    1526:	c1 2c       	mov	r12, r1
    1528:	d1 2c       	mov	r13, r1
    152a:	d6 01       	movw	r26, r12
    152c:	c5 01       	movw	r24, r10
    152e:	8e 19       	sub	r24, r14
    1530:	9f 09       	sbc	r25, r15
    1532:	a0 0b       	sbc	r26, r16
    1534:	b1 0b       	sbc	r27, r17
    1536:	7c 01       	movw	r14, r24
    1538:	8d 01       	movw	r16, r26
    153a:	e2 1a       	sub	r14, r18
    153c:	f1 08       	sbc	r15, r1
    153e:	01 09       	sbc	r16, r1
    1540:	11 09       	sbc	r17, r1
    1542:	e9 ae       	std	Y+57, r14	; 0x39
    1544:	fa ae       	std	Y+58, r15	; 0x3a
    1546:	0b af       	std	Y+59, r16	; 0x3b
    1548:	1c af       	std	Y+60, r17	; 0x3c
    154a:	e1 14       	cp	r14, r1
    154c:	f1 04       	cpc	r15, r1
    154e:	01 05       	cpc	r16, r1
    1550:	11 05       	cpc	r17, r1
    1552:	39 f4       	brne	.+14     	; 0x1562 <__umoddi3+0x39c>
    1554:	64 01       	movw	r12, r8
    1556:	53 01       	movw	r10, r6
    1558:	a2 18       	sub	r10, r2
    155a:	b3 08       	sbc	r11, r3
    155c:	c4 08       	sbc	r12, r4
    155e:	d5 08       	sbc	r13, r5
    1560:	e2 c0       	rjmp	.+452    	; 0x1726 <__umoddi3+0x560>
    1562:	f9 ac       	ldd	r15, Y+57	; 0x39
    1564:	68 96       	adiw	r28, 0x18	; 24
    1566:	ff ae       	std	Y+63, r15	; 0x3f
    1568:	68 97       	sbiw	r28, 0x18	; 24
    156a:	0f 2c       	mov	r0, r15
    156c:	04 c0       	rjmp	.+8      	; 0x1576 <__umoddi3+0x3b0>
    156e:	22 0c       	add	r2, r2
    1570:	33 1c       	adc	r3, r3
    1572:	44 1c       	adc	r4, r4
    1574:	55 1c       	adc	r5, r5
    1576:	0a 94       	dec	r0
    1578:	d2 f7       	brpl	.-12     	; 0x156e <__umoddi3+0x3a8>
    157a:	8a 2d       	mov	r24, r10
    157c:	8f 19       	sub	r24, r15
    157e:	64 01       	movw	r12, r8
    1580:	53 01       	movw	r10, r6
    1582:	08 2e       	mov	r0, r24
    1584:	04 c0       	rjmp	.+8      	; 0x158e <__umoddi3+0x3c8>
    1586:	d6 94       	lsr	r13
    1588:	c7 94       	ror	r12
    158a:	b7 94       	ror	r11
    158c:	a7 94       	ror	r10
    158e:	0a 94       	dec	r0
    1590:	d2 f7       	brpl	.-12     	; 0x1586 <__umoddi3+0x3c0>
    1592:	a4 01       	movw	r20, r8
    1594:	93 01       	movw	r18, r6
    1596:	04 c0       	rjmp	.+8      	; 0x15a0 <__umoddi3+0x3da>
    1598:	22 0f       	add	r18, r18
    159a:	33 1f       	adc	r19, r19
    159c:	44 1f       	adc	r20, r20
    159e:	55 1f       	adc	r21, r21
    15a0:	fa 94       	dec	r15
    15a2:	d2 f7       	brpl	.-12     	; 0x1598 <__umoddi3+0x3d2>
    15a4:	6c 96       	adiw	r28, 0x1c	; 28
    15a6:	6c ac       	ldd	r6, Y+60	; 0x3c
    15a8:	7d ac       	ldd	r7, Y+61	; 0x3d
    15aa:	8e ac       	ldd	r8, Y+62	; 0x3e
    15ac:	9f ac       	ldd	r9, Y+63	; 0x3f
    15ae:	6c 97       	sbiw	r28, 0x1c	; 28
    15b0:	04 c0       	rjmp	.+8      	; 0x15ba <__umoddi3+0x3f4>
    15b2:	96 94       	lsr	r9
    15b4:	87 94       	ror	r8
    15b6:	77 94       	ror	r7
    15b8:	67 94       	ror	r6
    15ba:	8a 95       	dec	r24
    15bc:	d2 f7       	brpl	.-12     	; 0x15b2 <__umoddi3+0x3ec>
    15be:	84 01       	movw	r16, r8
    15c0:	73 01       	movw	r14, r6
    15c2:	e2 2a       	or	r14, r18
    15c4:	f3 2a       	or	r15, r19
    15c6:	04 2b       	or	r16, r20
    15c8:	15 2b       	or	r17, r21
    15ca:	ed a6       	std	Y+45, r14	; 0x2d
    15cc:	fe a6       	std	Y+46, r15	; 0x2e
    15ce:	0f a7       	std	Y+47, r16	; 0x2f
    15d0:	18 ab       	std	Y+48, r17	; 0x30
    15d2:	32 01       	movw	r6, r4
    15d4:	88 24       	eor	r8, r8
    15d6:	99 24       	eor	r9, r9
    15d8:	b2 01       	movw	r22, r4
    15da:	a1 01       	movw	r20, r2
    15dc:	60 70       	andi	r22, 0x00	; 0
    15de:	70 70       	andi	r23, 0x00	; 0
    15e0:	25 96       	adiw	r28, 0x05	; 5
    15e2:	4c af       	std	Y+60, r20	; 0x3c
    15e4:	5d af       	std	Y+61, r21	; 0x3d
    15e6:	6e af       	std	Y+62, r22	; 0x3e
    15e8:	7f af       	std	Y+63, r23	; 0x3f
    15ea:	25 97       	sbiw	r28, 0x05	; 5
    15ec:	c6 01       	movw	r24, r12
    15ee:	b5 01       	movw	r22, r10
    15f0:	a4 01       	movw	r20, r8
    15f2:	93 01       	movw	r18, r6
    15f4:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
    15f8:	7b 01       	movw	r14, r22
    15fa:	8c 01       	movw	r16, r24
    15fc:	c6 01       	movw	r24, r12
    15fe:	b5 01       	movw	r22, r10
    1600:	a4 01       	movw	r20, r8
    1602:	93 01       	movw	r18, r6
    1604:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
    1608:	ca 01       	movw	r24, r20
    160a:	b9 01       	movw	r22, r18
    160c:	25 96       	adiw	r28, 0x05	; 5
    160e:	2c ad       	ldd	r18, Y+60	; 0x3c
    1610:	3d ad       	ldd	r19, Y+61	; 0x3d
    1612:	4e ad       	ldd	r20, Y+62	; 0x3e
    1614:	5f ad       	ldd	r21, Y+63	; 0x3f
    1616:	25 97       	sbiw	r28, 0x05	; 5
    1618:	0e 94 98 2b 	call	0x5730	; 0x5730 <__mulsi3>
    161c:	9b 01       	movw	r18, r22
    161e:	ac 01       	movw	r20, r24
    1620:	87 01       	movw	r16, r14
    1622:	ff 24       	eor	r15, r15
    1624:	ee 24       	eor	r14, r14
    1626:	ad a4       	ldd	r10, Y+45	; 0x2d
    1628:	be a4       	ldd	r11, Y+46	; 0x2e
    162a:	cf a4       	ldd	r12, Y+47	; 0x2f
    162c:	d8 a8       	ldd	r13, Y+48	; 0x30
    162e:	c6 01       	movw	r24, r12
    1630:	aa 27       	eor	r26, r26
    1632:	bb 27       	eor	r27, r27
    1634:	5c 01       	movw	r10, r24
    1636:	6d 01       	movw	r12, r26
    1638:	ae 28       	or	r10, r14
    163a:	bf 28       	or	r11, r15
    163c:	c0 2a       	or	r12, r16
    163e:	d1 2a       	or	r13, r17
    1640:	a2 16       	cp	r10, r18
    1642:	b3 06       	cpc	r11, r19
    1644:	c4 06       	cpc	r12, r20
    1646:	d5 06       	cpc	r13, r21
    1648:	90 f4       	brcc	.+36     	; 0x166e <__umoddi3+0x4a8>
    164a:	a2 0c       	add	r10, r2
    164c:	b3 1c       	adc	r11, r3
    164e:	c4 1c       	adc	r12, r4
    1650:	d5 1c       	adc	r13, r5
    1652:	a2 14       	cp	r10, r2
    1654:	b3 04       	cpc	r11, r3
    1656:	c4 04       	cpc	r12, r4
    1658:	d5 04       	cpc	r13, r5
    165a:	48 f0       	brcs	.+18     	; 0x166e <__umoddi3+0x4a8>
    165c:	a2 16       	cp	r10, r18
    165e:	b3 06       	cpc	r11, r19
    1660:	c4 06       	cpc	r12, r20
    1662:	d5 06       	cpc	r13, r21
    1664:	20 f4       	brcc	.+8      	; 0x166e <__umoddi3+0x4a8>
    1666:	a2 0c       	add	r10, r2
    1668:	b3 1c       	adc	r11, r3
    166a:	c4 1c       	adc	r12, r4
    166c:	d5 1c       	adc	r13, r5
    166e:	a2 1a       	sub	r10, r18
    1670:	b3 0a       	sbc	r11, r19
    1672:	c4 0a       	sbc	r12, r20
    1674:	d5 0a       	sbc	r13, r21
    1676:	c6 01       	movw	r24, r12
    1678:	b5 01       	movw	r22, r10
    167a:	a4 01       	movw	r20, r8
    167c:	93 01       	movw	r18, r6
    167e:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
    1682:	7b 01       	movw	r14, r22
    1684:	8c 01       	movw	r16, r24
    1686:	c6 01       	movw	r24, r12
    1688:	b5 01       	movw	r22, r10
    168a:	a4 01       	movw	r20, r8
    168c:	93 01       	movw	r18, r6
    168e:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
    1692:	ca 01       	movw	r24, r20
    1694:	b9 01       	movw	r22, r18
    1696:	25 96       	adiw	r28, 0x05	; 5
    1698:	2c ad       	ldd	r18, Y+60	; 0x3c
    169a:	3d ad       	ldd	r19, Y+61	; 0x3d
    169c:	4e ad       	ldd	r20, Y+62	; 0x3e
    169e:	5f ad       	ldd	r21, Y+63	; 0x3f
    16a0:	25 97       	sbiw	r28, 0x05	; 5
    16a2:	0e 94 98 2b 	call	0x5730	; 0x5730 <__mulsi3>
    16a6:	9b 01       	movw	r18, r22
    16a8:	ac 01       	movw	r20, r24
    16aa:	87 01       	movw	r16, r14
    16ac:	ff 24       	eor	r15, r15
    16ae:	ee 24       	eor	r14, r14
    16b0:	8d a5       	ldd	r24, Y+45	; 0x2d
    16b2:	9e a5       	ldd	r25, Y+46	; 0x2e
    16b4:	af a5       	ldd	r26, Y+47	; 0x2f
    16b6:	b8 a9       	ldd	r27, Y+48	; 0x30
    16b8:	a0 70       	andi	r26, 0x00	; 0
    16ba:	b0 70       	andi	r27, 0x00	; 0
    16bc:	57 01       	movw	r10, r14
    16be:	68 01       	movw	r12, r16
    16c0:	a8 2a       	or	r10, r24
    16c2:	b9 2a       	or	r11, r25
    16c4:	ca 2a       	or	r12, r26
    16c6:	db 2a       	or	r13, r27
    16c8:	a2 16       	cp	r10, r18
    16ca:	b3 06       	cpc	r11, r19
    16cc:	c4 06       	cpc	r12, r20
    16ce:	d5 06       	cpc	r13, r21
    16d0:	90 f4       	brcc	.+36     	; 0x16f6 <__umoddi3+0x530>
    16d2:	a2 0c       	add	r10, r2
    16d4:	b3 1c       	adc	r11, r3
    16d6:	c4 1c       	adc	r12, r4
    16d8:	d5 1c       	adc	r13, r5
    16da:	a2 14       	cp	r10, r2
    16dc:	b3 04       	cpc	r11, r3
    16de:	c4 04       	cpc	r12, r4
    16e0:	d5 04       	cpc	r13, r5
    16e2:	48 f0       	brcs	.+18     	; 0x16f6 <__umoddi3+0x530>
    16e4:	a2 16       	cp	r10, r18
    16e6:	b3 06       	cpc	r11, r19
    16e8:	c4 06       	cpc	r12, r20
    16ea:	d5 06       	cpc	r13, r21
    16ec:	20 f4       	brcc	.+8      	; 0x16f6 <__umoddi3+0x530>
    16ee:	a2 0c       	add	r10, r2
    16f0:	b3 1c       	adc	r11, r3
    16f2:	c4 1c       	adc	r12, r4
    16f4:	d5 1c       	adc	r13, r5
    16f6:	6c 96       	adiw	r28, 0x1c	; 28
    16f8:	ec ac       	ldd	r14, Y+60	; 0x3c
    16fa:	fd ac       	ldd	r15, Y+61	; 0x3d
    16fc:	0e ad       	ldd	r16, Y+62	; 0x3e
    16fe:	1f ad       	ldd	r17, Y+63	; 0x3f
    1700:	6c 97       	sbiw	r28, 0x1c	; 28
    1702:	68 96       	adiw	r28, 0x18	; 24
    1704:	0f ac       	ldd	r0, Y+63	; 0x3f
    1706:	68 97       	sbiw	r28, 0x18	; 24
    1708:	04 c0       	rjmp	.+8      	; 0x1712 <__umoddi3+0x54c>
    170a:	ee 0c       	add	r14, r14
    170c:	ff 1c       	adc	r15, r15
    170e:	00 1f       	adc	r16, r16
    1710:	11 1f       	adc	r17, r17
    1712:	0a 94       	dec	r0
    1714:	d2 f7       	brpl	.-12     	; 0x170a <__umoddi3+0x544>
    1716:	e9 aa       	std	Y+49, r14	; 0x31
    1718:	fa aa       	std	Y+50, r15	; 0x32
    171a:	0b ab       	std	Y+51, r16	; 0x33
    171c:	1c ab       	std	Y+52, r17	; 0x34
    171e:	a2 1a       	sub	r10, r18
    1720:	b3 0a       	sbc	r11, r19
    1722:	c4 0a       	sbc	r12, r20
    1724:	d5 0a       	sbc	r13, r21
    1726:	32 01       	movw	r6, r4
    1728:	88 24       	eor	r8, r8
    172a:	99 24       	eor	r9, r9
    172c:	b2 01       	movw	r22, r4
    172e:	a1 01       	movw	r20, r2
    1730:	60 70       	andi	r22, 0x00	; 0
    1732:	70 70       	andi	r23, 0x00	; 0
    1734:	29 96       	adiw	r28, 0x09	; 9
    1736:	4c af       	std	Y+60, r20	; 0x3c
    1738:	5d af       	std	Y+61, r21	; 0x3d
    173a:	6e af       	std	Y+62, r22	; 0x3e
    173c:	7f af       	std	Y+63, r23	; 0x3f
    173e:	29 97       	sbiw	r28, 0x09	; 9
    1740:	c6 01       	movw	r24, r12
    1742:	b5 01       	movw	r22, r10
    1744:	a4 01       	movw	r20, r8
    1746:	93 01       	movw	r18, r6
    1748:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
    174c:	7b 01       	movw	r14, r22
    174e:	8c 01       	movw	r16, r24
    1750:	c6 01       	movw	r24, r12
    1752:	b5 01       	movw	r22, r10
    1754:	a4 01       	movw	r20, r8
    1756:	93 01       	movw	r18, r6
    1758:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
    175c:	ca 01       	movw	r24, r20
    175e:	b9 01       	movw	r22, r18
    1760:	29 96       	adiw	r28, 0x09	; 9
    1762:	2c ad       	ldd	r18, Y+60	; 0x3c
    1764:	3d ad       	ldd	r19, Y+61	; 0x3d
    1766:	4e ad       	ldd	r20, Y+62	; 0x3e
    1768:	5f ad       	ldd	r21, Y+63	; 0x3f
    176a:	29 97       	sbiw	r28, 0x09	; 9
    176c:	0e 94 98 2b 	call	0x5730	; 0x5730 <__mulsi3>
    1770:	9b 01       	movw	r18, r22
    1772:	ac 01       	movw	r20, r24
    1774:	87 01       	movw	r16, r14
    1776:	ff 24       	eor	r15, r15
    1778:	ee 24       	eor	r14, r14
    177a:	a9 a8       	ldd	r10, Y+49	; 0x31
    177c:	ba a8       	ldd	r11, Y+50	; 0x32
    177e:	cb a8       	ldd	r12, Y+51	; 0x33
    1780:	dc a8       	ldd	r13, Y+52	; 0x34
    1782:	c6 01       	movw	r24, r12
    1784:	aa 27       	eor	r26, r26
    1786:	bb 27       	eor	r27, r27
    1788:	57 01       	movw	r10, r14
    178a:	68 01       	movw	r12, r16
    178c:	a8 2a       	or	r10, r24
    178e:	b9 2a       	or	r11, r25
    1790:	ca 2a       	or	r12, r26
    1792:	db 2a       	or	r13, r27
    1794:	a2 16       	cp	r10, r18
    1796:	b3 06       	cpc	r11, r19
    1798:	c4 06       	cpc	r12, r20
    179a:	d5 06       	cpc	r13, r21
    179c:	90 f4       	brcc	.+36     	; 0x17c2 <__umoddi3+0x5fc>
    179e:	a2 0c       	add	r10, r2
    17a0:	b3 1c       	adc	r11, r3
    17a2:	c4 1c       	adc	r12, r4
    17a4:	d5 1c       	adc	r13, r5
    17a6:	a2 14       	cp	r10, r2
    17a8:	b3 04       	cpc	r11, r3
    17aa:	c4 04       	cpc	r12, r4
    17ac:	d5 04       	cpc	r13, r5
    17ae:	48 f0       	brcs	.+18     	; 0x17c2 <__umoddi3+0x5fc>
    17b0:	a2 16       	cp	r10, r18
    17b2:	b3 06       	cpc	r11, r19
    17b4:	c4 06       	cpc	r12, r20
    17b6:	d5 06       	cpc	r13, r21
    17b8:	20 f4       	brcc	.+8      	; 0x17c2 <__umoddi3+0x5fc>
    17ba:	a2 0c       	add	r10, r2
    17bc:	b3 1c       	adc	r11, r3
    17be:	c4 1c       	adc	r12, r4
    17c0:	d5 1c       	adc	r13, r5
    17c2:	a2 1a       	sub	r10, r18
    17c4:	b3 0a       	sbc	r11, r19
    17c6:	c4 0a       	sbc	r12, r20
    17c8:	d5 0a       	sbc	r13, r21
    17ca:	c6 01       	movw	r24, r12
    17cc:	b5 01       	movw	r22, r10
    17ce:	a4 01       	movw	r20, r8
    17d0:	93 01       	movw	r18, r6
    17d2:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
    17d6:	7b 01       	movw	r14, r22
    17d8:	8c 01       	movw	r16, r24
    17da:	c6 01       	movw	r24, r12
    17dc:	b5 01       	movw	r22, r10
    17de:	a4 01       	movw	r20, r8
    17e0:	93 01       	movw	r18, r6
    17e2:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
    17e6:	ca 01       	movw	r24, r20
    17e8:	b9 01       	movw	r22, r18
    17ea:	29 96       	adiw	r28, 0x09	; 9
    17ec:	2c ad       	ldd	r18, Y+60	; 0x3c
    17ee:	3d ad       	ldd	r19, Y+61	; 0x3d
    17f0:	4e ad       	ldd	r20, Y+62	; 0x3e
    17f2:	5f ad       	ldd	r21, Y+63	; 0x3f
    17f4:	29 97       	sbiw	r28, 0x09	; 9
    17f6:	0e 94 98 2b 	call	0x5730	; 0x5730 <__mulsi3>
    17fa:	9b 01       	movw	r18, r22
    17fc:	ac 01       	movw	r20, r24
    17fe:	87 01       	movw	r16, r14
    1800:	ff 24       	eor	r15, r15
    1802:	ee 24       	eor	r14, r14
    1804:	89 a9       	ldd	r24, Y+49	; 0x31
    1806:	9a a9       	ldd	r25, Y+50	; 0x32
    1808:	ab a9       	ldd	r26, Y+51	; 0x33
    180a:	bc a9       	ldd	r27, Y+52	; 0x34
    180c:	a0 70       	andi	r26, 0x00	; 0
    180e:	b0 70       	andi	r27, 0x00	; 0
    1810:	e8 2a       	or	r14, r24
    1812:	f9 2a       	or	r15, r25
    1814:	0a 2b       	or	r16, r26
    1816:	1b 2b       	or	r17, r27
    1818:	e2 16       	cp	r14, r18
    181a:	f3 06       	cpc	r15, r19
    181c:	04 07       	cpc	r16, r20
    181e:	15 07       	cpc	r17, r21
    1820:	90 f4       	brcc	.+36     	; 0x1846 <__umoddi3+0x680>
    1822:	e2 0c       	add	r14, r2
    1824:	f3 1c       	adc	r15, r3
    1826:	04 1d       	adc	r16, r4
    1828:	15 1d       	adc	r17, r5
    182a:	e2 14       	cp	r14, r2
    182c:	f3 04       	cpc	r15, r3
    182e:	04 05       	cpc	r16, r4
    1830:	15 05       	cpc	r17, r5
    1832:	48 f0       	brcs	.+18     	; 0x1846 <__umoddi3+0x680>
    1834:	e2 16       	cp	r14, r18
    1836:	f3 06       	cpc	r15, r19
    1838:	04 07       	cpc	r16, r20
    183a:	15 07       	cpc	r17, r21
    183c:	20 f4       	brcc	.+8      	; 0x1846 <__umoddi3+0x680>
    183e:	e2 0c       	add	r14, r2
    1840:	f3 1c       	adc	r15, r3
    1842:	04 1d       	adc	r16, r4
    1844:	15 1d       	adc	r17, r5
    1846:	e2 1a       	sub	r14, r18
    1848:	f3 0a       	sbc	r15, r19
    184a:	04 0b       	sbc	r16, r20
    184c:	15 0b       	sbc	r17, r21
    184e:	d8 01       	movw	r26, r16
    1850:	c7 01       	movw	r24, r14
    1852:	09 ac       	ldd	r0, Y+57	; 0x39
    1854:	04 c0       	rjmp	.+8      	; 0x185e <__umoddi3+0x698>
    1856:	b6 95       	lsr	r27
    1858:	a7 95       	ror	r26
    185a:	97 95       	ror	r25
    185c:	87 95       	ror	r24
    185e:	0a 94       	dec	r0
    1860:	d2 f7       	brpl	.-12     	; 0x1856 <__umoddi3+0x690>
    1862:	89 8b       	std	Y+17, r24	; 0x11
    1864:	9a 8b       	std	Y+18, r25	; 0x12
    1866:	ab 8b       	std	Y+19, r26	; 0x13
    1868:	bc 8b       	std	Y+20, r27	; 0x14
    186a:	1d 8a       	std	Y+21, r1	; 0x15
    186c:	1e 8a       	std	Y+22, r1	; 0x16
    186e:	1f 8a       	std	Y+23, r1	; 0x17
    1870:	18 8e       	std	Y+24, r1	; 0x18
    1872:	28 2f       	mov	r18, r24
    1874:	3a 89       	ldd	r19, Y+18	; 0x12
    1876:	4b 89       	ldd	r20, Y+19	; 0x13
    1878:	5c 89       	ldd	r21, Y+20	; 0x14
    187a:	6d 89       	ldd	r22, Y+21	; 0x15
    187c:	0c c3       	rjmp	.+1560   	; 0x1e96 <__umoddi3+0xcd0>
    187e:	6a 14       	cp	r6, r10
    1880:	7b 04       	cpc	r7, r11
    1882:	8c 04       	cpc	r8, r12
    1884:	9d 04       	cpc	r9, r13
    1886:	08 f4       	brcc	.+2      	; 0x188a <__umoddi3+0x6c4>
    1888:	09 c3       	rjmp	.+1554   	; 0x1e9c <__umoddi3+0xcd6>
    188a:	00 e0       	ldi	r16, 0x00	; 0
    188c:	a0 16       	cp	r10, r16
    188e:	00 e0       	ldi	r16, 0x00	; 0
    1890:	b0 06       	cpc	r11, r16
    1892:	01 e0       	ldi	r16, 0x01	; 1
    1894:	c0 06       	cpc	r12, r16
    1896:	00 e0       	ldi	r16, 0x00	; 0
    1898:	d0 06       	cpc	r13, r16
    189a:	88 f4       	brcc	.+34     	; 0x18be <__umoddi3+0x6f8>
    189c:	1f ef       	ldi	r17, 0xFF	; 255
    189e:	a1 16       	cp	r10, r17
    18a0:	b1 04       	cpc	r11, r1
    18a2:	c1 04       	cpc	r12, r1
    18a4:	d1 04       	cpc	r13, r1
    18a6:	39 f0       	breq	.+14     	; 0x18b6 <__umoddi3+0x6f0>
    18a8:	30 f0       	brcs	.+12     	; 0x18b6 <__umoddi3+0x6f0>
    18aa:	28 e0       	ldi	r18, 0x08	; 8
    18ac:	e2 2e       	mov	r14, r18
    18ae:	f1 2c       	mov	r15, r1
    18b0:	01 2d       	mov	r16, r1
    18b2:	11 2d       	mov	r17, r1
    18b4:	18 c0       	rjmp	.+48     	; 0x18e6 <__umoddi3+0x720>
    18b6:	ee 24       	eor	r14, r14
    18b8:	ff 24       	eor	r15, r15
    18ba:	87 01       	movw	r16, r14
    18bc:	14 c0       	rjmp	.+40     	; 0x18e6 <__umoddi3+0x720>
    18be:	40 e0       	ldi	r20, 0x00	; 0
    18c0:	a4 16       	cp	r10, r20
    18c2:	40 e0       	ldi	r20, 0x00	; 0
    18c4:	b4 06       	cpc	r11, r20
    18c6:	40 e0       	ldi	r20, 0x00	; 0
    18c8:	c4 06       	cpc	r12, r20
    18ca:	41 e0       	ldi	r20, 0x01	; 1
    18cc:	d4 06       	cpc	r13, r20
    18ce:	30 f0       	brcs	.+12     	; 0x18dc <__umoddi3+0x716>
    18d0:	98 e1       	ldi	r25, 0x18	; 24
    18d2:	e9 2e       	mov	r14, r25
    18d4:	f1 2c       	mov	r15, r1
    18d6:	01 2d       	mov	r16, r1
    18d8:	11 2d       	mov	r17, r1
    18da:	05 c0       	rjmp	.+10     	; 0x18e6 <__umoddi3+0x720>
    18dc:	80 e1       	ldi	r24, 0x10	; 16
    18de:	e8 2e       	mov	r14, r24
    18e0:	f1 2c       	mov	r15, r1
    18e2:	01 2d       	mov	r16, r1
    18e4:	11 2d       	mov	r17, r1
    18e6:	d6 01       	movw	r26, r12
    18e8:	c5 01       	movw	r24, r10
    18ea:	0e 2c       	mov	r0, r14
    18ec:	04 c0       	rjmp	.+8      	; 0x18f6 <__umoddi3+0x730>
    18ee:	b6 95       	lsr	r27
    18f0:	a7 95       	ror	r26
    18f2:	97 95       	ror	r25
    18f4:	87 95       	ror	r24
    18f6:	0a 94       	dec	r0
    18f8:	d2 f7       	brpl	.-12     	; 0x18ee <__umoddi3+0x728>
    18fa:	85 57       	subi	r24, 0x75	; 117
    18fc:	9f 4f       	sbci	r25, 0xFF	; 255
    18fe:	dc 01       	movw	r26, r24
    1900:	2c 91       	ld	r18, X
    1902:	80 e2       	ldi	r24, 0x20	; 32
    1904:	90 e0       	ldi	r25, 0x00	; 0
    1906:	a0 e0       	ldi	r26, 0x00	; 0
    1908:	b0 e0       	ldi	r27, 0x00	; 0
    190a:	8e 19       	sub	r24, r14
    190c:	9f 09       	sbc	r25, r15
    190e:	a0 0b       	sbc	r26, r16
    1910:	b1 0b       	sbc	r27, r17
    1912:	82 1b       	sub	r24, r18
    1914:	91 09       	sbc	r25, r1
    1916:	a1 09       	sbc	r26, r1
    1918:	b1 09       	sbc	r27, r1
    191a:	00 97       	sbiw	r24, 0x00	; 0
    191c:	a1 05       	cpc	r26, r1
    191e:	b1 05       	cpc	r27, r1
    1920:	09 f0       	breq	.+2      	; 0x1924 <__umoddi3+0x75e>
    1922:	4f c0       	rjmp	.+158    	; 0x19c2 <__umoddi3+0x7fc>
    1924:	a6 14       	cp	r10, r6
    1926:	b7 04       	cpc	r11, r7
    1928:	c8 04       	cpc	r12, r8
    192a:	d9 04       	cpc	r13, r9
    192c:	58 f0       	brcs	.+22     	; 0x1944 <__umoddi3+0x77e>
    192e:	6c 96       	adiw	r28, 0x1c	; 28
    1930:	ec ac       	ldd	r14, Y+60	; 0x3c
    1932:	fd ac       	ldd	r15, Y+61	; 0x3d
    1934:	0e ad       	ldd	r16, Y+62	; 0x3e
    1936:	1f ad       	ldd	r17, Y+63	; 0x3f
    1938:	6c 97       	sbiw	r28, 0x1c	; 28
    193a:	e2 14       	cp	r14, r2
    193c:	f3 04       	cpc	r15, r3
    193e:	04 05       	cpc	r16, r4
    1940:	15 05       	cpc	r17, r5
    1942:	68 f1       	brcs	.+90     	; 0x199e <__umoddi3+0x7d8>
    1944:	6c 96       	adiw	r28, 0x1c	; 28
    1946:	ec ac       	ldd	r14, Y+60	; 0x3c
    1948:	fd ac       	ldd	r15, Y+61	; 0x3d
    194a:	0e ad       	ldd	r16, Y+62	; 0x3e
    194c:	1f ad       	ldd	r17, Y+63	; 0x3f
    194e:	6c 97       	sbiw	r28, 0x1c	; 28
    1950:	e2 18       	sub	r14, r2
    1952:	f3 08       	sbc	r15, r3
    1954:	04 09       	sbc	r16, r4
    1956:	15 09       	sbc	r17, r5
    1958:	a4 01       	movw	r20, r8
    195a:	93 01       	movw	r18, r6
    195c:	2a 19       	sub	r18, r10
    195e:	3b 09       	sbc	r19, r11
    1960:	4c 09       	sbc	r20, r12
    1962:	5d 09       	sbc	r21, r13
    1964:	aa 24       	eor	r10, r10
    1966:	bb 24       	eor	r11, r11
    1968:	65 01       	movw	r12, r10
    196a:	6c 96       	adiw	r28, 0x1c	; 28
    196c:	6c ad       	ldd	r22, Y+60	; 0x3c
    196e:	7d ad       	ldd	r23, Y+61	; 0x3d
    1970:	8e ad       	ldd	r24, Y+62	; 0x3e
    1972:	9f ad       	ldd	r25, Y+63	; 0x3f
    1974:	6c 97       	sbiw	r28, 0x1c	; 28
    1976:	6e 15       	cp	r22, r14
    1978:	7f 05       	cpc	r23, r15
    197a:	80 07       	cpc	r24, r16
    197c:	91 07       	cpc	r25, r17
    197e:	28 f4       	brcc	.+10     	; 0x198a <__umoddi3+0x7c4>
    1980:	b1 e0       	ldi	r27, 0x01	; 1
    1982:	ab 2e       	mov	r10, r27
    1984:	b1 2c       	mov	r11, r1
    1986:	c1 2c       	mov	r12, r1
    1988:	d1 2c       	mov	r13, r1
    198a:	da 01       	movw	r26, r20
    198c:	c9 01       	movw	r24, r18
    198e:	8a 19       	sub	r24, r10
    1990:	9b 09       	sbc	r25, r11
    1992:	ac 09       	sbc	r26, r12
    1994:	bd 09       	sbc	r27, r13
    1996:	8d ab       	std	Y+53, r24	; 0x35
    1998:	9e ab       	std	Y+54, r25	; 0x36
    199a:	af ab       	std	Y+55, r26	; 0x37
    199c:	b8 af       	std	Y+56, r27	; 0x38
    199e:	e9 8a       	std	Y+17, r14	; 0x11
    19a0:	fa 8a       	std	Y+18, r15	; 0x12
    19a2:	0b 8b       	std	Y+19, r16	; 0x13
    19a4:	1c 8b       	std	Y+20, r17	; 0x14
    19a6:	6d a8       	ldd	r6, Y+53	; 0x35
    19a8:	7e a8       	ldd	r7, Y+54	; 0x36
    19aa:	8f a8       	ldd	r8, Y+55	; 0x37
    19ac:	98 ac       	ldd	r9, Y+56	; 0x38
    19ae:	6d 8a       	std	Y+21, r6	; 0x15
    19b0:	7e 8a       	std	Y+22, r7	; 0x16
    19b2:	8f 8a       	std	Y+23, r8	; 0x17
    19b4:	98 8e       	std	Y+24, r9	; 0x18
    19b6:	2e 2d       	mov	r18, r14
    19b8:	3a 89       	ldd	r19, Y+18	; 0x12
    19ba:	4b 89       	ldd	r20, Y+19	; 0x13
    19bc:	5c 89       	ldd	r21, Y+20	; 0x14
    19be:	6d a9       	ldd	r22, Y+53	; 0x35
    19c0:	6a c2       	rjmp	.+1236   	; 0x1e96 <__umoddi3+0xcd0>
    19c2:	67 96       	adiw	r28, 0x17	; 23
    19c4:	8f af       	std	Y+63, r24	; 0x3f
    19c6:	67 97       	sbiw	r28, 0x17	; 23
    19c8:	a6 01       	movw	r20, r12
    19ca:	95 01       	movw	r18, r10
    19cc:	08 2e       	mov	r0, r24
    19ce:	04 c0       	rjmp	.+8      	; 0x19d8 <__umoddi3+0x812>
    19d0:	22 0f       	add	r18, r18
    19d2:	33 1f       	adc	r19, r19
    19d4:	44 1f       	adc	r20, r20
    19d6:	55 1f       	adc	r21, r21
    19d8:	0a 94       	dec	r0
    19da:	d2 f7       	brpl	.-12     	; 0x19d0 <__umoddi3+0x80a>
    19dc:	a0 e2       	ldi	r26, 0x20	; 32
    19de:	aa 2e       	mov	r10, r26
    19e0:	a8 1a       	sub	r10, r24
    19e2:	66 96       	adiw	r28, 0x16	; 22
    19e4:	af ae       	std	Y+63, r10	; 0x3f
    19e6:	66 97       	sbiw	r28, 0x16	; 22
    19e8:	d2 01       	movw	r26, r4
    19ea:	c1 01       	movw	r24, r2
    19ec:	04 c0       	rjmp	.+8      	; 0x19f6 <__umoddi3+0x830>
    19ee:	b6 95       	lsr	r27
    19f0:	a7 95       	ror	r26
    19f2:	97 95       	ror	r25
    19f4:	87 95       	ror	r24
    19f6:	aa 94       	dec	r10
    19f8:	d2 f7       	brpl	.-12     	; 0x19ee <__umoddi3+0x828>
    19fa:	6c 01       	movw	r12, r24
    19fc:	7d 01       	movw	r14, r26
    19fe:	c2 2a       	or	r12, r18
    1a00:	d3 2a       	or	r13, r19
    1a02:	e4 2a       	or	r14, r20
    1a04:	f5 2a       	or	r15, r21
    1a06:	c9 a6       	std	Y+41, r12	; 0x29
    1a08:	da a6       	std	Y+42, r13	; 0x2a
    1a0a:	eb a6       	std	Y+43, r14	; 0x2b
    1a0c:	fc a6       	std	Y+44, r15	; 0x2c
    1a0e:	82 01       	movw	r16, r4
    1a10:	71 01       	movw	r14, r2
    1a12:	67 96       	adiw	r28, 0x17	; 23
    1a14:	0f ac       	ldd	r0, Y+63	; 0x3f
    1a16:	67 97       	sbiw	r28, 0x17	; 23
    1a18:	04 c0       	rjmp	.+8      	; 0x1a22 <__umoddi3+0x85c>
    1a1a:	ee 0c       	add	r14, r14
    1a1c:	ff 1c       	adc	r15, r15
    1a1e:	00 1f       	adc	r16, r16
    1a20:	11 1f       	adc	r17, r17
    1a22:	0a 94       	dec	r0
    1a24:	d2 f7       	brpl	.-12     	; 0x1a1a <__umoddi3+0x854>
    1a26:	ed a2       	std	Y+37, r14	; 0x25
    1a28:	fe a2       	std	Y+38, r15	; 0x26
    1a2a:	0f a3       	std	Y+39, r16	; 0x27
    1a2c:	18 a7       	std	Y+40, r17	; 0x28
    1a2e:	64 01       	movw	r12, r8
    1a30:	53 01       	movw	r10, r6
    1a32:	66 96       	adiw	r28, 0x16	; 22
    1a34:	0f ac       	ldd	r0, Y+63	; 0x3f
    1a36:	66 97       	sbiw	r28, 0x16	; 22
    1a38:	04 c0       	rjmp	.+8      	; 0x1a42 <__umoddi3+0x87c>
    1a3a:	d6 94       	lsr	r13
    1a3c:	c7 94       	ror	r12
    1a3e:	b7 94       	ror	r11
    1a40:	a7 94       	ror	r10
    1a42:	0a 94       	dec	r0
    1a44:	d2 f7       	brpl	.-12     	; 0x1a3a <__umoddi3+0x874>
    1a46:	a4 01       	movw	r20, r8
    1a48:	93 01       	movw	r18, r6
    1a4a:	67 96       	adiw	r28, 0x17	; 23
    1a4c:	0f ac       	ldd	r0, Y+63	; 0x3f
    1a4e:	67 97       	sbiw	r28, 0x17	; 23
    1a50:	04 c0       	rjmp	.+8      	; 0x1a5a <__umoddi3+0x894>
    1a52:	22 0f       	add	r18, r18
    1a54:	33 1f       	adc	r19, r19
    1a56:	44 1f       	adc	r20, r20
    1a58:	55 1f       	adc	r21, r21
    1a5a:	0a 94       	dec	r0
    1a5c:	d2 f7       	brpl	.-12     	; 0x1a52 <__umoddi3+0x88c>
    1a5e:	6c 96       	adiw	r28, 0x1c	; 28
    1a60:	8c ad       	ldd	r24, Y+60	; 0x3c
    1a62:	9d ad       	ldd	r25, Y+61	; 0x3d
    1a64:	ae ad       	ldd	r26, Y+62	; 0x3e
    1a66:	bf ad       	ldd	r27, Y+63	; 0x3f
    1a68:	6c 97       	sbiw	r28, 0x1c	; 28
    1a6a:	66 96       	adiw	r28, 0x16	; 22
    1a6c:	0f ac       	ldd	r0, Y+63	; 0x3f
    1a6e:	66 97       	sbiw	r28, 0x16	; 22
    1a70:	04 c0       	rjmp	.+8      	; 0x1a7a <__umoddi3+0x8b4>
    1a72:	b6 95       	lsr	r27
    1a74:	a7 95       	ror	r26
    1a76:	97 95       	ror	r25
    1a78:	87 95       	ror	r24
    1a7a:	0a 94       	dec	r0
    1a7c:	d2 f7       	brpl	.-12     	; 0x1a72 <__umoddi3+0x8ac>
    1a7e:	3c 01       	movw	r6, r24
    1a80:	4d 01       	movw	r8, r26
    1a82:	62 2a       	or	r6, r18
    1a84:	73 2a       	or	r7, r19
    1a86:	84 2a       	or	r8, r20
    1a88:	95 2a       	or	r9, r21
    1a8a:	69 a2       	std	Y+33, r6	; 0x21
    1a8c:	7a a2       	std	Y+34, r7	; 0x22
    1a8e:	8b a2       	std	Y+35, r8	; 0x23
    1a90:	9c a2       	std	Y+36, r9	; 0x24
    1a92:	6c 96       	adiw	r28, 0x1c	; 28
    1a94:	ec ac       	ldd	r14, Y+60	; 0x3c
    1a96:	fd ac       	ldd	r15, Y+61	; 0x3d
    1a98:	0e ad       	ldd	r16, Y+62	; 0x3e
    1a9a:	1f ad       	ldd	r17, Y+63	; 0x3f
    1a9c:	6c 97       	sbiw	r28, 0x1c	; 28
    1a9e:	67 96       	adiw	r28, 0x17	; 23
    1aa0:	0f ac       	ldd	r0, Y+63	; 0x3f
    1aa2:	67 97       	sbiw	r28, 0x17	; 23
    1aa4:	04 c0       	rjmp	.+8      	; 0x1aae <__umoddi3+0x8e8>
    1aa6:	ee 0c       	add	r14, r14
    1aa8:	ff 1c       	adc	r15, r15
    1aaa:	00 1f       	adc	r16, r16
    1aac:	11 1f       	adc	r17, r17
    1aae:	0a 94       	dec	r0
    1ab0:	d2 f7       	brpl	.-12     	; 0x1aa6 <__umoddi3+0x8e0>
    1ab2:	ed 8e       	std	Y+29, r14	; 0x1d
    1ab4:	fe 8e       	std	Y+30, r15	; 0x1e
    1ab6:	0f 8f       	std	Y+31, r16	; 0x1f
    1ab8:	18 a3       	std	Y+32, r17	; 0x20
    1aba:	49 a5       	ldd	r20, Y+41	; 0x29
    1abc:	5a a5       	ldd	r21, Y+42	; 0x2a
    1abe:	6b a5       	ldd	r22, Y+43	; 0x2b
    1ac0:	7c a5       	ldd	r23, Y+44	; 0x2c
    1ac2:	3b 01       	movw	r6, r22
    1ac4:	88 24       	eor	r8, r8
    1ac6:	99 24       	eor	r9, r9
    1ac8:	60 70       	andi	r22, 0x00	; 0
    1aca:	70 70       	andi	r23, 0x00	; 0
    1acc:	2d 96       	adiw	r28, 0x0d	; 13
    1ace:	4c af       	std	Y+60, r20	; 0x3c
    1ad0:	5d af       	std	Y+61, r21	; 0x3d
    1ad2:	6e af       	std	Y+62, r22	; 0x3e
    1ad4:	7f af       	std	Y+63, r23	; 0x3f
    1ad6:	2d 97       	sbiw	r28, 0x0d	; 13
    1ad8:	c6 01       	movw	r24, r12
    1ada:	b5 01       	movw	r22, r10
    1adc:	a4 01       	movw	r20, r8
    1ade:	93 01       	movw	r18, r6
    1ae0:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
    1ae4:	7b 01       	movw	r14, r22
    1ae6:	8c 01       	movw	r16, r24
    1ae8:	c6 01       	movw	r24, r12
    1aea:	b5 01       	movw	r22, r10
    1aec:	a4 01       	movw	r20, r8
    1aee:	93 01       	movw	r18, r6
    1af0:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
    1af4:	c9 01       	movw	r24, r18
    1af6:	da 01       	movw	r26, r20
    1af8:	1c 01       	movw	r2, r24
    1afa:	2d 01       	movw	r4, r26
    1afc:	c2 01       	movw	r24, r4
    1afe:	b1 01       	movw	r22, r2
    1b00:	2d 96       	adiw	r28, 0x0d	; 13
    1b02:	2c ad       	ldd	r18, Y+60	; 0x3c
    1b04:	3d ad       	ldd	r19, Y+61	; 0x3d
    1b06:	4e ad       	ldd	r20, Y+62	; 0x3e
    1b08:	5f ad       	ldd	r21, Y+63	; 0x3f
    1b0a:	2d 97       	sbiw	r28, 0x0d	; 13
    1b0c:	0e 94 98 2b 	call	0x5730	; 0x5730 <__mulsi3>
    1b10:	9b 01       	movw	r18, r22
    1b12:	ac 01       	movw	r20, r24
    1b14:	87 01       	movw	r16, r14
    1b16:	ff 24       	eor	r15, r15
    1b18:	ee 24       	eor	r14, r14
    1b1a:	a9 a0       	ldd	r10, Y+33	; 0x21
    1b1c:	ba a0       	ldd	r11, Y+34	; 0x22
    1b1e:	cb a0       	ldd	r12, Y+35	; 0x23
    1b20:	dc a0       	ldd	r13, Y+36	; 0x24
    1b22:	c6 01       	movw	r24, r12
    1b24:	aa 27       	eor	r26, r26
    1b26:	bb 27       	eor	r27, r27
    1b28:	57 01       	movw	r10, r14
    1b2a:	68 01       	movw	r12, r16
    1b2c:	a8 2a       	or	r10, r24
    1b2e:	b9 2a       	or	r11, r25
    1b30:	ca 2a       	or	r12, r26
    1b32:	db 2a       	or	r13, r27
    1b34:	a2 16       	cp	r10, r18
    1b36:	b3 06       	cpc	r11, r19
    1b38:	c4 06       	cpc	r12, r20
    1b3a:	d5 06       	cpc	r13, r21
    1b3c:	00 f5       	brcc	.+64     	; 0x1b7e <__umoddi3+0x9b8>
    1b3e:	08 94       	sec
    1b40:	21 08       	sbc	r2, r1
    1b42:	31 08       	sbc	r3, r1
    1b44:	41 08       	sbc	r4, r1
    1b46:	51 08       	sbc	r5, r1
    1b48:	e9 a4       	ldd	r14, Y+41	; 0x29
    1b4a:	fa a4       	ldd	r15, Y+42	; 0x2a
    1b4c:	0b a5       	ldd	r16, Y+43	; 0x2b
    1b4e:	1c a5       	ldd	r17, Y+44	; 0x2c
    1b50:	ae 0c       	add	r10, r14
    1b52:	bf 1c       	adc	r11, r15
    1b54:	c0 1e       	adc	r12, r16
    1b56:	d1 1e       	adc	r13, r17
    1b58:	ae 14       	cp	r10, r14
    1b5a:	bf 04       	cpc	r11, r15
    1b5c:	c0 06       	cpc	r12, r16
    1b5e:	d1 06       	cpc	r13, r17
    1b60:	70 f0       	brcs	.+28     	; 0x1b7e <__umoddi3+0x9b8>
    1b62:	a2 16       	cp	r10, r18
    1b64:	b3 06       	cpc	r11, r19
    1b66:	c4 06       	cpc	r12, r20
    1b68:	d5 06       	cpc	r13, r21
    1b6a:	48 f4       	brcc	.+18     	; 0x1b7e <__umoddi3+0x9b8>
    1b6c:	08 94       	sec
    1b6e:	21 08       	sbc	r2, r1
    1b70:	31 08       	sbc	r3, r1
    1b72:	41 08       	sbc	r4, r1
    1b74:	51 08       	sbc	r5, r1
    1b76:	ae 0c       	add	r10, r14
    1b78:	bf 1c       	adc	r11, r15
    1b7a:	c0 1e       	adc	r12, r16
    1b7c:	d1 1e       	adc	r13, r17
    1b7e:	a2 1a       	sub	r10, r18
    1b80:	b3 0a       	sbc	r11, r19
    1b82:	c4 0a       	sbc	r12, r20
    1b84:	d5 0a       	sbc	r13, r21
    1b86:	c6 01       	movw	r24, r12
    1b88:	b5 01       	movw	r22, r10
    1b8a:	a4 01       	movw	r20, r8
    1b8c:	93 01       	movw	r18, r6
    1b8e:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
    1b92:	7b 01       	movw	r14, r22
    1b94:	8c 01       	movw	r16, r24
    1b96:	c6 01       	movw	r24, r12
    1b98:	b5 01       	movw	r22, r10
    1b9a:	a4 01       	movw	r20, r8
    1b9c:	93 01       	movw	r18, r6
    1b9e:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
    1ba2:	c9 01       	movw	r24, r18
    1ba4:	da 01       	movw	r26, r20
    1ba6:	3c 01       	movw	r6, r24
    1ba8:	4d 01       	movw	r8, r26
    1baa:	c4 01       	movw	r24, r8
    1bac:	b3 01       	movw	r22, r6
    1bae:	2d 96       	adiw	r28, 0x0d	; 13
    1bb0:	2c ad       	ldd	r18, Y+60	; 0x3c
    1bb2:	3d ad       	ldd	r19, Y+61	; 0x3d
    1bb4:	4e ad       	ldd	r20, Y+62	; 0x3e
    1bb6:	5f ad       	ldd	r21, Y+63	; 0x3f
    1bb8:	2d 97       	sbiw	r28, 0x0d	; 13
    1bba:	0e 94 98 2b 	call	0x5730	; 0x5730 <__mulsi3>
    1bbe:	9b 01       	movw	r18, r22
    1bc0:	ac 01       	movw	r20, r24
    1bc2:	87 01       	movw	r16, r14
    1bc4:	ff 24       	eor	r15, r15
    1bc6:	ee 24       	eor	r14, r14
    1bc8:	89 a1       	ldd	r24, Y+33	; 0x21
    1bca:	9a a1       	ldd	r25, Y+34	; 0x22
    1bcc:	ab a1       	ldd	r26, Y+35	; 0x23
    1bce:	bc a1       	ldd	r27, Y+36	; 0x24
    1bd0:	a0 70       	andi	r26, 0x00	; 0
    1bd2:	b0 70       	andi	r27, 0x00	; 0
    1bd4:	57 01       	movw	r10, r14
    1bd6:	68 01       	movw	r12, r16
    1bd8:	a8 2a       	or	r10, r24
    1bda:	b9 2a       	or	r11, r25
    1bdc:	ca 2a       	or	r12, r26
    1bde:	db 2a       	or	r13, r27
    1be0:	a2 16       	cp	r10, r18
    1be2:	b3 06       	cpc	r11, r19
    1be4:	c4 06       	cpc	r12, r20
    1be6:	d5 06       	cpc	r13, r21
    1be8:	00 f5       	brcc	.+64     	; 0x1c2a <__umoddi3+0xa64>
    1bea:	08 94       	sec
    1bec:	61 08       	sbc	r6, r1
    1bee:	71 08       	sbc	r7, r1
    1bf0:	81 08       	sbc	r8, r1
    1bf2:	91 08       	sbc	r9, r1
    1bf4:	69 a5       	ldd	r22, Y+41	; 0x29
    1bf6:	7a a5       	ldd	r23, Y+42	; 0x2a
    1bf8:	8b a5       	ldd	r24, Y+43	; 0x2b
    1bfa:	9c a5       	ldd	r25, Y+44	; 0x2c
    1bfc:	a6 0e       	add	r10, r22
    1bfe:	b7 1e       	adc	r11, r23
    1c00:	c8 1e       	adc	r12, r24
    1c02:	d9 1e       	adc	r13, r25
    1c04:	a6 16       	cp	r10, r22
    1c06:	b7 06       	cpc	r11, r23
    1c08:	c8 06       	cpc	r12, r24
    1c0a:	d9 06       	cpc	r13, r25
    1c0c:	70 f0       	brcs	.+28     	; 0x1c2a <__umoddi3+0xa64>
    1c0e:	a2 16       	cp	r10, r18
    1c10:	b3 06       	cpc	r11, r19
    1c12:	c4 06       	cpc	r12, r20
    1c14:	d5 06       	cpc	r13, r21
    1c16:	48 f4       	brcc	.+18     	; 0x1c2a <__umoddi3+0xa64>
    1c18:	08 94       	sec
    1c1a:	61 08       	sbc	r6, r1
    1c1c:	71 08       	sbc	r7, r1
    1c1e:	81 08       	sbc	r8, r1
    1c20:	91 08       	sbc	r9, r1
    1c22:	a6 0e       	add	r10, r22
    1c24:	b7 1e       	adc	r11, r23
    1c26:	c8 1e       	adc	r12, r24
    1c28:	d9 1e       	adc	r13, r25
    1c2a:	d6 01       	movw	r26, r12
    1c2c:	c5 01       	movw	r24, r10
    1c2e:	82 1b       	sub	r24, r18
    1c30:	93 0b       	sbc	r25, r19
    1c32:	a4 0b       	sbc	r26, r20
    1c34:	b5 0b       	sbc	r27, r21
    1c36:	89 8f       	std	Y+25, r24	; 0x19
    1c38:	9a 8f       	std	Y+26, r25	; 0x1a
    1c3a:	ab 8f       	std	Y+27, r26	; 0x1b
    1c3c:	bc 8f       	std	Y+28, r27	; 0x1c
    1c3e:	d1 01       	movw	r26, r2
    1c40:	99 27       	eor	r25, r25
    1c42:	88 27       	eor	r24, r24
    1c44:	84 01       	movw	r16, r8
    1c46:	73 01       	movw	r14, r6
    1c48:	e8 2a       	or	r14, r24
    1c4a:	f9 2a       	or	r15, r25
    1c4c:	0a 2b       	or	r16, r26
    1c4e:	1b 2b       	or	r17, r27
    1c50:	4f ef       	ldi	r20, 0xFF	; 255
    1c52:	a4 2e       	mov	r10, r20
    1c54:	4f ef       	ldi	r20, 0xFF	; 255
    1c56:	b4 2e       	mov	r11, r20
    1c58:	c1 2c       	mov	r12, r1
    1c5a:	d1 2c       	mov	r13, r1
    1c5c:	ae 20       	and	r10, r14
    1c5e:	bf 20       	and	r11, r15
    1c60:	c0 22       	and	r12, r16
    1c62:	d1 22       	and	r13, r17
    1c64:	78 01       	movw	r14, r16
    1c66:	00 27       	eor	r16, r16
    1c68:	11 27       	eor	r17, r17
    1c6a:	6d a0       	ldd	r6, Y+37	; 0x25
    1c6c:	7e a0       	ldd	r7, Y+38	; 0x26
    1c6e:	8f a0       	ldd	r8, Y+39	; 0x27
    1c70:	98 a4       	ldd	r9, Y+40	; 0x28
    1c72:	4f ef       	ldi	r20, 0xFF	; 255
    1c74:	5f ef       	ldi	r21, 0xFF	; 255
    1c76:	60 e0       	ldi	r22, 0x00	; 0
    1c78:	70 e0       	ldi	r23, 0x00	; 0
    1c7a:	64 22       	and	r6, r20
    1c7c:	75 22       	and	r7, r21
    1c7e:	86 22       	and	r8, r22
    1c80:	97 22       	and	r9, r23
    1c82:	8d a1       	ldd	r24, Y+37	; 0x25
    1c84:	9e a1       	ldd	r25, Y+38	; 0x26
    1c86:	af a1       	ldd	r26, Y+39	; 0x27
    1c88:	b8 a5       	ldd	r27, Y+40	; 0x28
    1c8a:	bd 01       	movw	r22, r26
    1c8c:	88 27       	eor	r24, r24
    1c8e:	99 27       	eor	r25, r25
    1c90:	65 96       	adiw	r28, 0x15	; 21
    1c92:	6c af       	std	Y+60, r22	; 0x3c
    1c94:	7d af       	std	Y+61, r23	; 0x3d
    1c96:	8e af       	std	Y+62, r24	; 0x3e
    1c98:	9f af       	std	Y+63, r25	; 0x3f
    1c9a:	65 97       	sbiw	r28, 0x15	; 21
    1c9c:	c6 01       	movw	r24, r12
    1c9e:	b5 01       	movw	r22, r10
    1ca0:	a4 01       	movw	r20, r8
    1ca2:	93 01       	movw	r18, r6
    1ca4:	0e 94 98 2b 	call	0x5730	; 0x5730 <__mulsi3>
    1ca8:	61 96       	adiw	r28, 0x11	; 17
    1caa:	6c af       	std	Y+60, r22	; 0x3c
    1cac:	7d af       	std	Y+61, r23	; 0x3d
    1cae:	8e af       	std	Y+62, r24	; 0x3e
    1cb0:	9f af       	std	Y+63, r25	; 0x3f
    1cb2:	61 97       	sbiw	r28, 0x11	; 17
    1cb4:	c6 01       	movw	r24, r12
    1cb6:	b5 01       	movw	r22, r10
    1cb8:	65 96       	adiw	r28, 0x15	; 21
    1cba:	2c ad       	ldd	r18, Y+60	; 0x3c
    1cbc:	3d ad       	ldd	r19, Y+61	; 0x3d
    1cbe:	4e ad       	ldd	r20, Y+62	; 0x3e
    1cc0:	5f ad       	ldd	r21, Y+63	; 0x3f
    1cc2:	65 97       	sbiw	r28, 0x15	; 21
    1cc4:	0e 94 98 2b 	call	0x5730	; 0x5730 <__mulsi3>
    1cc8:	1b 01       	movw	r2, r22
    1cca:	2c 01       	movw	r4, r24
    1ccc:	c8 01       	movw	r24, r16
    1cce:	b7 01       	movw	r22, r14
    1cd0:	a4 01       	movw	r20, r8
    1cd2:	93 01       	movw	r18, r6
    1cd4:	0e 94 98 2b 	call	0x5730	; 0x5730 <__mulsi3>
    1cd8:	5b 01       	movw	r10, r22
    1cda:	6c 01       	movw	r12, r24
    1cdc:	c8 01       	movw	r24, r16
    1cde:	b7 01       	movw	r22, r14
    1ce0:	65 96       	adiw	r28, 0x15	; 21
    1ce2:	2c ad       	ldd	r18, Y+60	; 0x3c
    1ce4:	3d ad       	ldd	r19, Y+61	; 0x3d
    1ce6:	4e ad       	ldd	r20, Y+62	; 0x3e
    1ce8:	5f ad       	ldd	r21, Y+63	; 0x3f
    1cea:	65 97       	sbiw	r28, 0x15	; 21
    1cec:	0e 94 98 2b 	call	0x5730	; 0x5730 <__mulsi3>
    1cf0:	7b 01       	movw	r14, r22
    1cf2:	8c 01       	movw	r16, r24
    1cf4:	a6 01       	movw	r20, r12
    1cf6:	95 01       	movw	r18, r10
    1cf8:	22 0d       	add	r18, r2
    1cfa:	33 1d       	adc	r19, r3
    1cfc:	44 1d       	adc	r20, r4
    1cfe:	55 1d       	adc	r21, r5
    1d00:	61 96       	adiw	r28, 0x11	; 17
    1d02:	6c ac       	ldd	r6, Y+60	; 0x3c
    1d04:	7d ac       	ldd	r7, Y+61	; 0x3d
    1d06:	8e ac       	ldd	r8, Y+62	; 0x3e
    1d08:	9f ac       	ldd	r9, Y+63	; 0x3f
    1d0a:	61 97       	sbiw	r28, 0x11	; 17
    1d0c:	c4 01       	movw	r24, r8
    1d0e:	aa 27       	eor	r26, r26
    1d10:	bb 27       	eor	r27, r27
    1d12:	28 0f       	add	r18, r24
    1d14:	39 1f       	adc	r19, r25
    1d16:	4a 1f       	adc	r20, r26
    1d18:	5b 1f       	adc	r21, r27
    1d1a:	2a 15       	cp	r18, r10
    1d1c:	3b 05       	cpc	r19, r11
    1d1e:	4c 05       	cpc	r20, r12
    1d20:	5d 05       	cpc	r21, r13
    1d22:	48 f4       	brcc	.+18     	; 0x1d36 <__umoddi3+0xb70>
    1d24:	81 2c       	mov	r8, r1
    1d26:	91 2c       	mov	r9, r1
    1d28:	e1 e0       	ldi	r30, 0x01	; 1
    1d2a:	ae 2e       	mov	r10, r30
    1d2c:	b1 2c       	mov	r11, r1
    1d2e:	e8 0c       	add	r14, r8
    1d30:	f9 1c       	adc	r15, r9
    1d32:	0a 1d       	adc	r16, r10
    1d34:	1b 1d       	adc	r17, r11
    1d36:	ca 01       	movw	r24, r20
    1d38:	aa 27       	eor	r26, r26
    1d3a:	bb 27       	eor	r27, r27
    1d3c:	57 01       	movw	r10, r14
    1d3e:	68 01       	movw	r12, r16
    1d40:	a8 0e       	add	r10, r24
    1d42:	b9 1e       	adc	r11, r25
    1d44:	ca 1e       	adc	r12, r26
    1d46:	db 1e       	adc	r13, r27
    1d48:	a9 01       	movw	r20, r18
    1d4a:	33 27       	eor	r19, r19
    1d4c:	22 27       	eor	r18, r18
    1d4e:	61 96       	adiw	r28, 0x11	; 17
    1d50:	8c ad       	ldd	r24, Y+60	; 0x3c
    1d52:	9d ad       	ldd	r25, Y+61	; 0x3d
    1d54:	ae ad       	ldd	r26, Y+62	; 0x3e
    1d56:	bf ad       	ldd	r27, Y+63	; 0x3f
    1d58:	61 97       	sbiw	r28, 0x11	; 17
    1d5a:	a0 70       	andi	r26, 0x00	; 0
    1d5c:	b0 70       	andi	r27, 0x00	; 0
    1d5e:	28 0f       	add	r18, r24
    1d60:	39 1f       	adc	r19, r25
    1d62:	4a 1f       	adc	r20, r26
    1d64:	5b 1f       	adc	r21, r27
    1d66:	e9 8c       	ldd	r14, Y+25	; 0x19
    1d68:	fa 8c       	ldd	r15, Y+26	; 0x1a
    1d6a:	0b 8d       	ldd	r16, Y+27	; 0x1b
    1d6c:	1c 8d       	ldd	r17, Y+28	; 0x1c
    1d6e:	ea 14       	cp	r14, r10
    1d70:	fb 04       	cpc	r15, r11
    1d72:	0c 05       	cpc	r16, r12
    1d74:	1d 05       	cpc	r17, r13
    1d76:	70 f0       	brcs	.+28     	; 0x1d94 <__umoddi3+0xbce>
    1d78:	ae 14       	cp	r10, r14
    1d7a:	bf 04       	cpc	r11, r15
    1d7c:	c0 06       	cpc	r12, r16
    1d7e:	d1 06       	cpc	r13, r17
    1d80:	69 f5       	brne	.+90     	; 0x1ddc <__umoddi3+0xc16>
    1d82:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1d84:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1d86:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1d88:	98 a1       	ldd	r25, Y+32	; 0x20
    1d8a:	62 17       	cp	r22, r18
    1d8c:	73 07       	cpc	r23, r19
    1d8e:	84 07       	cpc	r24, r20
    1d90:	95 07       	cpc	r25, r21
    1d92:	20 f5       	brcc	.+72     	; 0x1ddc <__umoddi3+0xc16>
    1d94:	da 01       	movw	r26, r20
    1d96:	c9 01       	movw	r24, r18
    1d98:	6d a0       	ldd	r6, Y+37	; 0x25
    1d9a:	7e a0       	ldd	r7, Y+38	; 0x26
    1d9c:	8f a0       	ldd	r8, Y+39	; 0x27
    1d9e:	98 a4       	ldd	r9, Y+40	; 0x28
    1da0:	86 19       	sub	r24, r6
    1da2:	97 09       	sbc	r25, r7
    1da4:	a8 09       	sbc	r26, r8
    1da6:	b9 09       	sbc	r27, r9
    1da8:	e9 a4       	ldd	r14, Y+41	; 0x29
    1daa:	fa a4       	ldd	r15, Y+42	; 0x2a
    1dac:	0b a5       	ldd	r16, Y+43	; 0x2b
    1dae:	1c a5       	ldd	r17, Y+44	; 0x2c
    1db0:	ae 18       	sub	r10, r14
    1db2:	bf 08       	sbc	r11, r15
    1db4:	c0 0a       	sbc	r12, r16
    1db6:	d1 0a       	sbc	r13, r17
    1db8:	ee 24       	eor	r14, r14
    1dba:	ff 24       	eor	r15, r15
    1dbc:	87 01       	movw	r16, r14
    1dbe:	28 17       	cp	r18, r24
    1dc0:	39 07       	cpc	r19, r25
    1dc2:	4a 07       	cpc	r20, r26
    1dc4:	5b 07       	cpc	r21, r27
    1dc6:	28 f4       	brcc	.+10     	; 0x1dd2 <__umoddi3+0xc0c>
    1dc8:	21 e0       	ldi	r18, 0x01	; 1
    1dca:	e2 2e       	mov	r14, r18
    1dcc:	f1 2c       	mov	r15, r1
    1dce:	01 2d       	mov	r16, r1
    1dd0:	11 2d       	mov	r17, r1
    1dd2:	ae 18       	sub	r10, r14
    1dd4:	bf 08       	sbc	r11, r15
    1dd6:	c0 0a       	sbc	r12, r16
    1dd8:	d1 0a       	sbc	r13, r17
    1dda:	02 c0       	rjmp	.+4      	; 0x1de0 <__umoddi3+0xc1a>
    1ddc:	da 01       	movw	r26, r20
    1dde:	c9 01       	movw	r24, r18
    1de0:	6d 8c       	ldd	r6, Y+29	; 0x1d
    1de2:	7e 8c       	ldd	r7, Y+30	; 0x1e
    1de4:	8f 8c       	ldd	r8, Y+31	; 0x1f
    1de6:	98 a0       	ldd	r9, Y+32	; 0x20
    1de8:	68 1a       	sub	r6, r24
    1dea:	79 0a       	sbc	r7, r25
    1dec:	8a 0a       	sbc	r8, r26
    1dee:	9b 0a       	sbc	r9, r27
    1df0:	49 8d       	ldd	r20, Y+25	; 0x19
    1df2:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1df4:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1df6:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1df8:	4a 19       	sub	r20, r10
    1dfa:	5b 09       	sbc	r21, r11
    1dfc:	6c 09       	sbc	r22, r12
    1dfe:	7d 09       	sbc	r23, r13
    1e00:	5a 01       	movw	r10, r20
    1e02:	6b 01       	movw	r12, r22
    1e04:	22 24       	eor	r2, r2
    1e06:	33 24       	eor	r3, r3
    1e08:	21 01       	movw	r4, r2
    1e0a:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1e0c:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1e0e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1e10:	98 a1       	ldd	r25, Y+32	; 0x20
    1e12:	66 15       	cp	r22, r6
    1e14:	77 05       	cpc	r23, r7
    1e16:	88 05       	cpc	r24, r8
    1e18:	99 05       	cpc	r25, r9
    1e1a:	28 f4       	brcc	.+10     	; 0x1e26 <__umoddi3+0xc60>
    1e1c:	81 e0       	ldi	r24, 0x01	; 1
    1e1e:	28 2e       	mov	r2, r24
    1e20:	31 2c       	mov	r3, r1
    1e22:	41 2c       	mov	r4, r1
    1e24:	51 2c       	mov	r5, r1
    1e26:	86 01       	movw	r16, r12
    1e28:	75 01       	movw	r14, r10
    1e2a:	e2 18       	sub	r14, r2
    1e2c:	f3 08       	sbc	r15, r3
    1e2e:	04 09       	sbc	r16, r4
    1e30:	15 09       	sbc	r17, r5
    1e32:	a8 01       	movw	r20, r16
    1e34:	97 01       	movw	r18, r14
    1e36:	66 96       	adiw	r28, 0x16	; 22
    1e38:	0f ac       	ldd	r0, Y+63	; 0x3f
    1e3a:	66 97       	sbiw	r28, 0x16	; 22
    1e3c:	04 c0       	rjmp	.+8      	; 0x1e46 <__umoddi3+0xc80>
    1e3e:	22 0f       	add	r18, r18
    1e40:	33 1f       	adc	r19, r19
    1e42:	44 1f       	adc	r20, r20
    1e44:	55 1f       	adc	r21, r21
    1e46:	0a 94       	dec	r0
    1e48:	d2 f7       	brpl	.-12     	; 0x1e3e <__umoddi3+0xc78>
    1e4a:	d4 01       	movw	r26, r8
    1e4c:	c3 01       	movw	r24, r6
    1e4e:	67 96       	adiw	r28, 0x17	; 23
    1e50:	0f ac       	ldd	r0, Y+63	; 0x3f
    1e52:	67 97       	sbiw	r28, 0x17	; 23
    1e54:	04 c0       	rjmp	.+8      	; 0x1e5e <__umoddi3+0xc98>
    1e56:	b6 95       	lsr	r27
    1e58:	a7 95       	ror	r26
    1e5a:	97 95       	ror	r25
    1e5c:	87 95       	ror	r24
    1e5e:	0a 94       	dec	r0
    1e60:	d2 f7       	brpl	.-12     	; 0x1e56 <__umoddi3+0xc90>
    1e62:	28 2b       	or	r18, r24
    1e64:	39 2b       	or	r19, r25
    1e66:	4a 2b       	or	r20, r26
    1e68:	5b 2b       	or	r21, r27
    1e6a:	29 8b       	std	Y+17, r18	; 0x11
    1e6c:	3a 8b       	std	Y+18, r19	; 0x12
    1e6e:	4b 8b       	std	Y+19, r20	; 0x13
    1e70:	5c 8b       	std	Y+20, r21	; 0x14
    1e72:	67 96       	adiw	r28, 0x17	; 23
    1e74:	0f ac       	ldd	r0, Y+63	; 0x3f
    1e76:	67 97       	sbiw	r28, 0x17	; 23
    1e78:	04 c0       	rjmp	.+8      	; 0x1e82 <__umoddi3+0xcbc>
    1e7a:	16 95       	lsr	r17
    1e7c:	07 95       	ror	r16
    1e7e:	f7 94       	ror	r15
    1e80:	e7 94       	ror	r14
    1e82:	0a 94       	dec	r0
    1e84:	d2 f7       	brpl	.-12     	; 0x1e7a <__umoddi3+0xcb4>
    1e86:	ed 8a       	std	Y+21, r14	; 0x15
    1e88:	fe 8a       	std	Y+22, r15	; 0x16
    1e8a:	0f 8b       	std	Y+23, r16	; 0x17
    1e8c:	18 8f       	std	Y+24, r17	; 0x18
    1e8e:	3a 89       	ldd	r19, Y+18	; 0x12
    1e90:	4b 89       	ldd	r20, Y+19	; 0x13
    1e92:	5c 89       	ldd	r21, Y+20	; 0x14
    1e94:	6e 2d       	mov	r22, r14
    1e96:	7e 89       	ldd	r23, Y+22	; 0x16
    1e98:	8f 89       	ldd	r24, Y+23	; 0x17
    1e9a:	98 8d       	ldd	r25, Y+24	; 0x18
    1e9c:	c5 5a       	subi	r28, 0xA5	; 165
    1e9e:	df 4f       	sbci	r29, 0xFF	; 255
    1ea0:	e2 e1       	ldi	r30, 0x12	; 18
    1ea2:	0c 94 01 2c 	jmp	0x5802	; 0x5802 <__epilogue_restores__>

00001ea6 <_fpadd_parts>:
    1ea6:	a0 e0       	ldi	r26, 0x00	; 0
    1ea8:	b0 e0       	ldi	r27, 0x00	; 0
    1eaa:	e9 e5       	ldi	r30, 0x59	; 89
    1eac:	ff e0       	ldi	r31, 0x0F	; 15
    1eae:	0c 94 e5 2b 	jmp	0x57ca	; 0x57ca <__prologue_saves__>
    1eb2:	dc 01       	movw	r26, r24
    1eb4:	2b 01       	movw	r4, r22
    1eb6:	fa 01       	movw	r30, r20
    1eb8:	9c 91       	ld	r25, X
    1eba:	92 30       	cpi	r25, 0x02	; 2
    1ebc:	08 f4       	brcc	.+2      	; 0x1ec0 <_fpadd_parts+0x1a>
    1ebe:	39 c1       	rjmp	.+626    	; 0x2132 <_fpadd_parts+0x28c>
    1ec0:	eb 01       	movw	r28, r22
    1ec2:	88 81       	ld	r24, Y
    1ec4:	82 30       	cpi	r24, 0x02	; 2
    1ec6:	08 f4       	brcc	.+2      	; 0x1eca <_fpadd_parts+0x24>
    1ec8:	33 c1       	rjmp	.+614    	; 0x2130 <_fpadd_parts+0x28a>
    1eca:	94 30       	cpi	r25, 0x04	; 4
    1ecc:	69 f4       	brne	.+26     	; 0x1ee8 <_fpadd_parts+0x42>
    1ece:	84 30       	cpi	r24, 0x04	; 4
    1ed0:	09 f0       	breq	.+2      	; 0x1ed4 <_fpadd_parts+0x2e>
    1ed2:	2f c1       	rjmp	.+606    	; 0x2132 <_fpadd_parts+0x28c>
    1ed4:	11 96       	adiw	r26, 0x01	; 1
    1ed6:	9c 91       	ld	r25, X
    1ed8:	11 97       	sbiw	r26, 0x01	; 1
    1eda:	89 81       	ldd	r24, Y+1	; 0x01
    1edc:	98 17       	cp	r25, r24
    1ede:	09 f4       	brne	.+2      	; 0x1ee2 <_fpadd_parts+0x3c>
    1ee0:	28 c1       	rjmp	.+592    	; 0x2132 <_fpadd_parts+0x28c>
    1ee2:	a3 e8       	ldi	r26, 0x83	; 131
    1ee4:	b0 e0       	ldi	r27, 0x00	; 0
    1ee6:	25 c1       	rjmp	.+586    	; 0x2132 <_fpadd_parts+0x28c>
    1ee8:	84 30       	cpi	r24, 0x04	; 4
    1eea:	09 f4       	brne	.+2      	; 0x1eee <_fpadd_parts+0x48>
    1eec:	21 c1       	rjmp	.+578    	; 0x2130 <_fpadd_parts+0x28a>
    1eee:	82 30       	cpi	r24, 0x02	; 2
    1ef0:	a9 f4       	brne	.+42     	; 0x1f1c <_fpadd_parts+0x76>
    1ef2:	92 30       	cpi	r25, 0x02	; 2
    1ef4:	09 f0       	breq	.+2      	; 0x1ef8 <_fpadd_parts+0x52>
    1ef6:	1d c1       	rjmp	.+570    	; 0x2132 <_fpadd_parts+0x28c>
    1ef8:	9a 01       	movw	r18, r20
    1efa:	ad 01       	movw	r20, r26
    1efc:	88 e0       	ldi	r24, 0x08	; 8
    1efe:	ea 01       	movw	r28, r20
    1f00:	09 90       	ld	r0, Y+
    1f02:	ae 01       	movw	r20, r28
    1f04:	e9 01       	movw	r28, r18
    1f06:	09 92       	st	Y+, r0
    1f08:	9e 01       	movw	r18, r28
    1f0a:	81 50       	subi	r24, 0x01	; 1
    1f0c:	c1 f7       	brne	.-16     	; 0x1efe <_fpadd_parts+0x58>
    1f0e:	e2 01       	movw	r28, r4
    1f10:	89 81       	ldd	r24, Y+1	; 0x01
    1f12:	11 96       	adiw	r26, 0x01	; 1
    1f14:	9c 91       	ld	r25, X
    1f16:	89 23       	and	r24, r25
    1f18:	81 83       	std	Z+1, r24	; 0x01
    1f1a:	08 c1       	rjmp	.+528    	; 0x212c <_fpadd_parts+0x286>
    1f1c:	92 30       	cpi	r25, 0x02	; 2
    1f1e:	09 f4       	brne	.+2      	; 0x1f22 <_fpadd_parts+0x7c>
    1f20:	07 c1       	rjmp	.+526    	; 0x2130 <_fpadd_parts+0x28a>
    1f22:	12 96       	adiw	r26, 0x02	; 2
    1f24:	2d 90       	ld	r2, X+
    1f26:	3c 90       	ld	r3, X
    1f28:	13 97       	sbiw	r26, 0x03	; 3
    1f2a:	eb 01       	movw	r28, r22
    1f2c:	8a 81       	ldd	r24, Y+2	; 0x02
    1f2e:	9b 81       	ldd	r25, Y+3	; 0x03
    1f30:	14 96       	adiw	r26, 0x04	; 4
    1f32:	ad 90       	ld	r10, X+
    1f34:	bd 90       	ld	r11, X+
    1f36:	cd 90       	ld	r12, X+
    1f38:	dc 90       	ld	r13, X
    1f3a:	17 97       	sbiw	r26, 0x07	; 7
    1f3c:	ec 80       	ldd	r14, Y+4	; 0x04
    1f3e:	fd 80       	ldd	r15, Y+5	; 0x05
    1f40:	0e 81       	ldd	r16, Y+6	; 0x06
    1f42:	1f 81       	ldd	r17, Y+7	; 0x07
    1f44:	91 01       	movw	r18, r2
    1f46:	28 1b       	sub	r18, r24
    1f48:	39 0b       	sbc	r19, r25
    1f4a:	b9 01       	movw	r22, r18
    1f4c:	37 ff       	sbrs	r19, 7
    1f4e:	04 c0       	rjmp	.+8      	; 0x1f58 <_fpadd_parts+0xb2>
    1f50:	66 27       	eor	r22, r22
    1f52:	77 27       	eor	r23, r23
    1f54:	62 1b       	sub	r22, r18
    1f56:	73 0b       	sbc	r23, r19
    1f58:	60 32       	cpi	r22, 0x20	; 32
    1f5a:	71 05       	cpc	r23, r1
    1f5c:	0c f0       	brlt	.+2      	; 0x1f60 <_fpadd_parts+0xba>
    1f5e:	61 c0       	rjmp	.+194    	; 0x2022 <_fpadd_parts+0x17c>
    1f60:	12 16       	cp	r1, r18
    1f62:	13 06       	cpc	r1, r19
    1f64:	6c f5       	brge	.+90     	; 0x1fc0 <_fpadd_parts+0x11a>
    1f66:	37 01       	movw	r6, r14
    1f68:	48 01       	movw	r8, r16
    1f6a:	06 2e       	mov	r0, r22
    1f6c:	04 c0       	rjmp	.+8      	; 0x1f76 <_fpadd_parts+0xd0>
    1f6e:	96 94       	lsr	r9
    1f70:	87 94       	ror	r8
    1f72:	77 94       	ror	r7
    1f74:	67 94       	ror	r6
    1f76:	0a 94       	dec	r0
    1f78:	d2 f7       	brpl	.-12     	; 0x1f6e <_fpadd_parts+0xc8>
    1f7a:	21 e0       	ldi	r18, 0x01	; 1
    1f7c:	30 e0       	ldi	r19, 0x00	; 0
    1f7e:	40 e0       	ldi	r20, 0x00	; 0
    1f80:	50 e0       	ldi	r21, 0x00	; 0
    1f82:	04 c0       	rjmp	.+8      	; 0x1f8c <_fpadd_parts+0xe6>
    1f84:	22 0f       	add	r18, r18
    1f86:	33 1f       	adc	r19, r19
    1f88:	44 1f       	adc	r20, r20
    1f8a:	55 1f       	adc	r21, r21
    1f8c:	6a 95       	dec	r22
    1f8e:	d2 f7       	brpl	.-12     	; 0x1f84 <_fpadd_parts+0xde>
    1f90:	21 50       	subi	r18, 0x01	; 1
    1f92:	30 40       	sbci	r19, 0x00	; 0
    1f94:	40 40       	sbci	r20, 0x00	; 0
    1f96:	50 40       	sbci	r21, 0x00	; 0
    1f98:	2e 21       	and	r18, r14
    1f9a:	3f 21       	and	r19, r15
    1f9c:	40 23       	and	r20, r16
    1f9e:	51 23       	and	r21, r17
    1fa0:	21 15       	cp	r18, r1
    1fa2:	31 05       	cpc	r19, r1
    1fa4:	41 05       	cpc	r20, r1
    1fa6:	51 05       	cpc	r21, r1
    1fa8:	21 f0       	breq	.+8      	; 0x1fb2 <_fpadd_parts+0x10c>
    1faa:	21 e0       	ldi	r18, 0x01	; 1
    1fac:	30 e0       	ldi	r19, 0x00	; 0
    1fae:	40 e0       	ldi	r20, 0x00	; 0
    1fb0:	50 e0       	ldi	r21, 0x00	; 0
    1fb2:	79 01       	movw	r14, r18
    1fb4:	8a 01       	movw	r16, r20
    1fb6:	e6 28       	or	r14, r6
    1fb8:	f7 28       	or	r15, r7
    1fba:	08 29       	or	r16, r8
    1fbc:	19 29       	or	r17, r9
    1fbe:	3c c0       	rjmp	.+120    	; 0x2038 <_fpadd_parts+0x192>
    1fc0:	23 2b       	or	r18, r19
    1fc2:	d1 f1       	breq	.+116    	; 0x2038 <_fpadd_parts+0x192>
    1fc4:	26 0e       	add	r2, r22
    1fc6:	37 1e       	adc	r3, r23
    1fc8:	35 01       	movw	r6, r10
    1fca:	46 01       	movw	r8, r12
    1fcc:	06 2e       	mov	r0, r22
    1fce:	04 c0       	rjmp	.+8      	; 0x1fd8 <_fpadd_parts+0x132>
    1fd0:	96 94       	lsr	r9
    1fd2:	87 94       	ror	r8
    1fd4:	77 94       	ror	r7
    1fd6:	67 94       	ror	r6
    1fd8:	0a 94       	dec	r0
    1fda:	d2 f7       	brpl	.-12     	; 0x1fd0 <_fpadd_parts+0x12a>
    1fdc:	21 e0       	ldi	r18, 0x01	; 1
    1fde:	30 e0       	ldi	r19, 0x00	; 0
    1fe0:	40 e0       	ldi	r20, 0x00	; 0
    1fe2:	50 e0       	ldi	r21, 0x00	; 0
    1fe4:	04 c0       	rjmp	.+8      	; 0x1fee <_fpadd_parts+0x148>
    1fe6:	22 0f       	add	r18, r18
    1fe8:	33 1f       	adc	r19, r19
    1fea:	44 1f       	adc	r20, r20
    1fec:	55 1f       	adc	r21, r21
    1fee:	6a 95       	dec	r22
    1ff0:	d2 f7       	brpl	.-12     	; 0x1fe6 <_fpadd_parts+0x140>
    1ff2:	21 50       	subi	r18, 0x01	; 1
    1ff4:	30 40       	sbci	r19, 0x00	; 0
    1ff6:	40 40       	sbci	r20, 0x00	; 0
    1ff8:	50 40       	sbci	r21, 0x00	; 0
    1ffa:	2a 21       	and	r18, r10
    1ffc:	3b 21       	and	r19, r11
    1ffe:	4c 21       	and	r20, r12
    2000:	5d 21       	and	r21, r13
    2002:	21 15       	cp	r18, r1
    2004:	31 05       	cpc	r19, r1
    2006:	41 05       	cpc	r20, r1
    2008:	51 05       	cpc	r21, r1
    200a:	21 f0       	breq	.+8      	; 0x2014 <_fpadd_parts+0x16e>
    200c:	21 e0       	ldi	r18, 0x01	; 1
    200e:	30 e0       	ldi	r19, 0x00	; 0
    2010:	40 e0       	ldi	r20, 0x00	; 0
    2012:	50 e0       	ldi	r21, 0x00	; 0
    2014:	59 01       	movw	r10, r18
    2016:	6a 01       	movw	r12, r20
    2018:	a6 28       	or	r10, r6
    201a:	b7 28       	or	r11, r7
    201c:	c8 28       	or	r12, r8
    201e:	d9 28       	or	r13, r9
    2020:	0b c0       	rjmp	.+22     	; 0x2038 <_fpadd_parts+0x192>
    2022:	82 15       	cp	r24, r2
    2024:	93 05       	cpc	r25, r3
    2026:	2c f0       	brlt	.+10     	; 0x2032 <_fpadd_parts+0x18c>
    2028:	1c 01       	movw	r2, r24
    202a:	aa 24       	eor	r10, r10
    202c:	bb 24       	eor	r11, r11
    202e:	65 01       	movw	r12, r10
    2030:	03 c0       	rjmp	.+6      	; 0x2038 <_fpadd_parts+0x192>
    2032:	ee 24       	eor	r14, r14
    2034:	ff 24       	eor	r15, r15
    2036:	87 01       	movw	r16, r14
    2038:	11 96       	adiw	r26, 0x01	; 1
    203a:	9c 91       	ld	r25, X
    203c:	d2 01       	movw	r26, r4
    203e:	11 96       	adiw	r26, 0x01	; 1
    2040:	8c 91       	ld	r24, X
    2042:	98 17       	cp	r25, r24
    2044:	09 f4       	brne	.+2      	; 0x2048 <_fpadd_parts+0x1a2>
    2046:	45 c0       	rjmp	.+138    	; 0x20d2 <_fpadd_parts+0x22c>
    2048:	99 23       	and	r25, r25
    204a:	39 f0       	breq	.+14     	; 0x205a <_fpadd_parts+0x1b4>
    204c:	a8 01       	movw	r20, r16
    204e:	97 01       	movw	r18, r14
    2050:	2a 19       	sub	r18, r10
    2052:	3b 09       	sbc	r19, r11
    2054:	4c 09       	sbc	r20, r12
    2056:	5d 09       	sbc	r21, r13
    2058:	06 c0       	rjmp	.+12     	; 0x2066 <_fpadd_parts+0x1c0>
    205a:	a6 01       	movw	r20, r12
    205c:	95 01       	movw	r18, r10
    205e:	2e 19       	sub	r18, r14
    2060:	3f 09       	sbc	r19, r15
    2062:	40 0b       	sbc	r20, r16
    2064:	51 0b       	sbc	r21, r17
    2066:	57 fd       	sbrc	r21, 7
    2068:	08 c0       	rjmp	.+16     	; 0x207a <_fpadd_parts+0x1d4>
    206a:	11 82       	std	Z+1, r1	; 0x01
    206c:	33 82       	std	Z+3, r3	; 0x03
    206e:	22 82       	std	Z+2, r2	; 0x02
    2070:	24 83       	std	Z+4, r18	; 0x04
    2072:	35 83       	std	Z+5, r19	; 0x05
    2074:	46 83       	std	Z+6, r20	; 0x06
    2076:	57 83       	std	Z+7, r21	; 0x07
    2078:	1d c0       	rjmp	.+58     	; 0x20b4 <_fpadd_parts+0x20e>
    207a:	81 e0       	ldi	r24, 0x01	; 1
    207c:	81 83       	std	Z+1, r24	; 0x01
    207e:	33 82       	std	Z+3, r3	; 0x03
    2080:	22 82       	std	Z+2, r2	; 0x02
    2082:	88 27       	eor	r24, r24
    2084:	99 27       	eor	r25, r25
    2086:	dc 01       	movw	r26, r24
    2088:	82 1b       	sub	r24, r18
    208a:	93 0b       	sbc	r25, r19
    208c:	a4 0b       	sbc	r26, r20
    208e:	b5 0b       	sbc	r27, r21
    2090:	84 83       	std	Z+4, r24	; 0x04
    2092:	95 83       	std	Z+5, r25	; 0x05
    2094:	a6 83       	std	Z+6, r26	; 0x06
    2096:	b7 83       	std	Z+7, r27	; 0x07
    2098:	0d c0       	rjmp	.+26     	; 0x20b4 <_fpadd_parts+0x20e>
    209a:	22 0f       	add	r18, r18
    209c:	33 1f       	adc	r19, r19
    209e:	44 1f       	adc	r20, r20
    20a0:	55 1f       	adc	r21, r21
    20a2:	24 83       	std	Z+4, r18	; 0x04
    20a4:	35 83       	std	Z+5, r19	; 0x05
    20a6:	46 83       	std	Z+6, r20	; 0x06
    20a8:	57 83       	std	Z+7, r21	; 0x07
    20aa:	82 81       	ldd	r24, Z+2	; 0x02
    20ac:	93 81       	ldd	r25, Z+3	; 0x03
    20ae:	01 97       	sbiw	r24, 0x01	; 1
    20b0:	93 83       	std	Z+3, r25	; 0x03
    20b2:	82 83       	std	Z+2, r24	; 0x02
    20b4:	24 81       	ldd	r18, Z+4	; 0x04
    20b6:	35 81       	ldd	r19, Z+5	; 0x05
    20b8:	46 81       	ldd	r20, Z+6	; 0x06
    20ba:	57 81       	ldd	r21, Z+7	; 0x07
    20bc:	da 01       	movw	r26, r20
    20be:	c9 01       	movw	r24, r18
    20c0:	01 97       	sbiw	r24, 0x01	; 1
    20c2:	a1 09       	sbc	r26, r1
    20c4:	b1 09       	sbc	r27, r1
    20c6:	8f 5f       	subi	r24, 0xFF	; 255
    20c8:	9f 4f       	sbci	r25, 0xFF	; 255
    20ca:	af 4f       	sbci	r26, 0xFF	; 255
    20cc:	bf 43       	sbci	r27, 0x3F	; 63
    20ce:	28 f3       	brcs	.-54     	; 0x209a <_fpadd_parts+0x1f4>
    20d0:	0b c0       	rjmp	.+22     	; 0x20e8 <_fpadd_parts+0x242>
    20d2:	91 83       	std	Z+1, r25	; 0x01
    20d4:	33 82       	std	Z+3, r3	; 0x03
    20d6:	22 82       	std	Z+2, r2	; 0x02
    20d8:	ea 0c       	add	r14, r10
    20da:	fb 1c       	adc	r15, r11
    20dc:	0c 1d       	adc	r16, r12
    20de:	1d 1d       	adc	r17, r13
    20e0:	e4 82       	std	Z+4, r14	; 0x04
    20e2:	f5 82       	std	Z+5, r15	; 0x05
    20e4:	06 83       	std	Z+6, r16	; 0x06
    20e6:	17 83       	std	Z+7, r17	; 0x07
    20e8:	83 e0       	ldi	r24, 0x03	; 3
    20ea:	80 83       	st	Z, r24
    20ec:	24 81       	ldd	r18, Z+4	; 0x04
    20ee:	35 81       	ldd	r19, Z+5	; 0x05
    20f0:	46 81       	ldd	r20, Z+6	; 0x06
    20f2:	57 81       	ldd	r21, Z+7	; 0x07
    20f4:	57 ff       	sbrs	r21, 7
    20f6:	1a c0       	rjmp	.+52     	; 0x212c <_fpadd_parts+0x286>
    20f8:	c9 01       	movw	r24, r18
    20fa:	aa 27       	eor	r26, r26
    20fc:	97 fd       	sbrc	r25, 7
    20fe:	a0 95       	com	r26
    2100:	ba 2f       	mov	r27, r26
    2102:	81 70       	andi	r24, 0x01	; 1
    2104:	90 70       	andi	r25, 0x00	; 0
    2106:	a0 70       	andi	r26, 0x00	; 0
    2108:	b0 70       	andi	r27, 0x00	; 0
    210a:	56 95       	lsr	r21
    210c:	47 95       	ror	r20
    210e:	37 95       	ror	r19
    2110:	27 95       	ror	r18
    2112:	82 2b       	or	r24, r18
    2114:	93 2b       	or	r25, r19
    2116:	a4 2b       	or	r26, r20
    2118:	b5 2b       	or	r27, r21
    211a:	84 83       	std	Z+4, r24	; 0x04
    211c:	95 83       	std	Z+5, r25	; 0x05
    211e:	a6 83       	std	Z+6, r26	; 0x06
    2120:	b7 83       	std	Z+7, r27	; 0x07
    2122:	82 81       	ldd	r24, Z+2	; 0x02
    2124:	93 81       	ldd	r25, Z+3	; 0x03
    2126:	01 96       	adiw	r24, 0x01	; 1
    2128:	93 83       	std	Z+3, r25	; 0x03
    212a:	82 83       	std	Z+2, r24	; 0x02
    212c:	df 01       	movw	r26, r30
    212e:	01 c0       	rjmp	.+2      	; 0x2132 <_fpadd_parts+0x28c>
    2130:	d2 01       	movw	r26, r4
    2132:	cd 01       	movw	r24, r26
    2134:	cd b7       	in	r28, 0x3d	; 61
    2136:	de b7       	in	r29, 0x3e	; 62
    2138:	e2 e1       	ldi	r30, 0x12	; 18
    213a:	0c 94 01 2c 	jmp	0x5802	; 0x5802 <__epilogue_restores__>

0000213e <__subsf3>:
    213e:	a0 e2       	ldi	r26, 0x20	; 32
    2140:	b0 e0       	ldi	r27, 0x00	; 0
    2142:	e5 ea       	ldi	r30, 0xA5	; 165
    2144:	f0 e1       	ldi	r31, 0x10	; 16
    2146:	0c 94 f1 2b 	jmp	0x57e2	; 0x57e2 <__prologue_saves__+0x18>
    214a:	69 83       	std	Y+1, r22	; 0x01
    214c:	7a 83       	std	Y+2, r23	; 0x02
    214e:	8b 83       	std	Y+3, r24	; 0x03
    2150:	9c 83       	std	Y+4, r25	; 0x04
    2152:	2d 83       	std	Y+5, r18	; 0x05
    2154:	3e 83       	std	Y+6, r19	; 0x06
    2156:	4f 83       	std	Y+7, r20	; 0x07
    2158:	58 87       	std	Y+8, r21	; 0x08
    215a:	e9 e0       	ldi	r30, 0x09	; 9
    215c:	ee 2e       	mov	r14, r30
    215e:	f1 2c       	mov	r15, r1
    2160:	ec 0e       	add	r14, r28
    2162:	fd 1e       	adc	r15, r29
    2164:	ce 01       	movw	r24, r28
    2166:	01 96       	adiw	r24, 0x01	; 1
    2168:	b7 01       	movw	r22, r14
    216a:	0e 94 b0 13 	call	0x2760	; 0x2760 <__unpack_f>
    216e:	8e 01       	movw	r16, r28
    2170:	0f 5e       	subi	r16, 0xEF	; 239
    2172:	1f 4f       	sbci	r17, 0xFF	; 255
    2174:	ce 01       	movw	r24, r28
    2176:	05 96       	adiw	r24, 0x05	; 5
    2178:	b8 01       	movw	r22, r16
    217a:	0e 94 b0 13 	call	0x2760	; 0x2760 <__unpack_f>
    217e:	8a 89       	ldd	r24, Y+18	; 0x12
    2180:	91 e0       	ldi	r25, 0x01	; 1
    2182:	89 27       	eor	r24, r25
    2184:	8a 8b       	std	Y+18, r24	; 0x12
    2186:	c7 01       	movw	r24, r14
    2188:	b8 01       	movw	r22, r16
    218a:	ae 01       	movw	r20, r28
    218c:	47 5e       	subi	r20, 0xE7	; 231
    218e:	5f 4f       	sbci	r21, 0xFF	; 255
    2190:	0e 94 53 0f 	call	0x1ea6	; 0x1ea6 <_fpadd_parts>
    2194:	0e 94 db 12 	call	0x25b6	; 0x25b6 <__pack_f>
    2198:	a0 96       	adiw	r28, 0x20	; 32
    219a:	e6 e0       	ldi	r30, 0x06	; 6
    219c:	0c 94 0d 2c 	jmp	0x581a	; 0x581a <__epilogue_restores__+0x18>

000021a0 <__addsf3>:
    21a0:	a0 e2       	ldi	r26, 0x20	; 32
    21a2:	b0 e0       	ldi	r27, 0x00	; 0
    21a4:	e6 ed       	ldi	r30, 0xD6	; 214
    21a6:	f0 e1       	ldi	r31, 0x10	; 16
    21a8:	0c 94 f1 2b 	jmp	0x57e2	; 0x57e2 <__prologue_saves__+0x18>
    21ac:	69 83       	std	Y+1, r22	; 0x01
    21ae:	7a 83       	std	Y+2, r23	; 0x02
    21b0:	8b 83       	std	Y+3, r24	; 0x03
    21b2:	9c 83       	std	Y+4, r25	; 0x04
    21b4:	2d 83       	std	Y+5, r18	; 0x05
    21b6:	3e 83       	std	Y+6, r19	; 0x06
    21b8:	4f 83       	std	Y+7, r20	; 0x07
    21ba:	58 87       	std	Y+8, r21	; 0x08
    21bc:	f9 e0       	ldi	r31, 0x09	; 9
    21be:	ef 2e       	mov	r14, r31
    21c0:	f1 2c       	mov	r15, r1
    21c2:	ec 0e       	add	r14, r28
    21c4:	fd 1e       	adc	r15, r29
    21c6:	ce 01       	movw	r24, r28
    21c8:	01 96       	adiw	r24, 0x01	; 1
    21ca:	b7 01       	movw	r22, r14
    21cc:	0e 94 b0 13 	call	0x2760	; 0x2760 <__unpack_f>
    21d0:	8e 01       	movw	r16, r28
    21d2:	0f 5e       	subi	r16, 0xEF	; 239
    21d4:	1f 4f       	sbci	r17, 0xFF	; 255
    21d6:	ce 01       	movw	r24, r28
    21d8:	05 96       	adiw	r24, 0x05	; 5
    21da:	b8 01       	movw	r22, r16
    21dc:	0e 94 b0 13 	call	0x2760	; 0x2760 <__unpack_f>
    21e0:	c7 01       	movw	r24, r14
    21e2:	b8 01       	movw	r22, r16
    21e4:	ae 01       	movw	r20, r28
    21e6:	47 5e       	subi	r20, 0xE7	; 231
    21e8:	5f 4f       	sbci	r21, 0xFF	; 255
    21ea:	0e 94 53 0f 	call	0x1ea6	; 0x1ea6 <_fpadd_parts>
    21ee:	0e 94 db 12 	call	0x25b6	; 0x25b6 <__pack_f>
    21f2:	a0 96       	adiw	r28, 0x20	; 32
    21f4:	e6 e0       	ldi	r30, 0x06	; 6
    21f6:	0c 94 0d 2c 	jmp	0x581a	; 0x581a <__epilogue_restores__+0x18>

000021fa <__mulsf3>:
    21fa:	a0 e2       	ldi	r26, 0x20	; 32
    21fc:	b0 e0       	ldi	r27, 0x00	; 0
    21fe:	e3 e0       	ldi	r30, 0x03	; 3
    2200:	f1 e1       	ldi	r31, 0x11	; 17
    2202:	0c 94 e5 2b 	jmp	0x57ca	; 0x57ca <__prologue_saves__>
    2206:	69 83       	std	Y+1, r22	; 0x01
    2208:	7a 83       	std	Y+2, r23	; 0x02
    220a:	8b 83       	std	Y+3, r24	; 0x03
    220c:	9c 83       	std	Y+4, r25	; 0x04
    220e:	2d 83       	std	Y+5, r18	; 0x05
    2210:	3e 83       	std	Y+6, r19	; 0x06
    2212:	4f 83       	std	Y+7, r20	; 0x07
    2214:	58 87       	std	Y+8, r21	; 0x08
    2216:	ce 01       	movw	r24, r28
    2218:	01 96       	adiw	r24, 0x01	; 1
    221a:	be 01       	movw	r22, r28
    221c:	67 5f       	subi	r22, 0xF7	; 247
    221e:	7f 4f       	sbci	r23, 0xFF	; 255
    2220:	0e 94 b0 13 	call	0x2760	; 0x2760 <__unpack_f>
    2224:	ce 01       	movw	r24, r28
    2226:	05 96       	adiw	r24, 0x05	; 5
    2228:	be 01       	movw	r22, r28
    222a:	6f 5e       	subi	r22, 0xEF	; 239
    222c:	7f 4f       	sbci	r23, 0xFF	; 255
    222e:	0e 94 b0 13 	call	0x2760	; 0x2760 <__unpack_f>
    2232:	99 85       	ldd	r25, Y+9	; 0x09
    2234:	92 30       	cpi	r25, 0x02	; 2
    2236:	88 f0       	brcs	.+34     	; 0x225a <__mulsf3+0x60>
    2238:	89 89       	ldd	r24, Y+17	; 0x11
    223a:	82 30       	cpi	r24, 0x02	; 2
    223c:	c8 f0       	brcs	.+50     	; 0x2270 <__mulsf3+0x76>
    223e:	94 30       	cpi	r25, 0x04	; 4
    2240:	19 f4       	brne	.+6      	; 0x2248 <__mulsf3+0x4e>
    2242:	82 30       	cpi	r24, 0x02	; 2
    2244:	51 f4       	brne	.+20     	; 0x225a <__mulsf3+0x60>
    2246:	04 c0       	rjmp	.+8      	; 0x2250 <__mulsf3+0x56>
    2248:	84 30       	cpi	r24, 0x04	; 4
    224a:	29 f4       	brne	.+10     	; 0x2256 <__mulsf3+0x5c>
    224c:	92 30       	cpi	r25, 0x02	; 2
    224e:	81 f4       	brne	.+32     	; 0x2270 <__mulsf3+0x76>
    2250:	83 e8       	ldi	r24, 0x83	; 131
    2252:	90 e0       	ldi	r25, 0x00	; 0
    2254:	c6 c0       	rjmp	.+396    	; 0x23e2 <__mulsf3+0x1e8>
    2256:	92 30       	cpi	r25, 0x02	; 2
    2258:	49 f4       	brne	.+18     	; 0x226c <__mulsf3+0x72>
    225a:	20 e0       	ldi	r18, 0x00	; 0
    225c:	9a 85       	ldd	r25, Y+10	; 0x0a
    225e:	8a 89       	ldd	r24, Y+18	; 0x12
    2260:	98 13       	cpse	r25, r24
    2262:	21 e0       	ldi	r18, 0x01	; 1
    2264:	2a 87       	std	Y+10, r18	; 0x0a
    2266:	ce 01       	movw	r24, r28
    2268:	09 96       	adiw	r24, 0x09	; 9
    226a:	bb c0       	rjmp	.+374    	; 0x23e2 <__mulsf3+0x1e8>
    226c:	82 30       	cpi	r24, 0x02	; 2
    226e:	49 f4       	brne	.+18     	; 0x2282 <__mulsf3+0x88>
    2270:	20 e0       	ldi	r18, 0x00	; 0
    2272:	9a 85       	ldd	r25, Y+10	; 0x0a
    2274:	8a 89       	ldd	r24, Y+18	; 0x12
    2276:	98 13       	cpse	r25, r24
    2278:	21 e0       	ldi	r18, 0x01	; 1
    227a:	2a 8b       	std	Y+18, r18	; 0x12
    227c:	ce 01       	movw	r24, r28
    227e:	41 96       	adiw	r24, 0x11	; 17
    2280:	b0 c0       	rjmp	.+352    	; 0x23e2 <__mulsf3+0x1e8>
    2282:	2d 84       	ldd	r2, Y+13	; 0x0d
    2284:	3e 84       	ldd	r3, Y+14	; 0x0e
    2286:	4f 84       	ldd	r4, Y+15	; 0x0f
    2288:	58 88       	ldd	r5, Y+16	; 0x10
    228a:	6d 88       	ldd	r6, Y+21	; 0x15
    228c:	7e 88       	ldd	r7, Y+22	; 0x16
    228e:	8f 88       	ldd	r8, Y+23	; 0x17
    2290:	98 8c       	ldd	r9, Y+24	; 0x18
    2292:	ee 24       	eor	r14, r14
    2294:	ff 24       	eor	r15, r15
    2296:	87 01       	movw	r16, r14
    2298:	aa 24       	eor	r10, r10
    229a:	bb 24       	eor	r11, r11
    229c:	65 01       	movw	r12, r10
    229e:	40 e0       	ldi	r20, 0x00	; 0
    22a0:	50 e0       	ldi	r21, 0x00	; 0
    22a2:	60 e0       	ldi	r22, 0x00	; 0
    22a4:	70 e0       	ldi	r23, 0x00	; 0
    22a6:	e0 e0       	ldi	r30, 0x00	; 0
    22a8:	f0 e0       	ldi	r31, 0x00	; 0
    22aa:	c1 01       	movw	r24, r2
    22ac:	81 70       	andi	r24, 0x01	; 1
    22ae:	90 70       	andi	r25, 0x00	; 0
    22b0:	89 2b       	or	r24, r25
    22b2:	e9 f0       	breq	.+58     	; 0x22ee <__mulsf3+0xf4>
    22b4:	e6 0c       	add	r14, r6
    22b6:	f7 1c       	adc	r15, r7
    22b8:	08 1d       	adc	r16, r8
    22ba:	19 1d       	adc	r17, r9
    22bc:	9a 01       	movw	r18, r20
    22be:	ab 01       	movw	r20, r22
    22c0:	2a 0d       	add	r18, r10
    22c2:	3b 1d       	adc	r19, r11
    22c4:	4c 1d       	adc	r20, r12
    22c6:	5d 1d       	adc	r21, r13
    22c8:	80 e0       	ldi	r24, 0x00	; 0
    22ca:	90 e0       	ldi	r25, 0x00	; 0
    22cc:	a0 e0       	ldi	r26, 0x00	; 0
    22ce:	b0 e0       	ldi	r27, 0x00	; 0
    22d0:	e6 14       	cp	r14, r6
    22d2:	f7 04       	cpc	r15, r7
    22d4:	08 05       	cpc	r16, r8
    22d6:	19 05       	cpc	r17, r9
    22d8:	20 f4       	brcc	.+8      	; 0x22e2 <__mulsf3+0xe8>
    22da:	81 e0       	ldi	r24, 0x01	; 1
    22dc:	90 e0       	ldi	r25, 0x00	; 0
    22de:	a0 e0       	ldi	r26, 0x00	; 0
    22e0:	b0 e0       	ldi	r27, 0x00	; 0
    22e2:	ba 01       	movw	r22, r20
    22e4:	a9 01       	movw	r20, r18
    22e6:	48 0f       	add	r20, r24
    22e8:	59 1f       	adc	r21, r25
    22ea:	6a 1f       	adc	r22, r26
    22ec:	7b 1f       	adc	r23, r27
    22ee:	aa 0c       	add	r10, r10
    22f0:	bb 1c       	adc	r11, r11
    22f2:	cc 1c       	adc	r12, r12
    22f4:	dd 1c       	adc	r13, r13
    22f6:	97 fe       	sbrs	r9, 7
    22f8:	08 c0       	rjmp	.+16     	; 0x230a <__mulsf3+0x110>
    22fa:	81 e0       	ldi	r24, 0x01	; 1
    22fc:	90 e0       	ldi	r25, 0x00	; 0
    22fe:	a0 e0       	ldi	r26, 0x00	; 0
    2300:	b0 e0       	ldi	r27, 0x00	; 0
    2302:	a8 2a       	or	r10, r24
    2304:	b9 2a       	or	r11, r25
    2306:	ca 2a       	or	r12, r26
    2308:	db 2a       	or	r13, r27
    230a:	31 96       	adiw	r30, 0x01	; 1
    230c:	e0 32       	cpi	r30, 0x20	; 32
    230e:	f1 05       	cpc	r31, r1
    2310:	49 f0       	breq	.+18     	; 0x2324 <__mulsf3+0x12a>
    2312:	66 0c       	add	r6, r6
    2314:	77 1c       	adc	r7, r7
    2316:	88 1c       	adc	r8, r8
    2318:	99 1c       	adc	r9, r9
    231a:	56 94       	lsr	r5
    231c:	47 94       	ror	r4
    231e:	37 94       	ror	r3
    2320:	27 94       	ror	r2
    2322:	c3 cf       	rjmp	.-122    	; 0x22aa <__mulsf3+0xb0>
    2324:	fa 85       	ldd	r31, Y+10	; 0x0a
    2326:	ea 89       	ldd	r30, Y+18	; 0x12
    2328:	2b 89       	ldd	r18, Y+19	; 0x13
    232a:	3c 89       	ldd	r19, Y+20	; 0x14
    232c:	8b 85       	ldd	r24, Y+11	; 0x0b
    232e:	9c 85       	ldd	r25, Y+12	; 0x0c
    2330:	28 0f       	add	r18, r24
    2332:	39 1f       	adc	r19, r25
    2334:	2e 5f       	subi	r18, 0xFE	; 254
    2336:	3f 4f       	sbci	r19, 0xFF	; 255
    2338:	17 c0       	rjmp	.+46     	; 0x2368 <__mulsf3+0x16e>
    233a:	ca 01       	movw	r24, r20
    233c:	81 70       	andi	r24, 0x01	; 1
    233e:	90 70       	andi	r25, 0x00	; 0
    2340:	89 2b       	or	r24, r25
    2342:	61 f0       	breq	.+24     	; 0x235c <__mulsf3+0x162>
    2344:	16 95       	lsr	r17
    2346:	07 95       	ror	r16
    2348:	f7 94       	ror	r15
    234a:	e7 94       	ror	r14
    234c:	80 e0       	ldi	r24, 0x00	; 0
    234e:	90 e0       	ldi	r25, 0x00	; 0
    2350:	a0 e0       	ldi	r26, 0x00	; 0
    2352:	b0 e8       	ldi	r27, 0x80	; 128
    2354:	e8 2a       	or	r14, r24
    2356:	f9 2a       	or	r15, r25
    2358:	0a 2b       	or	r16, r26
    235a:	1b 2b       	or	r17, r27
    235c:	76 95       	lsr	r23
    235e:	67 95       	ror	r22
    2360:	57 95       	ror	r21
    2362:	47 95       	ror	r20
    2364:	2f 5f       	subi	r18, 0xFF	; 255
    2366:	3f 4f       	sbci	r19, 0xFF	; 255
    2368:	77 fd       	sbrc	r23, 7
    236a:	e7 cf       	rjmp	.-50     	; 0x233a <__mulsf3+0x140>
    236c:	0c c0       	rjmp	.+24     	; 0x2386 <__mulsf3+0x18c>
    236e:	44 0f       	add	r20, r20
    2370:	55 1f       	adc	r21, r21
    2372:	66 1f       	adc	r22, r22
    2374:	77 1f       	adc	r23, r23
    2376:	17 fd       	sbrc	r17, 7
    2378:	41 60       	ori	r20, 0x01	; 1
    237a:	ee 0c       	add	r14, r14
    237c:	ff 1c       	adc	r15, r15
    237e:	00 1f       	adc	r16, r16
    2380:	11 1f       	adc	r17, r17
    2382:	21 50       	subi	r18, 0x01	; 1
    2384:	30 40       	sbci	r19, 0x00	; 0
    2386:	40 30       	cpi	r20, 0x00	; 0
    2388:	90 e0       	ldi	r25, 0x00	; 0
    238a:	59 07       	cpc	r21, r25
    238c:	90 e0       	ldi	r25, 0x00	; 0
    238e:	69 07       	cpc	r22, r25
    2390:	90 e4       	ldi	r25, 0x40	; 64
    2392:	79 07       	cpc	r23, r25
    2394:	60 f3       	brcs	.-40     	; 0x236e <__mulsf3+0x174>
    2396:	2b 8f       	std	Y+27, r18	; 0x1b
    2398:	3c 8f       	std	Y+28, r19	; 0x1c
    239a:	db 01       	movw	r26, r22
    239c:	ca 01       	movw	r24, r20
    239e:	8f 77       	andi	r24, 0x7F	; 127
    23a0:	90 70       	andi	r25, 0x00	; 0
    23a2:	a0 70       	andi	r26, 0x00	; 0
    23a4:	b0 70       	andi	r27, 0x00	; 0
    23a6:	80 34       	cpi	r24, 0x40	; 64
    23a8:	91 05       	cpc	r25, r1
    23aa:	a1 05       	cpc	r26, r1
    23ac:	b1 05       	cpc	r27, r1
    23ae:	61 f4       	brne	.+24     	; 0x23c8 <__mulsf3+0x1ce>
    23b0:	47 fd       	sbrc	r20, 7
    23b2:	0a c0       	rjmp	.+20     	; 0x23c8 <__mulsf3+0x1ce>
    23b4:	e1 14       	cp	r14, r1
    23b6:	f1 04       	cpc	r15, r1
    23b8:	01 05       	cpc	r16, r1
    23ba:	11 05       	cpc	r17, r1
    23bc:	29 f0       	breq	.+10     	; 0x23c8 <__mulsf3+0x1ce>
    23be:	40 5c       	subi	r20, 0xC0	; 192
    23c0:	5f 4f       	sbci	r21, 0xFF	; 255
    23c2:	6f 4f       	sbci	r22, 0xFF	; 255
    23c4:	7f 4f       	sbci	r23, 0xFF	; 255
    23c6:	40 78       	andi	r20, 0x80	; 128
    23c8:	1a 8e       	std	Y+26, r1	; 0x1a
    23ca:	fe 17       	cp	r31, r30
    23cc:	11 f0       	breq	.+4      	; 0x23d2 <__mulsf3+0x1d8>
    23ce:	81 e0       	ldi	r24, 0x01	; 1
    23d0:	8a 8f       	std	Y+26, r24	; 0x1a
    23d2:	4d 8f       	std	Y+29, r20	; 0x1d
    23d4:	5e 8f       	std	Y+30, r21	; 0x1e
    23d6:	6f 8f       	std	Y+31, r22	; 0x1f
    23d8:	78 a3       	std	Y+32, r23	; 0x20
    23da:	83 e0       	ldi	r24, 0x03	; 3
    23dc:	89 8f       	std	Y+25, r24	; 0x19
    23de:	ce 01       	movw	r24, r28
    23e0:	49 96       	adiw	r24, 0x19	; 25
    23e2:	0e 94 db 12 	call	0x25b6	; 0x25b6 <__pack_f>
    23e6:	a0 96       	adiw	r28, 0x20	; 32
    23e8:	e2 e1       	ldi	r30, 0x12	; 18
    23ea:	0c 94 01 2c 	jmp	0x5802	; 0x5802 <__epilogue_restores__>

000023ee <__gtsf2>:
    23ee:	a8 e1       	ldi	r26, 0x18	; 24
    23f0:	b0 e0       	ldi	r27, 0x00	; 0
    23f2:	ed ef       	ldi	r30, 0xFD	; 253
    23f4:	f1 e1       	ldi	r31, 0x11	; 17
    23f6:	0c 94 f1 2b 	jmp	0x57e2	; 0x57e2 <__prologue_saves__+0x18>
    23fa:	69 83       	std	Y+1, r22	; 0x01
    23fc:	7a 83       	std	Y+2, r23	; 0x02
    23fe:	8b 83       	std	Y+3, r24	; 0x03
    2400:	9c 83       	std	Y+4, r25	; 0x04
    2402:	2d 83       	std	Y+5, r18	; 0x05
    2404:	3e 83       	std	Y+6, r19	; 0x06
    2406:	4f 83       	std	Y+7, r20	; 0x07
    2408:	58 87       	std	Y+8, r21	; 0x08
    240a:	89 e0       	ldi	r24, 0x09	; 9
    240c:	e8 2e       	mov	r14, r24
    240e:	f1 2c       	mov	r15, r1
    2410:	ec 0e       	add	r14, r28
    2412:	fd 1e       	adc	r15, r29
    2414:	ce 01       	movw	r24, r28
    2416:	01 96       	adiw	r24, 0x01	; 1
    2418:	b7 01       	movw	r22, r14
    241a:	0e 94 b0 13 	call	0x2760	; 0x2760 <__unpack_f>
    241e:	8e 01       	movw	r16, r28
    2420:	0f 5e       	subi	r16, 0xEF	; 239
    2422:	1f 4f       	sbci	r17, 0xFF	; 255
    2424:	ce 01       	movw	r24, r28
    2426:	05 96       	adiw	r24, 0x05	; 5
    2428:	b8 01       	movw	r22, r16
    242a:	0e 94 b0 13 	call	0x2760	; 0x2760 <__unpack_f>
    242e:	89 85       	ldd	r24, Y+9	; 0x09
    2430:	82 30       	cpi	r24, 0x02	; 2
    2432:	40 f0       	brcs	.+16     	; 0x2444 <__gtsf2+0x56>
    2434:	89 89       	ldd	r24, Y+17	; 0x11
    2436:	82 30       	cpi	r24, 0x02	; 2
    2438:	28 f0       	brcs	.+10     	; 0x2444 <__gtsf2+0x56>
    243a:	c7 01       	movw	r24, r14
    243c:	b8 01       	movw	r22, r16
    243e:	0e 94 28 14 	call	0x2850	; 0x2850 <__fpcmp_parts_f>
    2442:	01 c0       	rjmp	.+2      	; 0x2446 <__gtsf2+0x58>
    2444:	8f ef       	ldi	r24, 0xFF	; 255
    2446:	68 96       	adiw	r28, 0x18	; 24
    2448:	e6 e0       	ldi	r30, 0x06	; 6
    244a:	0c 94 0d 2c 	jmp	0x581a	; 0x581a <__epilogue_restores__+0x18>

0000244e <__gesf2>:
    244e:	a8 e1       	ldi	r26, 0x18	; 24
    2450:	b0 e0       	ldi	r27, 0x00	; 0
    2452:	ed e2       	ldi	r30, 0x2D	; 45
    2454:	f2 e1       	ldi	r31, 0x12	; 18
    2456:	0c 94 f1 2b 	jmp	0x57e2	; 0x57e2 <__prologue_saves__+0x18>
    245a:	69 83       	std	Y+1, r22	; 0x01
    245c:	7a 83       	std	Y+2, r23	; 0x02
    245e:	8b 83       	std	Y+3, r24	; 0x03
    2460:	9c 83       	std	Y+4, r25	; 0x04
    2462:	2d 83       	std	Y+5, r18	; 0x05
    2464:	3e 83       	std	Y+6, r19	; 0x06
    2466:	4f 83       	std	Y+7, r20	; 0x07
    2468:	58 87       	std	Y+8, r21	; 0x08
    246a:	89 e0       	ldi	r24, 0x09	; 9
    246c:	e8 2e       	mov	r14, r24
    246e:	f1 2c       	mov	r15, r1
    2470:	ec 0e       	add	r14, r28
    2472:	fd 1e       	adc	r15, r29
    2474:	ce 01       	movw	r24, r28
    2476:	01 96       	adiw	r24, 0x01	; 1
    2478:	b7 01       	movw	r22, r14
    247a:	0e 94 b0 13 	call	0x2760	; 0x2760 <__unpack_f>
    247e:	8e 01       	movw	r16, r28
    2480:	0f 5e       	subi	r16, 0xEF	; 239
    2482:	1f 4f       	sbci	r17, 0xFF	; 255
    2484:	ce 01       	movw	r24, r28
    2486:	05 96       	adiw	r24, 0x05	; 5
    2488:	b8 01       	movw	r22, r16
    248a:	0e 94 b0 13 	call	0x2760	; 0x2760 <__unpack_f>
    248e:	89 85       	ldd	r24, Y+9	; 0x09
    2490:	82 30       	cpi	r24, 0x02	; 2
    2492:	40 f0       	brcs	.+16     	; 0x24a4 <__gesf2+0x56>
    2494:	89 89       	ldd	r24, Y+17	; 0x11
    2496:	82 30       	cpi	r24, 0x02	; 2
    2498:	28 f0       	brcs	.+10     	; 0x24a4 <__gesf2+0x56>
    249a:	c7 01       	movw	r24, r14
    249c:	b8 01       	movw	r22, r16
    249e:	0e 94 28 14 	call	0x2850	; 0x2850 <__fpcmp_parts_f>
    24a2:	01 c0       	rjmp	.+2      	; 0x24a6 <__gesf2+0x58>
    24a4:	8f ef       	ldi	r24, 0xFF	; 255
    24a6:	68 96       	adiw	r28, 0x18	; 24
    24a8:	e6 e0       	ldi	r30, 0x06	; 6
    24aa:	0c 94 0d 2c 	jmp	0x581a	; 0x581a <__epilogue_restores__+0x18>

000024ae <__ltsf2>:
    24ae:	a8 e1       	ldi	r26, 0x18	; 24
    24b0:	b0 e0       	ldi	r27, 0x00	; 0
    24b2:	ed e5       	ldi	r30, 0x5D	; 93
    24b4:	f2 e1       	ldi	r31, 0x12	; 18
    24b6:	0c 94 f1 2b 	jmp	0x57e2	; 0x57e2 <__prologue_saves__+0x18>
    24ba:	69 83       	std	Y+1, r22	; 0x01
    24bc:	7a 83       	std	Y+2, r23	; 0x02
    24be:	8b 83       	std	Y+3, r24	; 0x03
    24c0:	9c 83       	std	Y+4, r25	; 0x04
    24c2:	2d 83       	std	Y+5, r18	; 0x05
    24c4:	3e 83       	std	Y+6, r19	; 0x06
    24c6:	4f 83       	std	Y+7, r20	; 0x07
    24c8:	58 87       	std	Y+8, r21	; 0x08
    24ca:	89 e0       	ldi	r24, 0x09	; 9
    24cc:	e8 2e       	mov	r14, r24
    24ce:	f1 2c       	mov	r15, r1
    24d0:	ec 0e       	add	r14, r28
    24d2:	fd 1e       	adc	r15, r29
    24d4:	ce 01       	movw	r24, r28
    24d6:	01 96       	adiw	r24, 0x01	; 1
    24d8:	b7 01       	movw	r22, r14
    24da:	0e 94 b0 13 	call	0x2760	; 0x2760 <__unpack_f>
    24de:	8e 01       	movw	r16, r28
    24e0:	0f 5e       	subi	r16, 0xEF	; 239
    24e2:	1f 4f       	sbci	r17, 0xFF	; 255
    24e4:	ce 01       	movw	r24, r28
    24e6:	05 96       	adiw	r24, 0x05	; 5
    24e8:	b8 01       	movw	r22, r16
    24ea:	0e 94 b0 13 	call	0x2760	; 0x2760 <__unpack_f>
    24ee:	89 85       	ldd	r24, Y+9	; 0x09
    24f0:	82 30       	cpi	r24, 0x02	; 2
    24f2:	40 f0       	brcs	.+16     	; 0x2504 <__ltsf2+0x56>
    24f4:	89 89       	ldd	r24, Y+17	; 0x11
    24f6:	82 30       	cpi	r24, 0x02	; 2
    24f8:	28 f0       	brcs	.+10     	; 0x2504 <__ltsf2+0x56>
    24fa:	c7 01       	movw	r24, r14
    24fc:	b8 01       	movw	r22, r16
    24fe:	0e 94 28 14 	call	0x2850	; 0x2850 <__fpcmp_parts_f>
    2502:	01 c0       	rjmp	.+2      	; 0x2506 <__ltsf2+0x58>
    2504:	81 e0       	ldi	r24, 0x01	; 1
    2506:	68 96       	adiw	r28, 0x18	; 24
    2508:	e6 e0       	ldi	r30, 0x06	; 6
    250a:	0c 94 0d 2c 	jmp	0x581a	; 0x581a <__epilogue_restores__+0x18>

0000250e <__fixsfsi>:
    250e:	ac e0       	ldi	r26, 0x0C	; 12
    2510:	b0 e0       	ldi	r27, 0x00	; 0
    2512:	ed e8       	ldi	r30, 0x8D	; 141
    2514:	f2 e1       	ldi	r31, 0x12	; 18
    2516:	0c 94 f5 2b 	jmp	0x57ea	; 0x57ea <__prologue_saves__+0x20>
    251a:	69 83       	std	Y+1, r22	; 0x01
    251c:	7a 83       	std	Y+2, r23	; 0x02
    251e:	8b 83       	std	Y+3, r24	; 0x03
    2520:	9c 83       	std	Y+4, r25	; 0x04
    2522:	ce 01       	movw	r24, r28
    2524:	01 96       	adiw	r24, 0x01	; 1
    2526:	be 01       	movw	r22, r28
    2528:	6b 5f       	subi	r22, 0xFB	; 251
    252a:	7f 4f       	sbci	r23, 0xFF	; 255
    252c:	0e 94 b0 13 	call	0x2760	; 0x2760 <__unpack_f>
    2530:	8d 81       	ldd	r24, Y+5	; 0x05
    2532:	82 30       	cpi	r24, 0x02	; 2
    2534:	61 f1       	breq	.+88     	; 0x258e <__fixsfsi+0x80>
    2536:	82 30       	cpi	r24, 0x02	; 2
    2538:	50 f1       	brcs	.+84     	; 0x258e <__fixsfsi+0x80>
    253a:	84 30       	cpi	r24, 0x04	; 4
    253c:	21 f4       	brne	.+8      	; 0x2546 <__fixsfsi+0x38>
    253e:	8e 81       	ldd	r24, Y+6	; 0x06
    2540:	88 23       	and	r24, r24
    2542:	51 f1       	breq	.+84     	; 0x2598 <__fixsfsi+0x8a>
    2544:	2e c0       	rjmp	.+92     	; 0x25a2 <__fixsfsi+0x94>
    2546:	2f 81       	ldd	r18, Y+7	; 0x07
    2548:	38 85       	ldd	r19, Y+8	; 0x08
    254a:	37 fd       	sbrc	r19, 7
    254c:	20 c0       	rjmp	.+64     	; 0x258e <__fixsfsi+0x80>
    254e:	6e 81       	ldd	r22, Y+6	; 0x06
    2550:	2f 31       	cpi	r18, 0x1F	; 31
    2552:	31 05       	cpc	r19, r1
    2554:	1c f0       	brlt	.+6      	; 0x255c <__fixsfsi+0x4e>
    2556:	66 23       	and	r22, r22
    2558:	f9 f0       	breq	.+62     	; 0x2598 <__fixsfsi+0x8a>
    255a:	23 c0       	rjmp	.+70     	; 0x25a2 <__fixsfsi+0x94>
    255c:	8e e1       	ldi	r24, 0x1E	; 30
    255e:	90 e0       	ldi	r25, 0x00	; 0
    2560:	82 1b       	sub	r24, r18
    2562:	93 0b       	sbc	r25, r19
    2564:	29 85       	ldd	r18, Y+9	; 0x09
    2566:	3a 85       	ldd	r19, Y+10	; 0x0a
    2568:	4b 85       	ldd	r20, Y+11	; 0x0b
    256a:	5c 85       	ldd	r21, Y+12	; 0x0c
    256c:	04 c0       	rjmp	.+8      	; 0x2576 <__fixsfsi+0x68>
    256e:	56 95       	lsr	r21
    2570:	47 95       	ror	r20
    2572:	37 95       	ror	r19
    2574:	27 95       	ror	r18
    2576:	8a 95       	dec	r24
    2578:	d2 f7       	brpl	.-12     	; 0x256e <__fixsfsi+0x60>
    257a:	66 23       	and	r22, r22
    257c:	b1 f0       	breq	.+44     	; 0x25aa <__fixsfsi+0x9c>
    257e:	50 95       	com	r21
    2580:	40 95       	com	r20
    2582:	30 95       	com	r19
    2584:	21 95       	neg	r18
    2586:	3f 4f       	sbci	r19, 0xFF	; 255
    2588:	4f 4f       	sbci	r20, 0xFF	; 255
    258a:	5f 4f       	sbci	r21, 0xFF	; 255
    258c:	0e c0       	rjmp	.+28     	; 0x25aa <__fixsfsi+0x9c>
    258e:	20 e0       	ldi	r18, 0x00	; 0
    2590:	30 e0       	ldi	r19, 0x00	; 0
    2592:	40 e0       	ldi	r20, 0x00	; 0
    2594:	50 e0       	ldi	r21, 0x00	; 0
    2596:	09 c0       	rjmp	.+18     	; 0x25aa <__fixsfsi+0x9c>
    2598:	2f ef       	ldi	r18, 0xFF	; 255
    259a:	3f ef       	ldi	r19, 0xFF	; 255
    259c:	4f ef       	ldi	r20, 0xFF	; 255
    259e:	5f e7       	ldi	r21, 0x7F	; 127
    25a0:	04 c0       	rjmp	.+8      	; 0x25aa <__fixsfsi+0x9c>
    25a2:	20 e0       	ldi	r18, 0x00	; 0
    25a4:	30 e0       	ldi	r19, 0x00	; 0
    25a6:	40 e0       	ldi	r20, 0x00	; 0
    25a8:	50 e8       	ldi	r21, 0x80	; 128
    25aa:	b9 01       	movw	r22, r18
    25ac:	ca 01       	movw	r24, r20
    25ae:	2c 96       	adiw	r28, 0x0c	; 12
    25b0:	e2 e0       	ldi	r30, 0x02	; 2
    25b2:	0c 94 11 2c 	jmp	0x5822	; 0x5822 <__epilogue_restores__+0x20>

000025b6 <__pack_f>:
    25b6:	df 92       	push	r13
    25b8:	ef 92       	push	r14
    25ba:	ff 92       	push	r15
    25bc:	0f 93       	push	r16
    25be:	1f 93       	push	r17
    25c0:	fc 01       	movw	r30, r24
    25c2:	e4 80       	ldd	r14, Z+4	; 0x04
    25c4:	f5 80       	ldd	r15, Z+5	; 0x05
    25c6:	06 81       	ldd	r16, Z+6	; 0x06
    25c8:	17 81       	ldd	r17, Z+7	; 0x07
    25ca:	d1 80       	ldd	r13, Z+1	; 0x01
    25cc:	80 81       	ld	r24, Z
    25ce:	82 30       	cpi	r24, 0x02	; 2
    25d0:	48 f4       	brcc	.+18     	; 0x25e4 <__pack_f+0x2e>
    25d2:	80 e0       	ldi	r24, 0x00	; 0
    25d4:	90 e0       	ldi	r25, 0x00	; 0
    25d6:	a0 e1       	ldi	r26, 0x10	; 16
    25d8:	b0 e0       	ldi	r27, 0x00	; 0
    25da:	e8 2a       	or	r14, r24
    25dc:	f9 2a       	or	r15, r25
    25de:	0a 2b       	or	r16, r26
    25e0:	1b 2b       	or	r17, r27
    25e2:	a5 c0       	rjmp	.+330    	; 0x272e <__pack_f+0x178>
    25e4:	84 30       	cpi	r24, 0x04	; 4
    25e6:	09 f4       	brne	.+2      	; 0x25ea <__pack_f+0x34>
    25e8:	9f c0       	rjmp	.+318    	; 0x2728 <__pack_f+0x172>
    25ea:	82 30       	cpi	r24, 0x02	; 2
    25ec:	21 f4       	brne	.+8      	; 0x25f6 <__pack_f+0x40>
    25ee:	ee 24       	eor	r14, r14
    25f0:	ff 24       	eor	r15, r15
    25f2:	87 01       	movw	r16, r14
    25f4:	05 c0       	rjmp	.+10     	; 0x2600 <__pack_f+0x4a>
    25f6:	e1 14       	cp	r14, r1
    25f8:	f1 04       	cpc	r15, r1
    25fa:	01 05       	cpc	r16, r1
    25fc:	11 05       	cpc	r17, r1
    25fe:	19 f4       	brne	.+6      	; 0x2606 <__pack_f+0x50>
    2600:	e0 e0       	ldi	r30, 0x00	; 0
    2602:	f0 e0       	ldi	r31, 0x00	; 0
    2604:	96 c0       	rjmp	.+300    	; 0x2732 <__pack_f+0x17c>
    2606:	62 81       	ldd	r22, Z+2	; 0x02
    2608:	73 81       	ldd	r23, Z+3	; 0x03
    260a:	9f ef       	ldi	r25, 0xFF	; 255
    260c:	62 38       	cpi	r22, 0x82	; 130
    260e:	79 07       	cpc	r23, r25
    2610:	0c f0       	brlt	.+2      	; 0x2614 <__pack_f+0x5e>
    2612:	5b c0       	rjmp	.+182    	; 0x26ca <__pack_f+0x114>
    2614:	22 e8       	ldi	r18, 0x82	; 130
    2616:	3f ef       	ldi	r19, 0xFF	; 255
    2618:	26 1b       	sub	r18, r22
    261a:	37 0b       	sbc	r19, r23
    261c:	2a 31       	cpi	r18, 0x1A	; 26
    261e:	31 05       	cpc	r19, r1
    2620:	2c f0       	brlt	.+10     	; 0x262c <__pack_f+0x76>
    2622:	20 e0       	ldi	r18, 0x00	; 0
    2624:	30 e0       	ldi	r19, 0x00	; 0
    2626:	40 e0       	ldi	r20, 0x00	; 0
    2628:	50 e0       	ldi	r21, 0x00	; 0
    262a:	2a c0       	rjmp	.+84     	; 0x2680 <__pack_f+0xca>
    262c:	b8 01       	movw	r22, r16
    262e:	a7 01       	movw	r20, r14
    2630:	02 2e       	mov	r0, r18
    2632:	04 c0       	rjmp	.+8      	; 0x263c <__pack_f+0x86>
    2634:	76 95       	lsr	r23
    2636:	67 95       	ror	r22
    2638:	57 95       	ror	r21
    263a:	47 95       	ror	r20
    263c:	0a 94       	dec	r0
    263e:	d2 f7       	brpl	.-12     	; 0x2634 <__pack_f+0x7e>
    2640:	81 e0       	ldi	r24, 0x01	; 1
    2642:	90 e0       	ldi	r25, 0x00	; 0
    2644:	a0 e0       	ldi	r26, 0x00	; 0
    2646:	b0 e0       	ldi	r27, 0x00	; 0
    2648:	04 c0       	rjmp	.+8      	; 0x2652 <__pack_f+0x9c>
    264a:	88 0f       	add	r24, r24
    264c:	99 1f       	adc	r25, r25
    264e:	aa 1f       	adc	r26, r26
    2650:	bb 1f       	adc	r27, r27
    2652:	2a 95       	dec	r18
    2654:	d2 f7       	brpl	.-12     	; 0x264a <__pack_f+0x94>
    2656:	01 97       	sbiw	r24, 0x01	; 1
    2658:	a1 09       	sbc	r26, r1
    265a:	b1 09       	sbc	r27, r1
    265c:	8e 21       	and	r24, r14
    265e:	9f 21       	and	r25, r15
    2660:	a0 23       	and	r26, r16
    2662:	b1 23       	and	r27, r17
    2664:	00 97       	sbiw	r24, 0x00	; 0
    2666:	a1 05       	cpc	r26, r1
    2668:	b1 05       	cpc	r27, r1
    266a:	21 f0       	breq	.+8      	; 0x2674 <__pack_f+0xbe>
    266c:	81 e0       	ldi	r24, 0x01	; 1
    266e:	90 e0       	ldi	r25, 0x00	; 0
    2670:	a0 e0       	ldi	r26, 0x00	; 0
    2672:	b0 e0       	ldi	r27, 0x00	; 0
    2674:	9a 01       	movw	r18, r20
    2676:	ab 01       	movw	r20, r22
    2678:	28 2b       	or	r18, r24
    267a:	39 2b       	or	r19, r25
    267c:	4a 2b       	or	r20, r26
    267e:	5b 2b       	or	r21, r27
    2680:	da 01       	movw	r26, r20
    2682:	c9 01       	movw	r24, r18
    2684:	8f 77       	andi	r24, 0x7F	; 127
    2686:	90 70       	andi	r25, 0x00	; 0
    2688:	a0 70       	andi	r26, 0x00	; 0
    268a:	b0 70       	andi	r27, 0x00	; 0
    268c:	80 34       	cpi	r24, 0x40	; 64
    268e:	91 05       	cpc	r25, r1
    2690:	a1 05       	cpc	r26, r1
    2692:	b1 05       	cpc	r27, r1
    2694:	39 f4       	brne	.+14     	; 0x26a4 <__pack_f+0xee>
    2696:	27 ff       	sbrs	r18, 7
    2698:	09 c0       	rjmp	.+18     	; 0x26ac <__pack_f+0xf6>
    269a:	20 5c       	subi	r18, 0xC0	; 192
    269c:	3f 4f       	sbci	r19, 0xFF	; 255
    269e:	4f 4f       	sbci	r20, 0xFF	; 255
    26a0:	5f 4f       	sbci	r21, 0xFF	; 255
    26a2:	04 c0       	rjmp	.+8      	; 0x26ac <__pack_f+0xf6>
    26a4:	21 5c       	subi	r18, 0xC1	; 193
    26a6:	3f 4f       	sbci	r19, 0xFF	; 255
    26a8:	4f 4f       	sbci	r20, 0xFF	; 255
    26aa:	5f 4f       	sbci	r21, 0xFF	; 255
    26ac:	e0 e0       	ldi	r30, 0x00	; 0
    26ae:	f0 e0       	ldi	r31, 0x00	; 0
    26b0:	20 30       	cpi	r18, 0x00	; 0
    26b2:	a0 e0       	ldi	r26, 0x00	; 0
    26b4:	3a 07       	cpc	r19, r26
    26b6:	a0 e0       	ldi	r26, 0x00	; 0
    26b8:	4a 07       	cpc	r20, r26
    26ba:	a0 e4       	ldi	r26, 0x40	; 64
    26bc:	5a 07       	cpc	r21, r26
    26be:	10 f0       	brcs	.+4      	; 0x26c4 <__pack_f+0x10e>
    26c0:	e1 e0       	ldi	r30, 0x01	; 1
    26c2:	f0 e0       	ldi	r31, 0x00	; 0
    26c4:	79 01       	movw	r14, r18
    26c6:	8a 01       	movw	r16, r20
    26c8:	27 c0       	rjmp	.+78     	; 0x2718 <__pack_f+0x162>
    26ca:	60 38       	cpi	r22, 0x80	; 128
    26cc:	71 05       	cpc	r23, r1
    26ce:	64 f5       	brge	.+88     	; 0x2728 <__pack_f+0x172>
    26d0:	fb 01       	movw	r30, r22
    26d2:	e1 58       	subi	r30, 0x81	; 129
    26d4:	ff 4f       	sbci	r31, 0xFF	; 255
    26d6:	d8 01       	movw	r26, r16
    26d8:	c7 01       	movw	r24, r14
    26da:	8f 77       	andi	r24, 0x7F	; 127
    26dc:	90 70       	andi	r25, 0x00	; 0
    26de:	a0 70       	andi	r26, 0x00	; 0
    26e0:	b0 70       	andi	r27, 0x00	; 0
    26e2:	80 34       	cpi	r24, 0x40	; 64
    26e4:	91 05       	cpc	r25, r1
    26e6:	a1 05       	cpc	r26, r1
    26e8:	b1 05       	cpc	r27, r1
    26ea:	39 f4       	brne	.+14     	; 0x26fa <__pack_f+0x144>
    26ec:	e7 fe       	sbrs	r14, 7
    26ee:	0d c0       	rjmp	.+26     	; 0x270a <__pack_f+0x154>
    26f0:	80 e4       	ldi	r24, 0x40	; 64
    26f2:	90 e0       	ldi	r25, 0x00	; 0
    26f4:	a0 e0       	ldi	r26, 0x00	; 0
    26f6:	b0 e0       	ldi	r27, 0x00	; 0
    26f8:	04 c0       	rjmp	.+8      	; 0x2702 <__pack_f+0x14c>
    26fa:	8f e3       	ldi	r24, 0x3F	; 63
    26fc:	90 e0       	ldi	r25, 0x00	; 0
    26fe:	a0 e0       	ldi	r26, 0x00	; 0
    2700:	b0 e0       	ldi	r27, 0x00	; 0
    2702:	e8 0e       	add	r14, r24
    2704:	f9 1e       	adc	r15, r25
    2706:	0a 1f       	adc	r16, r26
    2708:	1b 1f       	adc	r17, r27
    270a:	17 ff       	sbrs	r17, 7
    270c:	05 c0       	rjmp	.+10     	; 0x2718 <__pack_f+0x162>
    270e:	16 95       	lsr	r17
    2710:	07 95       	ror	r16
    2712:	f7 94       	ror	r15
    2714:	e7 94       	ror	r14
    2716:	31 96       	adiw	r30, 0x01	; 1
    2718:	87 e0       	ldi	r24, 0x07	; 7
    271a:	16 95       	lsr	r17
    271c:	07 95       	ror	r16
    271e:	f7 94       	ror	r15
    2720:	e7 94       	ror	r14
    2722:	8a 95       	dec	r24
    2724:	d1 f7       	brne	.-12     	; 0x271a <__pack_f+0x164>
    2726:	05 c0       	rjmp	.+10     	; 0x2732 <__pack_f+0x17c>
    2728:	ee 24       	eor	r14, r14
    272a:	ff 24       	eor	r15, r15
    272c:	87 01       	movw	r16, r14
    272e:	ef ef       	ldi	r30, 0xFF	; 255
    2730:	f0 e0       	ldi	r31, 0x00	; 0
    2732:	6e 2f       	mov	r22, r30
    2734:	67 95       	ror	r22
    2736:	66 27       	eor	r22, r22
    2738:	67 95       	ror	r22
    273a:	90 2f       	mov	r25, r16
    273c:	9f 77       	andi	r25, 0x7F	; 127
    273e:	d7 94       	ror	r13
    2740:	dd 24       	eor	r13, r13
    2742:	d7 94       	ror	r13
    2744:	8e 2f       	mov	r24, r30
    2746:	86 95       	lsr	r24
    2748:	49 2f       	mov	r20, r25
    274a:	46 2b       	or	r20, r22
    274c:	58 2f       	mov	r21, r24
    274e:	5d 29       	or	r21, r13
    2750:	b7 01       	movw	r22, r14
    2752:	ca 01       	movw	r24, r20
    2754:	1f 91       	pop	r17
    2756:	0f 91       	pop	r16
    2758:	ff 90       	pop	r15
    275a:	ef 90       	pop	r14
    275c:	df 90       	pop	r13
    275e:	08 95       	ret

00002760 <__unpack_f>:
    2760:	fc 01       	movw	r30, r24
    2762:	db 01       	movw	r26, r22
    2764:	40 81       	ld	r20, Z
    2766:	51 81       	ldd	r21, Z+1	; 0x01
    2768:	22 81       	ldd	r18, Z+2	; 0x02
    276a:	62 2f       	mov	r22, r18
    276c:	6f 77       	andi	r22, 0x7F	; 127
    276e:	70 e0       	ldi	r23, 0x00	; 0
    2770:	22 1f       	adc	r18, r18
    2772:	22 27       	eor	r18, r18
    2774:	22 1f       	adc	r18, r18
    2776:	93 81       	ldd	r25, Z+3	; 0x03
    2778:	89 2f       	mov	r24, r25
    277a:	88 0f       	add	r24, r24
    277c:	82 2b       	or	r24, r18
    277e:	28 2f       	mov	r18, r24
    2780:	30 e0       	ldi	r19, 0x00	; 0
    2782:	99 1f       	adc	r25, r25
    2784:	99 27       	eor	r25, r25
    2786:	99 1f       	adc	r25, r25
    2788:	11 96       	adiw	r26, 0x01	; 1
    278a:	9c 93       	st	X, r25
    278c:	11 97       	sbiw	r26, 0x01	; 1
    278e:	21 15       	cp	r18, r1
    2790:	31 05       	cpc	r19, r1
    2792:	a9 f5       	brne	.+106    	; 0x27fe <__unpack_f+0x9e>
    2794:	41 15       	cp	r20, r1
    2796:	51 05       	cpc	r21, r1
    2798:	61 05       	cpc	r22, r1
    279a:	71 05       	cpc	r23, r1
    279c:	11 f4       	brne	.+4      	; 0x27a2 <__unpack_f+0x42>
    279e:	82 e0       	ldi	r24, 0x02	; 2
    27a0:	37 c0       	rjmp	.+110    	; 0x2810 <__unpack_f+0xb0>
    27a2:	82 e8       	ldi	r24, 0x82	; 130
    27a4:	9f ef       	ldi	r25, 0xFF	; 255
    27a6:	13 96       	adiw	r26, 0x03	; 3
    27a8:	9c 93       	st	X, r25
    27aa:	8e 93       	st	-X, r24
    27ac:	12 97       	sbiw	r26, 0x02	; 2
    27ae:	9a 01       	movw	r18, r20
    27b0:	ab 01       	movw	r20, r22
    27b2:	67 e0       	ldi	r22, 0x07	; 7
    27b4:	22 0f       	add	r18, r18
    27b6:	33 1f       	adc	r19, r19
    27b8:	44 1f       	adc	r20, r20
    27ba:	55 1f       	adc	r21, r21
    27bc:	6a 95       	dec	r22
    27be:	d1 f7       	brne	.-12     	; 0x27b4 <__unpack_f+0x54>
    27c0:	83 e0       	ldi	r24, 0x03	; 3
    27c2:	8c 93       	st	X, r24
    27c4:	0d c0       	rjmp	.+26     	; 0x27e0 <__unpack_f+0x80>
    27c6:	22 0f       	add	r18, r18
    27c8:	33 1f       	adc	r19, r19
    27ca:	44 1f       	adc	r20, r20
    27cc:	55 1f       	adc	r21, r21
    27ce:	12 96       	adiw	r26, 0x02	; 2
    27d0:	8d 91       	ld	r24, X+
    27d2:	9c 91       	ld	r25, X
    27d4:	13 97       	sbiw	r26, 0x03	; 3
    27d6:	01 97       	sbiw	r24, 0x01	; 1
    27d8:	13 96       	adiw	r26, 0x03	; 3
    27da:	9c 93       	st	X, r25
    27dc:	8e 93       	st	-X, r24
    27de:	12 97       	sbiw	r26, 0x02	; 2
    27e0:	20 30       	cpi	r18, 0x00	; 0
    27e2:	80 e0       	ldi	r24, 0x00	; 0
    27e4:	38 07       	cpc	r19, r24
    27e6:	80 e0       	ldi	r24, 0x00	; 0
    27e8:	48 07       	cpc	r20, r24
    27ea:	80 e4       	ldi	r24, 0x40	; 64
    27ec:	58 07       	cpc	r21, r24
    27ee:	58 f3       	brcs	.-42     	; 0x27c6 <__unpack_f+0x66>
    27f0:	14 96       	adiw	r26, 0x04	; 4
    27f2:	2d 93       	st	X+, r18
    27f4:	3d 93       	st	X+, r19
    27f6:	4d 93       	st	X+, r20
    27f8:	5c 93       	st	X, r21
    27fa:	17 97       	sbiw	r26, 0x07	; 7
    27fc:	08 95       	ret
    27fe:	2f 3f       	cpi	r18, 0xFF	; 255
    2800:	31 05       	cpc	r19, r1
    2802:	79 f4       	brne	.+30     	; 0x2822 <__unpack_f+0xc2>
    2804:	41 15       	cp	r20, r1
    2806:	51 05       	cpc	r21, r1
    2808:	61 05       	cpc	r22, r1
    280a:	71 05       	cpc	r23, r1
    280c:	19 f4       	brne	.+6      	; 0x2814 <__unpack_f+0xb4>
    280e:	84 e0       	ldi	r24, 0x04	; 4
    2810:	8c 93       	st	X, r24
    2812:	08 95       	ret
    2814:	64 ff       	sbrs	r22, 4
    2816:	03 c0       	rjmp	.+6      	; 0x281e <__unpack_f+0xbe>
    2818:	81 e0       	ldi	r24, 0x01	; 1
    281a:	8c 93       	st	X, r24
    281c:	12 c0       	rjmp	.+36     	; 0x2842 <__unpack_f+0xe2>
    281e:	1c 92       	st	X, r1
    2820:	10 c0       	rjmp	.+32     	; 0x2842 <__unpack_f+0xe2>
    2822:	2f 57       	subi	r18, 0x7F	; 127
    2824:	30 40       	sbci	r19, 0x00	; 0
    2826:	13 96       	adiw	r26, 0x03	; 3
    2828:	3c 93       	st	X, r19
    282a:	2e 93       	st	-X, r18
    282c:	12 97       	sbiw	r26, 0x02	; 2
    282e:	83 e0       	ldi	r24, 0x03	; 3
    2830:	8c 93       	st	X, r24
    2832:	87 e0       	ldi	r24, 0x07	; 7
    2834:	44 0f       	add	r20, r20
    2836:	55 1f       	adc	r21, r21
    2838:	66 1f       	adc	r22, r22
    283a:	77 1f       	adc	r23, r23
    283c:	8a 95       	dec	r24
    283e:	d1 f7       	brne	.-12     	; 0x2834 <__unpack_f+0xd4>
    2840:	70 64       	ori	r23, 0x40	; 64
    2842:	14 96       	adiw	r26, 0x04	; 4
    2844:	4d 93       	st	X+, r20
    2846:	5d 93       	st	X+, r21
    2848:	6d 93       	st	X+, r22
    284a:	7c 93       	st	X, r23
    284c:	17 97       	sbiw	r26, 0x07	; 7
    284e:	08 95       	ret

00002850 <__fpcmp_parts_f>:
    2850:	1f 93       	push	r17
    2852:	dc 01       	movw	r26, r24
    2854:	fb 01       	movw	r30, r22
    2856:	9c 91       	ld	r25, X
    2858:	92 30       	cpi	r25, 0x02	; 2
    285a:	08 f4       	brcc	.+2      	; 0x285e <__fpcmp_parts_f+0xe>
    285c:	47 c0       	rjmp	.+142    	; 0x28ec <__fpcmp_parts_f+0x9c>
    285e:	80 81       	ld	r24, Z
    2860:	82 30       	cpi	r24, 0x02	; 2
    2862:	08 f4       	brcc	.+2      	; 0x2866 <__fpcmp_parts_f+0x16>
    2864:	43 c0       	rjmp	.+134    	; 0x28ec <__fpcmp_parts_f+0x9c>
    2866:	94 30       	cpi	r25, 0x04	; 4
    2868:	51 f4       	brne	.+20     	; 0x287e <__fpcmp_parts_f+0x2e>
    286a:	11 96       	adiw	r26, 0x01	; 1
    286c:	1c 91       	ld	r17, X
    286e:	84 30       	cpi	r24, 0x04	; 4
    2870:	99 f5       	brne	.+102    	; 0x28d8 <__fpcmp_parts_f+0x88>
    2872:	81 81       	ldd	r24, Z+1	; 0x01
    2874:	68 2f       	mov	r22, r24
    2876:	70 e0       	ldi	r23, 0x00	; 0
    2878:	61 1b       	sub	r22, r17
    287a:	71 09       	sbc	r23, r1
    287c:	3f c0       	rjmp	.+126    	; 0x28fc <__fpcmp_parts_f+0xac>
    287e:	84 30       	cpi	r24, 0x04	; 4
    2880:	21 f0       	breq	.+8      	; 0x288a <__fpcmp_parts_f+0x3a>
    2882:	92 30       	cpi	r25, 0x02	; 2
    2884:	31 f4       	brne	.+12     	; 0x2892 <__fpcmp_parts_f+0x42>
    2886:	82 30       	cpi	r24, 0x02	; 2
    2888:	b9 f1       	breq	.+110    	; 0x28f8 <__fpcmp_parts_f+0xa8>
    288a:	81 81       	ldd	r24, Z+1	; 0x01
    288c:	88 23       	and	r24, r24
    288e:	89 f1       	breq	.+98     	; 0x28f2 <__fpcmp_parts_f+0xa2>
    2890:	2d c0       	rjmp	.+90     	; 0x28ec <__fpcmp_parts_f+0x9c>
    2892:	11 96       	adiw	r26, 0x01	; 1
    2894:	1c 91       	ld	r17, X
    2896:	11 97       	sbiw	r26, 0x01	; 1
    2898:	82 30       	cpi	r24, 0x02	; 2
    289a:	f1 f0       	breq	.+60     	; 0x28d8 <__fpcmp_parts_f+0x88>
    289c:	81 81       	ldd	r24, Z+1	; 0x01
    289e:	18 17       	cp	r17, r24
    28a0:	d9 f4       	brne	.+54     	; 0x28d8 <__fpcmp_parts_f+0x88>
    28a2:	12 96       	adiw	r26, 0x02	; 2
    28a4:	2d 91       	ld	r18, X+
    28a6:	3c 91       	ld	r19, X
    28a8:	13 97       	sbiw	r26, 0x03	; 3
    28aa:	82 81       	ldd	r24, Z+2	; 0x02
    28ac:	93 81       	ldd	r25, Z+3	; 0x03
    28ae:	82 17       	cp	r24, r18
    28b0:	93 07       	cpc	r25, r19
    28b2:	94 f0       	brlt	.+36     	; 0x28d8 <__fpcmp_parts_f+0x88>
    28b4:	28 17       	cp	r18, r24
    28b6:	39 07       	cpc	r19, r25
    28b8:	bc f0       	brlt	.+46     	; 0x28e8 <__fpcmp_parts_f+0x98>
    28ba:	14 96       	adiw	r26, 0x04	; 4
    28bc:	8d 91       	ld	r24, X+
    28be:	9d 91       	ld	r25, X+
    28c0:	0d 90       	ld	r0, X+
    28c2:	bc 91       	ld	r27, X
    28c4:	a0 2d       	mov	r26, r0
    28c6:	24 81       	ldd	r18, Z+4	; 0x04
    28c8:	35 81       	ldd	r19, Z+5	; 0x05
    28ca:	46 81       	ldd	r20, Z+6	; 0x06
    28cc:	57 81       	ldd	r21, Z+7	; 0x07
    28ce:	28 17       	cp	r18, r24
    28d0:	39 07       	cpc	r19, r25
    28d2:	4a 07       	cpc	r20, r26
    28d4:	5b 07       	cpc	r21, r27
    28d6:	18 f4       	brcc	.+6      	; 0x28de <__fpcmp_parts_f+0x8e>
    28d8:	11 23       	and	r17, r17
    28da:	41 f0       	breq	.+16     	; 0x28ec <__fpcmp_parts_f+0x9c>
    28dc:	0a c0       	rjmp	.+20     	; 0x28f2 <__fpcmp_parts_f+0xa2>
    28de:	82 17       	cp	r24, r18
    28e0:	93 07       	cpc	r25, r19
    28e2:	a4 07       	cpc	r26, r20
    28e4:	b5 07       	cpc	r27, r21
    28e6:	40 f4       	brcc	.+16     	; 0x28f8 <__fpcmp_parts_f+0xa8>
    28e8:	11 23       	and	r17, r17
    28ea:	19 f0       	breq	.+6      	; 0x28f2 <__fpcmp_parts_f+0xa2>
    28ec:	61 e0       	ldi	r22, 0x01	; 1
    28ee:	70 e0       	ldi	r23, 0x00	; 0
    28f0:	05 c0       	rjmp	.+10     	; 0x28fc <__fpcmp_parts_f+0xac>
    28f2:	6f ef       	ldi	r22, 0xFF	; 255
    28f4:	7f ef       	ldi	r23, 0xFF	; 255
    28f6:	02 c0       	rjmp	.+4      	; 0x28fc <__fpcmp_parts_f+0xac>
    28f8:	60 e0       	ldi	r22, 0x00	; 0
    28fa:	70 e0       	ldi	r23, 0x00	; 0
    28fc:	cb 01       	movw	r24, r22
    28fe:	1f 91       	pop	r17
    2900:	08 95       	ret

00002902 <TIMER1_init>:
 *                                                          - Null Pointer Error.
 *                                                          - Operation Mode Error.
 *                                                          - Compare Output Mode Error.
 ====================================================================================================================*/
TIMER1_errorStatus TIMER1_init(TIMER1_configurations* a_ptr2configurations)
{
    2902:	df 93       	push	r29
    2904:	cf 93       	push	r28
    2906:	cd b7       	in	r28, 0x3d	; 61
    2908:	de b7       	in	r29, 0x3e	; 62
    290a:	67 97       	sbiw	r28, 0x17	; 23
    290c:	0f b6       	in	r0, 0x3f	; 63
    290e:	f8 94       	cli
    2910:	de bf       	out	0x3e, r29	; 62
    2912:	0f be       	out	0x3f, r0	; 63
    2914:	cd bf       	out	0x3d, r28	; 61
    2916:	9d 83       	std	Y+5, r25	; 0x05
    2918:	8c 83       	std	Y+4, r24	; 0x04
    TIMER1_errorStatus LOC_errorStatus = TIMER1_NO_ERRORS;
    291a:	1b 82       	std	Y+3, r1	; 0x03

    if(a_ptr2configurations == NULL_PTR)
    291c:	8c 81       	ldd	r24, Y+4	; 0x04
    291e:	9d 81       	ldd	r25, Y+5	; 0x05
    2920:	00 97       	sbiw	r24, 0x00	; 0
    2922:	19 f4       	brne	.+6      	; 0x292a <TIMER1_init+0x28>
    {
        LOC_errorStatus = TIMER1_NULL_PTR_ERROR;
    2924:	81 e0       	ldi	r24, 0x01	; 1
    2926:	8b 83       	std	Y+3, r24	; 0x03
    2928:	53 c1       	rjmp	.+678    	; 0x2bd0 <TIMER1_init+0x2ce>
    }

    else if((a_ptr2configurations->timer_mode != TIMER1_OVERFLOW_MODE) && \
    292a:	ec 81       	ldd	r30, Y+4	; 0x04
    292c:	fd 81       	ldd	r31, Y+5	; 0x05
    292e:	84 81       	ldd	r24, Z+4	; 0x04
    2930:	88 23       	and	r24, r24
    2932:	91 f0       	breq	.+36     	; 0x2958 <TIMER1_init+0x56>
    2934:	ec 81       	ldd	r30, Y+4	; 0x04
    2936:	fd 81       	ldd	r31, Y+5	; 0x05
    2938:	84 81       	ldd	r24, Z+4	; 0x04
    293a:	84 30       	cpi	r24, 0x04	; 4
    293c:	69 f0       	breq	.+26     	; 0x2958 <TIMER1_init+0x56>
    293e:	ec 81       	ldd	r30, Y+4	; 0x04
    2940:	fd 81       	ldd	r31, Y+5	; 0x05
    2942:	84 81       	ldd	r24, Z+4	; 0x04
    2944:	8b 30       	cpi	r24, 0x0B	; 11
    2946:	41 f0       	breq	.+16     	; 0x2958 <TIMER1_init+0x56>
    2948:	ec 81       	ldd	r30, Y+4	; 0x04
    294a:	fd 81       	ldd	r31, Y+5	; 0x05
    294c:	84 81       	ldd	r24, Z+4	; 0x04
    294e:	8f 30       	cpi	r24, 0x0F	; 15
    2950:	19 f0       	breq	.+6      	; 0x2958 <TIMER1_init+0x56>
            (a_ptr2configurations->timer_mode != TIMER1_COMPARE_MATCH_MODE) &&
            (a_ptr2configurations->timer_mode != TIMER1_PHASE_CORRECT_PWM_MODE) && \
            (a_ptr2configurations->timer_mode != TIMER1_FAST_PWM_MODE))
    {
        LOC_errorStatus = TIMER1_OPERATION_MODE_ERROR;
    2952:	83 e0       	ldi	r24, 0x03	; 3
    2954:	8b 83       	std	Y+3, r24	; 0x03
    2956:	3c c1       	rjmp	.+632    	; 0x2bd0 <TIMER1_init+0x2ce>
    }

    else if(a_ptr2configurations->prescaler_id > TIMER1_PRESCALER_1024)
    2958:	ec 81       	ldd	r30, Y+4	; 0x04
    295a:	fd 81       	ldd	r31, Y+5	; 0x05
    295c:	85 81       	ldd	r24, Z+5	; 0x05
    295e:	86 30       	cpi	r24, 0x06	; 6
    2960:	18 f0       	brcs	.+6      	; 0x2968 <TIMER1_init+0x66>
    {
        LOC_errorStatus = TIMER1_PRESCALER_ERROR;
    2962:	82 e0       	ldi	r24, 0x02	; 2
    2964:	8b 83       	std	Y+3, r24	; 0x03
    2966:	34 c1       	rjmp	.+616    	; 0x2bd0 <TIMER1_init+0x2ce>
    }

    else if((a_ptr2configurations->channel_a_output_mode > TIMER1_PHASE_CORRECT_PWM_SET_OC1) || \
    2968:	ec 81       	ldd	r30, Y+4	; 0x04
    296a:	fd 81       	ldd	r31, Y+5	; 0x05
    296c:	86 81       	ldd	r24, Z+6	; 0x06
    296e:	8c 30       	cpi	r24, 0x0C	; 12
    2970:	28 f4       	brcc	.+10     	; 0x297c <TIMER1_init+0x7a>
    2972:	ec 81       	ldd	r30, Y+4	; 0x04
    2974:	fd 81       	ldd	r31, Y+5	; 0x05
    2976:	87 81       	ldd	r24, Z+7	; 0x07
    2978:	8c 30       	cpi	r24, 0x0C	; 12
    297a:	18 f0       	brcs	.+6      	; 0x2982 <TIMER1_init+0x80>
            (a_ptr2configurations->channel_b_output_mode > TIMER1_PHASE_CORRECT_PWM_SET_OC1))
    {
        LOC_errorStatus = TIMER1_COMPARE_OUTPUT_MODE_ERROR;
    297c:	84 e0       	ldi	r24, 0x04	; 4
    297e:	8b 83       	std	Y+3, r24	; 0x03
    2980:	27 c1       	rjmp	.+590    	; 0x2bd0 <TIMER1_init+0x2ce>
    }

    else
    {
        uint16 LOC_prescalerValue = TIMER1_getPrescalerValue(a_ptr2configurations->prescaler_id);
    2982:	ec 81       	ldd	r30, Y+4	; 0x04
    2984:	fd 81       	ldd	r31, Y+5	; 0x05
    2986:	85 81       	ldd	r24, Z+5	; 0x05
    2988:	0e 94 f2 15 	call	0x2be4	; 0x2be4 <TIMER1_getPrescalerValue>
    298c:	9a 83       	std	Y+2, r25	; 0x02
    298e:	89 83       	std	Y+1, r24	; 0x01
        TIMER1_ticksCalculator(a_ptr2configurations->time_in_millis,LOC_prescalerValue,a_ptr2configurations->timer_mode);
    2990:	ec 81       	ldd	r30, Y+4	; 0x04
    2992:	fd 81       	ldd	r31, Y+5	; 0x05
    2994:	80 81       	ld	r24, Z
    2996:	91 81       	ldd	r25, Z+1	; 0x01
    2998:	a2 81       	ldd	r26, Z+2	; 0x02
    299a:	b3 81       	ldd	r27, Z+3	; 0x03
    299c:	ec 81       	ldd	r30, Y+4	; 0x04
    299e:	fd 81       	ldd	r31, Y+5	; 0x05
    29a0:	e4 81       	ldd	r30, Z+4	; 0x04
    29a2:	29 81       	ldd	r18, Y+1	; 0x01
    29a4:	3a 81       	ldd	r19, Y+2	; 0x02
    29a6:	bc 01       	movw	r22, r24
    29a8:	cd 01       	movw	r24, r26
    29aa:	a9 01       	movw	r20, r18
    29ac:	2e 2f       	mov	r18, r30
    29ae:	0e 94 48 16 	call	0x2c90	; 0x2c90 <TIMER1_ticksCalculator>

        TIMER1_SET_CHANNEL_A_PWM_STATE(a_ptr2configurations->timer_mode);
    29b2:	2f e4       	ldi	r18, 0x4F	; 79
    29b4:	30 e0       	ldi	r19, 0x00	; 0
    29b6:	3f 8b       	std	Y+23, r19	; 0x17
    29b8:	2e 8b       	std	Y+22, r18	; 0x16
    29ba:	ef e4       	ldi	r30, 0x4F	; 79
    29bc:	f0 e0       	ldi	r31, 0x00	; 0
    29be:	80 81       	ld	r24, Z
    29c0:	38 2f       	mov	r19, r24
    29c2:	37 7f       	andi	r19, 0xF7	; 247
    29c4:	3d 8b       	std	Y+21, r19	; 0x15
    29c6:	ec 81       	ldd	r30, Y+4	; 0x04
    29c8:	fd 81       	ldd	r31, Y+5	; 0x05
    29ca:	84 81       	ldd	r24, Z+4	; 0x04
    29cc:	88 2f       	mov	r24, r24
    29ce:	90 e0       	ldi	r25, 0x00	; 0
    29d0:	81 70       	andi	r24, 0x01	; 1
    29d2:	90 70       	andi	r25, 0x00	; 0
    29d4:	00 97       	sbiw	r24, 0x00	; 0
    29d6:	19 f4       	brne	.+6      	; 0x29de <TIMER1_init+0xdc>
    29d8:	88 e0       	ldi	r24, 0x08	; 8
    29da:	8c 8b       	std	Y+20, r24	; 0x14
    29dc:	01 c0       	rjmp	.+2      	; 0x29e0 <TIMER1_init+0xde>
    29de:	1c 8a       	std	Y+20, r1	; 0x14
    29e0:	8d 89       	ldd	r24, Y+21	; 0x15
    29e2:	9c 89       	ldd	r25, Y+20	; 0x14
    29e4:	89 2b       	or	r24, r25
    29e6:	ee 89       	ldd	r30, Y+22	; 0x16
    29e8:	ff 89       	ldd	r31, Y+23	; 0x17
    29ea:	80 83       	st	Z, r24
        TIMER1_SET_CHANNEL_B_PWM_STATE(a_ptr2configurations->timer_mode);
    29ec:	2f e4       	ldi	r18, 0x4F	; 79
    29ee:	30 e0       	ldi	r19, 0x00	; 0
    29f0:	3b 8b       	std	Y+19, r19	; 0x13
    29f2:	2a 8b       	std	Y+18, r18	; 0x12
    29f4:	ef e4       	ldi	r30, 0x4F	; 79
    29f6:	f0 e0       	ldi	r31, 0x00	; 0
    29f8:	80 81       	ld	r24, Z
    29fa:	38 2f       	mov	r19, r24
    29fc:	3b 7f       	andi	r19, 0xFB	; 251
    29fe:	39 8b       	std	Y+17, r19	; 0x11
    2a00:	ec 81       	ldd	r30, Y+4	; 0x04
    2a02:	fd 81       	ldd	r31, Y+5	; 0x05
    2a04:	84 81       	ldd	r24, Z+4	; 0x04
    2a06:	88 2f       	mov	r24, r24
    2a08:	90 e0       	ldi	r25, 0x00	; 0
    2a0a:	81 70       	andi	r24, 0x01	; 1
    2a0c:	90 70       	andi	r25, 0x00	; 0
    2a0e:	00 97       	sbiw	r24, 0x00	; 0
    2a10:	19 f4       	brne	.+6      	; 0x2a18 <TIMER1_init+0x116>
    2a12:	84 e0       	ldi	r24, 0x04	; 4
    2a14:	88 8b       	std	Y+16, r24	; 0x10
    2a16:	01 c0       	rjmp	.+2      	; 0x2a1a <TIMER1_init+0x118>
    2a18:	18 8a       	std	Y+16, r1	; 0x10
    2a1a:	89 89       	ldd	r24, Y+17	; 0x11
    2a1c:	98 89       	ldd	r25, Y+16	; 0x10
    2a1e:	89 2b       	or	r24, r25
    2a20:	ea 89       	ldd	r30, Y+18	; 0x12
    2a22:	fb 89       	ldd	r31, Y+19	; 0x13
    2a24:	80 83       	st	Z, r24
        TIMER1_SET_CHANNEL_A_OUTPUT_MODE(a_ptr2configurations->channel_a_output_mode);
    2a26:	af e4       	ldi	r26, 0x4F	; 79
    2a28:	b0 e0       	ldi	r27, 0x00	; 0
    2a2a:	ef e4       	ldi	r30, 0x4F	; 79
    2a2c:	f0 e0       	ldi	r31, 0x00	; 0
    2a2e:	80 81       	ld	r24, Z
    2a30:	28 2f       	mov	r18, r24
    2a32:	2f 73       	andi	r18, 0x3F	; 63
    2a34:	ec 81       	ldd	r30, Y+4	; 0x04
    2a36:	fd 81       	ldd	r31, Y+5	; 0x05
    2a38:	86 81       	ldd	r24, Z+6	; 0x06
    2a3a:	88 2f       	mov	r24, r24
    2a3c:	90 e0       	ldi	r25, 0x00	; 0
    2a3e:	00 24       	eor	r0, r0
    2a40:	96 95       	lsr	r25
    2a42:	87 95       	ror	r24
    2a44:	07 94       	ror	r0
    2a46:	96 95       	lsr	r25
    2a48:	87 95       	ror	r24
    2a4a:	07 94       	ror	r0
    2a4c:	98 2f       	mov	r25, r24
    2a4e:	80 2d       	mov	r24, r0
    2a50:	82 2b       	or	r24, r18
    2a52:	8c 93       	st	X, r24
        TIMER1_SET_CHANNEL_B_OUTPUT_MODE(a_ptr2configurations->channel_b_output_mode);
    2a54:	af e4       	ldi	r26, 0x4F	; 79
    2a56:	b0 e0       	ldi	r27, 0x00	; 0
    2a58:	ef e4       	ldi	r30, 0x4F	; 79
    2a5a:	f0 e0       	ldi	r31, 0x00	; 0
    2a5c:	80 81       	ld	r24, Z
    2a5e:	28 2f       	mov	r18, r24
    2a60:	2f 7c       	andi	r18, 0xCF	; 207
    2a62:	ec 81       	ldd	r30, Y+4	; 0x04
    2a64:	fd 81       	ldd	r31, Y+5	; 0x05
    2a66:	87 81       	ldd	r24, Z+7	; 0x07
    2a68:	88 2f       	mov	r24, r24
    2a6a:	90 e0       	ldi	r25, 0x00	; 0
    2a6c:	83 70       	andi	r24, 0x03	; 3
    2a6e:	90 70       	andi	r25, 0x00	; 0
    2a70:	82 95       	swap	r24
    2a72:	92 95       	swap	r25
    2a74:	90 7f       	andi	r25, 0xF0	; 240
    2a76:	98 27       	eor	r25, r24
    2a78:	80 7f       	andi	r24, 0xF0	; 240
    2a7a:	98 27       	eor	r25, r24
    2a7c:	82 2b       	or	r24, r18
    2a7e:	8c 93       	st	X, r24
        TIMER1_SET_OPERATION_MODE_LOW_BITS(a_ptr2configurations->timer_mode);
    2a80:	af e4       	ldi	r26, 0x4F	; 79
    2a82:	b0 e0       	ldi	r27, 0x00	; 0
    2a84:	ef e4       	ldi	r30, 0x4F	; 79
    2a86:	f0 e0       	ldi	r31, 0x00	; 0
    2a88:	80 81       	ld	r24, Z
    2a8a:	98 2f       	mov	r25, r24
    2a8c:	9c 7f       	andi	r25, 0xFC	; 252
    2a8e:	ec 81       	ldd	r30, Y+4	; 0x04
    2a90:	fd 81       	ldd	r31, Y+5	; 0x05
    2a92:	84 81       	ldd	r24, Z+4	; 0x04
    2a94:	83 70       	andi	r24, 0x03	; 3
    2a96:	89 2b       	or	r24, r25
    2a98:	8c 93       	st	X, r24
        TIMER1_SET_OPERATION_MODE_HIGH_BITS(a_ptr2configurations->timer_mode);
    2a9a:	ae e4       	ldi	r26, 0x4E	; 78
    2a9c:	b0 e0       	ldi	r27, 0x00	; 0
    2a9e:	ee e4       	ldi	r30, 0x4E	; 78
    2aa0:	f0 e0       	ldi	r31, 0x00	; 0
    2aa2:	80 81       	ld	r24, Z
    2aa4:	28 2f       	mov	r18, r24
    2aa6:	27 7e       	andi	r18, 0xE7	; 231
    2aa8:	ec 81       	ldd	r30, Y+4	; 0x04
    2aaa:	fd 81       	ldd	r31, Y+5	; 0x05
    2aac:	84 81       	ldd	r24, Z+4	; 0x04
    2aae:	88 2f       	mov	r24, r24
    2ab0:	90 e0       	ldi	r25, 0x00	; 0
    2ab2:	8c 70       	andi	r24, 0x0C	; 12
    2ab4:	90 70       	andi	r25, 0x00	; 0
    2ab6:	88 0f       	add	r24, r24
    2ab8:	99 1f       	adc	r25, r25
    2aba:	82 2b       	or	r24, r18
    2abc:	8c 93       	st	X, r24

        switch (a_ptr2configurations->timer_mode)
    2abe:	ec 81       	ldd	r30, Y+4	; 0x04
    2ac0:	fd 81       	ldd	r31, Y+5	; 0x05
    2ac2:	84 81       	ldd	r24, Z+4	; 0x04
    2ac4:	28 2f       	mov	r18, r24
    2ac6:	30 e0       	ldi	r19, 0x00	; 0
    2ac8:	3f 87       	std	Y+15, r19	; 0x0f
    2aca:	2e 87       	std	Y+14, r18	; 0x0e
    2acc:	8e 85       	ldd	r24, Y+14	; 0x0e
    2ace:	9f 85       	ldd	r25, Y+15	; 0x0f
    2ad0:	00 97       	sbiw	r24, 0x00	; 0
    2ad2:	31 f0       	breq	.+12     	; 0x2ae0 <TIMER1_init+0x1de>
    2ad4:	ee 85       	ldd	r30, Y+14	; 0x0e
    2ad6:	ff 85       	ldd	r31, Y+15	; 0x0f
    2ad8:	e4 30       	cpi	r30, 0x04	; 4
    2ada:	f1 05       	cpc	r31, r1
    2adc:	b1 f1       	breq	.+108    	; 0x2b4a <TIMER1_init+0x248>
    2ade:	6b c0       	rjmp	.+214    	; 0x2bb6 <TIMER1_init+0x2b4>
        {
        case TIMER1_OVERFLOW_MODE:
            TCNT1 = (g_number_of_cycles == 0) ? g_preload_value : 0;
    2ae0:	2c e4       	ldi	r18, 0x4C	; 76
    2ae2:	30 e0       	ldi	r19, 0x00	; 0
    2ae4:	3d 87       	std	Y+13, r19	; 0x0d
    2ae6:	2c 87       	std	Y+12, r18	; 0x0c
    2ae8:	20 91 a4 01 	lds	r18, 0x01A4
    2aec:	30 91 a5 01 	lds	r19, 0x01A5
    2af0:	40 91 a6 01 	lds	r20, 0x01A6
    2af4:	50 91 a7 01 	lds	r21, 0x01A7
    2af8:	60 91 a8 01 	lds	r22, 0x01A8
    2afc:	70 91 a9 01 	lds	r23, 0x01A9
    2b00:	80 91 aa 01 	lds	r24, 0x01AA
    2b04:	90 91 ab 01 	lds	r25, 0x01AB
    2b08:	e2 2f       	mov	r30, r18
    2b0a:	e3 2b       	or	r30, r19
    2b0c:	e4 2b       	or	r30, r20
    2b0e:	e5 2b       	or	r30, r21
    2b10:	e6 2b       	or	r30, r22
    2b12:	e7 2b       	or	r30, r23
    2b14:	e8 2b       	or	r30, r24
    2b16:	e9 2b       	or	r30, r25
    2b18:	ee 23       	and	r30, r30
    2b1a:	39 f4       	brne	.+14     	; 0x2b2a <TIMER1_init+0x228>
    2b1c:	80 91 ac 01 	lds	r24, 0x01AC
    2b20:	90 91 ad 01 	lds	r25, 0x01AD
    2b24:	9b 87       	std	Y+11, r25	; 0x0b
    2b26:	8a 87       	std	Y+10, r24	; 0x0a
    2b28:	02 c0       	rjmp	.+4      	; 0x2b2e <TIMER1_init+0x22c>
    2b2a:	1b 86       	std	Y+11, r1	; 0x0b
    2b2c:	1a 86       	std	Y+10, r1	; 0x0a
    2b2e:	2a 85       	ldd	r18, Y+10	; 0x0a
    2b30:	3b 85       	ldd	r19, Y+11	; 0x0b
    2b32:	ec 85       	ldd	r30, Y+12	; 0x0c
    2b34:	fd 85       	ldd	r31, Y+13	; 0x0d
    2b36:	31 83       	std	Z+1, r19	; 0x01
    2b38:	20 83       	st	Z, r18
            TIMER0_ENABLE_OVERFLOW_INTERRUPT();
    2b3a:	a9 e5       	ldi	r26, 0x59	; 89
    2b3c:	b0 e0       	ldi	r27, 0x00	; 0
    2b3e:	e9 e5       	ldi	r30, 0x59	; 89
    2b40:	f0 e0       	ldi	r31, 0x00	; 0
    2b42:	80 81       	ld	r24, Z
    2b44:	84 60       	ori	r24, 0x04	; 4
    2b46:	8c 93       	st	X, r24
    2b48:	36 c0       	rjmp	.+108    	; 0x2bb6 <TIMER1_init+0x2b4>
            break;
        
        case TIMER1_COMPARE_MATCH_MODE:
        	OCR1A = (g_number_of_cycles == 0) ? g_compare_value : (TIMER1_OVERFLOW_VALUE - 1);
    2b4a:	8a e4       	ldi	r24, 0x4A	; 74
    2b4c:	90 e0       	ldi	r25, 0x00	; 0
    2b4e:	99 87       	std	Y+9, r25	; 0x09
    2b50:	88 87       	std	Y+8, r24	; 0x08
    2b52:	20 91 a4 01 	lds	r18, 0x01A4
    2b56:	30 91 a5 01 	lds	r19, 0x01A5
    2b5a:	40 91 a6 01 	lds	r20, 0x01A6
    2b5e:	50 91 a7 01 	lds	r21, 0x01A7
    2b62:	60 91 a8 01 	lds	r22, 0x01A8
    2b66:	70 91 a9 01 	lds	r23, 0x01A9
    2b6a:	80 91 aa 01 	lds	r24, 0x01AA
    2b6e:	90 91 ab 01 	lds	r25, 0x01AB
    2b72:	e2 2f       	mov	r30, r18
    2b74:	e3 2b       	or	r30, r19
    2b76:	e4 2b       	or	r30, r20
    2b78:	e5 2b       	or	r30, r21
    2b7a:	e6 2b       	or	r30, r22
    2b7c:	e7 2b       	or	r30, r23
    2b7e:	e8 2b       	or	r30, r24
    2b80:	e9 2b       	or	r30, r25
    2b82:	ee 23       	and	r30, r30
    2b84:	39 f4       	brne	.+14     	; 0x2b94 <TIMER1_init+0x292>
    2b86:	e0 91 ae 01 	lds	r30, 0x01AE
    2b8a:	f0 91 af 01 	lds	r31, 0x01AF
    2b8e:	ff 83       	std	Y+7, r31	; 0x07
    2b90:	ee 83       	std	Y+6, r30	; 0x06
    2b92:	04 c0       	rjmp	.+8      	; 0x2b9c <TIMER1_init+0x29a>
    2b94:	2f ef       	ldi	r18, 0xFF	; 255
    2b96:	3f ef       	ldi	r19, 0xFF	; 255
    2b98:	3f 83       	std	Y+7, r19	; 0x07
    2b9a:	2e 83       	std	Y+6, r18	; 0x06
    2b9c:	2e 81       	ldd	r18, Y+6	; 0x06
    2b9e:	3f 81       	ldd	r19, Y+7	; 0x07
    2ba0:	e8 85       	ldd	r30, Y+8	; 0x08
    2ba2:	f9 85       	ldd	r31, Y+9	; 0x09
    2ba4:	31 83       	std	Z+1, r19	; 0x01
    2ba6:	20 83       	st	Z, r18
        	TIMER0_ENABLE_COMPARE_MATCH_A_INTERRUPT();
    2ba8:	a9 e5       	ldi	r26, 0x59	; 89
    2baa:	b0 e0       	ldi	r27, 0x00	; 0
    2bac:	e9 e5       	ldi	r30, 0x59	; 89
    2bae:	f0 e0       	ldi	r31, 0x00	; 0
    2bb0:	80 81       	ld	r24, Z
    2bb2:	80 61       	ori	r24, 0x10	; 16
    2bb4:	8c 93       	st	X, r24
        default:
            /* Do Nothing.  */
            break;
        }

        TIMER1_SET_PRESCALER_VALUE(a_ptr2configurations->prescaler_id);
    2bb6:	ae e4       	ldi	r26, 0x4E	; 78
    2bb8:	b0 e0       	ldi	r27, 0x00	; 0
    2bba:	ee e4       	ldi	r30, 0x4E	; 78
    2bbc:	f0 e0       	ldi	r31, 0x00	; 0
    2bbe:	80 81       	ld	r24, Z
    2bc0:	98 2f       	mov	r25, r24
    2bc2:	98 7f       	andi	r25, 0xF8	; 248
    2bc4:	ec 81       	ldd	r30, Y+4	; 0x04
    2bc6:	fd 81       	ldd	r31, Y+5	; 0x05
    2bc8:	85 81       	ldd	r24, Z+5	; 0x05
    2bca:	87 70       	andi	r24, 0x07	; 7
    2bcc:	89 2b       	or	r24, r25
    2bce:	8c 93       	st	X, r24
    }

    return LOC_errorStatus;
    2bd0:	8b 81       	ldd	r24, Y+3	; 0x03
}
    2bd2:	67 96       	adiw	r28, 0x17	; 23
    2bd4:	0f b6       	in	r0, 0x3f	; 63
    2bd6:	f8 94       	cli
    2bd8:	de bf       	out	0x3e, r29	; 62
    2bda:	0f be       	out	0x3f, r0	; 63
    2bdc:	cd bf       	out	0x3d, r28	; 61
    2bde:	cf 91       	pop	r28
    2be0:	df 91       	pop	r29
    2be2:	08 95       	ret

00002be4 <TIMER1_getPrescalerValue>:
 * [Description]   : Get the value of the Timer-1 prescaler based on its ID.
 * [Arguments]     : <a_prescalerID>      -> Indicates to the prescaler ID.
 * [return]        : The function returns the prescaler value.
 ====================================================================================================================*/
static uint16 TIMER1_getPrescalerValue(TIMER1_prescalerID a_prescalerID)
{
    2be4:	df 93       	push	r29
    2be6:	cf 93       	push	r28
    2be8:	00 d0       	rcall	.+0      	; 0x2bea <TIMER1_getPrescalerValue+0x6>
    2bea:	00 d0       	rcall	.+0      	; 0x2bec <TIMER1_getPrescalerValue+0x8>
    2bec:	0f 92       	push	r0
    2bee:	cd b7       	in	r28, 0x3d	; 61
    2bf0:	de b7       	in	r29, 0x3e	; 62
    2bf2:	8b 83       	std	Y+3, r24	; 0x03
    uint16 LOC_prescalerValue = 0;
    2bf4:	1a 82       	std	Y+2, r1	; 0x02
    2bf6:	19 82       	std	Y+1, r1	; 0x01

	switch (a_prescalerID)
    2bf8:	8b 81       	ldd	r24, Y+3	; 0x03
    2bfa:	28 2f       	mov	r18, r24
    2bfc:	30 e0       	ldi	r19, 0x00	; 0
    2bfe:	3d 83       	std	Y+5, r19	; 0x05
    2c00:	2c 83       	std	Y+4, r18	; 0x04
    2c02:	8c 81       	ldd	r24, Y+4	; 0x04
    2c04:	9d 81       	ldd	r25, Y+5	; 0x05
    2c06:	83 30       	cpi	r24, 0x03	; 3
    2c08:	91 05       	cpc	r25, r1
    2c0a:	29 f1       	breq	.+74     	; 0x2c56 <TIMER1_getPrescalerValue+0x72>
    2c0c:	2c 81       	ldd	r18, Y+4	; 0x04
    2c0e:	3d 81       	ldd	r19, Y+5	; 0x05
    2c10:	24 30       	cpi	r18, 0x04	; 4
    2c12:	31 05       	cpc	r19, r1
    2c14:	5c f4       	brge	.+22     	; 0x2c2c <TIMER1_getPrescalerValue+0x48>
    2c16:	8c 81       	ldd	r24, Y+4	; 0x04
    2c18:	9d 81       	ldd	r25, Y+5	; 0x05
    2c1a:	81 30       	cpi	r24, 0x01	; 1
    2c1c:	91 05       	cpc	r25, r1
    2c1e:	89 f0       	breq	.+34     	; 0x2c42 <TIMER1_getPrescalerValue+0x5e>
    2c20:	2c 81       	ldd	r18, Y+4	; 0x04
    2c22:	3d 81       	ldd	r19, Y+5	; 0x05
    2c24:	22 30       	cpi	r18, 0x02	; 2
    2c26:	31 05       	cpc	r19, r1
    2c28:	89 f0       	breq	.+34     	; 0x2c4c <TIMER1_getPrescalerValue+0x68>
    2c2a:	24 c0       	rjmp	.+72     	; 0x2c74 <TIMER1_getPrescalerValue+0x90>
    2c2c:	8c 81       	ldd	r24, Y+4	; 0x04
    2c2e:	9d 81       	ldd	r25, Y+5	; 0x05
    2c30:	84 30       	cpi	r24, 0x04	; 4
    2c32:	91 05       	cpc	r25, r1
    2c34:	a9 f0       	breq	.+42     	; 0x2c60 <TIMER1_getPrescalerValue+0x7c>
    2c36:	2c 81       	ldd	r18, Y+4	; 0x04
    2c38:	3d 81       	ldd	r19, Y+5	; 0x05
    2c3a:	25 30       	cpi	r18, 0x05	; 5
    2c3c:	31 05       	cpc	r19, r1
    2c3e:	a9 f0       	breq	.+42     	; 0x2c6a <TIMER1_getPrescalerValue+0x86>
    2c40:	19 c0       	rjmp	.+50     	; 0x2c74 <TIMER1_getPrescalerValue+0x90>
    {
    case TIMER1_PRESCALER_1:
        LOC_prescalerValue = 1;
    2c42:	81 e0       	ldi	r24, 0x01	; 1
    2c44:	90 e0       	ldi	r25, 0x00	; 0
    2c46:	9a 83       	std	Y+2, r25	; 0x02
    2c48:	89 83       	std	Y+1, r24	; 0x01
    2c4a:	18 c0       	rjmp	.+48     	; 0x2c7c <TIMER1_getPrescalerValue+0x98>
        break;
    
    case TIMER1_PRESCALER_8:
        LOC_prescalerValue = 8;
    2c4c:	88 e0       	ldi	r24, 0x08	; 8
    2c4e:	90 e0       	ldi	r25, 0x00	; 0
    2c50:	9a 83       	std	Y+2, r25	; 0x02
    2c52:	89 83       	std	Y+1, r24	; 0x01
    2c54:	13 c0       	rjmp	.+38     	; 0x2c7c <TIMER1_getPrescalerValue+0x98>
        break;
    
    case TIMER1_PRESCALER_64:
        LOC_prescalerValue = 64;
    2c56:	80 e4       	ldi	r24, 0x40	; 64
    2c58:	90 e0       	ldi	r25, 0x00	; 0
    2c5a:	9a 83       	std	Y+2, r25	; 0x02
    2c5c:	89 83       	std	Y+1, r24	; 0x01
    2c5e:	0e c0       	rjmp	.+28     	; 0x2c7c <TIMER1_getPrescalerValue+0x98>
        break;
    
    case TIMER1_PRESCALER_256:
        LOC_prescalerValue = 256;
    2c60:	80 e0       	ldi	r24, 0x00	; 0
    2c62:	91 e0       	ldi	r25, 0x01	; 1
    2c64:	9a 83       	std	Y+2, r25	; 0x02
    2c66:	89 83       	std	Y+1, r24	; 0x01
    2c68:	09 c0       	rjmp	.+18     	; 0x2c7c <TIMER1_getPrescalerValue+0x98>
        break;
    
    case TIMER1_PRESCALER_1024:
        LOC_prescalerValue = 1024;
    2c6a:	80 e0       	ldi	r24, 0x00	; 0
    2c6c:	94 e0       	ldi	r25, 0x04	; 4
    2c6e:	9a 83       	std	Y+2, r25	; 0x02
    2c70:	89 83       	std	Y+1, r24	; 0x01
    2c72:	04 c0       	rjmp	.+8      	; 0x2c7c <TIMER1_getPrescalerValue+0x98>
        break;
    
    default:
        LOC_prescalerValue = 1;
    2c74:	81 e0       	ldi	r24, 0x01	; 1
    2c76:	90 e0       	ldi	r25, 0x00	; 0
    2c78:	9a 83       	std	Y+2, r25	; 0x02
    2c7a:	89 83       	std	Y+1, r24	; 0x01
        break;
    }

    return LOC_prescalerValue;
    2c7c:	89 81       	ldd	r24, Y+1	; 0x01
    2c7e:	9a 81       	ldd	r25, Y+2	; 0x02
}
    2c80:	0f 90       	pop	r0
    2c82:	0f 90       	pop	r0
    2c84:	0f 90       	pop	r0
    2c86:	0f 90       	pop	r0
    2c88:	0f 90       	pop	r0
    2c8a:	cf 91       	pop	r28
    2c8c:	df 91       	pop	r29
    2c8e:	08 95       	ret

00002c90 <TIMER1_ticksCalculator>:
 *                   <a_prescalerValue> -> Indicates to the prescaler value.
 *                   <a_timerMode>      -> Indicates to the timer operation mode.
 * [return]        : The function returns void.
 ====================================================================================================================*/
static void TIMER1_ticksCalculator(uint32 a_time, uint16 a_prescalerValue, TIMER1_operationMode a_timerMode)
{
    2c90:	2f 92       	push	r2
    2c92:	3f 92       	push	r3
    2c94:	4f 92       	push	r4
    2c96:	5f 92       	push	r5
    2c98:	6f 92       	push	r6
    2c9a:	7f 92       	push	r7
    2c9c:	8f 92       	push	r8
    2c9e:	9f 92       	push	r9
    2ca0:	af 92       	push	r10
    2ca2:	bf 92       	push	r11
    2ca4:	cf 92       	push	r12
    2ca6:	df 92       	push	r13
    2ca8:	ef 92       	push	r14
    2caa:	ff 92       	push	r15
    2cac:	0f 93       	push	r16
    2cae:	1f 93       	push	r17
    2cb0:	df 93       	push	r29
    2cb2:	cf 93       	push	r28
    2cb4:	cd b7       	in	r28, 0x3d	; 61
    2cb6:	de b7       	in	r29, 0x3e	; 62
    2cb8:	65 97       	sbiw	r28, 0x15	; 21
    2cba:	0f b6       	in	r0, 0x3f	; 63
    2cbc:	f8 94       	cli
    2cbe:	de bf       	out	0x3e, r29	; 62
    2cc0:	0f be       	out	0x3f, r0	; 63
    2cc2:	cd bf       	out	0x3d, r28	; 61
    2cc4:	6d 87       	std	Y+13, r22	; 0x0d
    2cc6:	7e 87       	std	Y+14, r23	; 0x0e
    2cc8:	8f 87       	std	Y+15, r24	; 0x0f
    2cca:	98 8b       	std	Y+16, r25	; 0x10
    2ccc:	5a 8b       	std	Y+18, r21	; 0x12
    2cce:	49 8b       	std	Y+17, r20	; 0x11
    2cd0:	2b 8b       	std	Y+19, r18	; 0x13
    uint32 LOC_timerFrequency = (F_CPU / a_prescalerValue);
    2cd2:	89 89       	ldd	r24, Y+17	; 0x11
    2cd4:	9a 89       	ldd	r25, Y+18	; 0x12
    2cd6:	9c 01       	movw	r18, r24
    2cd8:	40 e0       	ldi	r20, 0x00	; 0
    2cda:	50 e0       	ldi	r21, 0x00	; 0
    2cdc:	80 e0       	ldi	r24, 0x00	; 0
    2cde:	94 e2       	ldi	r25, 0x24	; 36
    2ce0:	a4 ef       	ldi	r26, 0xF4	; 244
    2ce2:	b0 e0       	ldi	r27, 0x00	; 0
    2ce4:	bc 01       	movw	r22, r24
    2ce6:	cd 01       	movw	r24, r26
    2ce8:	0e 94 c3 2b 	call	0x5786	; 0x5786 <__udivmodsi4>
    2cec:	da 01       	movw	r26, r20
    2cee:	c9 01       	movw	r24, r18
    2cf0:	89 87       	std	Y+9, r24	; 0x09
    2cf2:	9a 87       	std	Y+10, r25	; 0x0a
    2cf4:	ab 87       	std	Y+11, r26	; 0x0b
    2cf6:	bc 87       	std	Y+12, r27	; 0x0c
    uint64 LOC_numOfTicks = ((LOC_timerFrequency * (uint64)a_time) / 1000);
    2cf8:	89 85       	ldd	r24, Y+9	; 0x09
    2cfa:	9a 85       	ldd	r25, Y+10	; 0x0a
    2cfc:	ab 85       	ldd	r26, Y+11	; 0x0b
    2cfe:	bc 85       	ldd	r27, Y+12	; 0x0c
    2d00:	5c 01       	movw	r10, r24
    2d02:	6d 01       	movw	r12, r26
    2d04:	ee 24       	eor	r14, r14
    2d06:	ff 24       	eor	r15, r15
    2d08:	87 01       	movw	r16, r14
    2d0a:	8d 85       	ldd	r24, Y+13	; 0x0d
    2d0c:	9e 85       	ldd	r25, Y+14	; 0x0e
    2d0e:	af 85       	ldd	r26, Y+15	; 0x0f
    2d10:	b8 89       	ldd	r27, Y+16	; 0x10
    2d12:	1c 01       	movw	r2, r24
    2d14:	2d 01       	movw	r4, r26
    2d16:	66 24       	eor	r6, r6
    2d18:	77 24       	eor	r7, r7
    2d1a:	43 01       	movw	r8, r6
    2d1c:	2a 2d       	mov	r18, r10
    2d1e:	3b 2d       	mov	r19, r11
    2d20:	4c 2d       	mov	r20, r12
    2d22:	5d 2d       	mov	r21, r13
    2d24:	6e 2d       	mov	r22, r14
    2d26:	7f 2d       	mov	r23, r15
    2d28:	80 2f       	mov	r24, r16
    2d2a:	91 2f       	mov	r25, r17
    2d2c:	a2 2c       	mov	r10, r2
    2d2e:	b3 2c       	mov	r11, r3
    2d30:	c4 2c       	mov	r12, r4
    2d32:	d5 2c       	mov	r13, r5
    2d34:	e6 2c       	mov	r14, r6
    2d36:	f7 2c       	mov	r15, r7
    2d38:	08 2d       	mov	r16, r8
    2d3a:	19 2d       	mov	r17, r9
    2d3c:	0e 94 49 00 	call	0x92	; 0x92 <__muldi3>
    2d40:	22 2e       	mov	r2, r18
    2d42:	33 2e       	mov	r3, r19
    2d44:	44 2e       	mov	r4, r20
    2d46:	55 2e       	mov	r5, r21
    2d48:	66 2e       	mov	r6, r22
    2d4a:	77 2e       	mov	r7, r23
    2d4c:	88 2e       	mov	r8, r24
    2d4e:	99 2e       	mov	r9, r25
    2d50:	a2 2c       	mov	r10, r2
    2d52:	b3 2c       	mov	r11, r3
    2d54:	c4 2c       	mov	r12, r4
    2d56:	d5 2c       	mov	r13, r5
    2d58:	e6 2c       	mov	r14, r6
    2d5a:	f7 2c       	mov	r15, r7
    2d5c:	08 2d       	mov	r16, r8
    2d5e:	19 2d       	mov	r17, r9
    2d60:	2a 2d       	mov	r18, r10
    2d62:	3b 2d       	mov	r19, r11
    2d64:	4c 2d       	mov	r20, r12
    2d66:	5d 2d       	mov	r21, r13
    2d68:	6e 2d       	mov	r22, r14
    2d6a:	7f 2d       	mov	r23, r15
    2d6c:	80 2f       	mov	r24, r16
    2d6e:	91 2f       	mov	r25, r17
    2d70:	0f 2e       	mov	r0, r31
    2d72:	f8 ee       	ldi	r31, 0xE8	; 232
    2d74:	af 2e       	mov	r10, r31
    2d76:	f0 2d       	mov	r31, r0
    2d78:	0f 2e       	mov	r0, r31
    2d7a:	f3 e0       	ldi	r31, 0x03	; 3
    2d7c:	bf 2e       	mov	r11, r31
    2d7e:	f0 2d       	mov	r31, r0
    2d80:	cc 24       	eor	r12, r12
    2d82:	dd 24       	eor	r13, r13
    2d84:	ee 24       	eor	r14, r14
    2d86:	ff 24       	eor	r15, r15
    2d88:	00 e0       	ldi	r16, 0x00	; 0
    2d8a:	10 e0       	ldi	r17, 0x00	; 0
    2d8c:	0e 94 6e 02 	call	0x4dc	; 0x4dc <__udivdi3>
    2d90:	a2 2e       	mov	r10, r18
    2d92:	b3 2e       	mov	r11, r19
    2d94:	c4 2e       	mov	r12, r20
    2d96:	d5 2e       	mov	r13, r21
    2d98:	e6 2e       	mov	r14, r22
    2d9a:	f7 2e       	mov	r15, r23
    2d9c:	08 2f       	mov	r16, r24
    2d9e:	19 2f       	mov	r17, r25
    2da0:	a9 82       	std	Y+1, r10	; 0x01
    2da2:	ba 82       	std	Y+2, r11	; 0x02
    2da4:	cb 82       	std	Y+3, r12	; 0x03
    2da6:	dc 82       	std	Y+4, r13	; 0x04
    2da8:	ed 82       	std	Y+5, r14	; 0x05
    2daa:	fe 82       	std	Y+6, r15	; 0x06
    2dac:	0f 83       	std	Y+7, r16	; 0x07
    2dae:	18 87       	std	Y+8, r17	; 0x08
    g_number_of_cycles = (LOC_numOfTicks / TIMER1_OVERFLOW_VALUE);
    2db0:	a9 80       	ldd	r10, Y+1	; 0x01
    2db2:	ba 80       	ldd	r11, Y+2	; 0x02
    2db4:	cb 80       	ldd	r12, Y+3	; 0x03
    2db6:	dc 80       	ldd	r13, Y+4	; 0x04
    2db8:	ed 80       	ldd	r14, Y+5	; 0x05
    2dba:	fe 80       	ldd	r15, Y+6	; 0x06
    2dbc:	0f 81       	ldd	r16, Y+7	; 0x07
    2dbe:	18 85       	ldd	r17, Y+8	; 0x08
    2dc0:	2a 2d       	mov	r18, r10
    2dc2:	3b 2d       	mov	r19, r11
    2dc4:	4c 2d       	mov	r20, r12
    2dc6:	5d 2d       	mov	r21, r13
    2dc8:	6e 2d       	mov	r22, r14
    2dca:	7f 2d       	mov	r23, r15
    2dcc:	80 2f       	mov	r24, r16
    2dce:	91 2f       	mov	r25, r17
    2dd0:	00 e1       	ldi	r16, 0x10	; 16
    2dd2:	0e 94 44 01 	call	0x288	; 0x288 <__lshrdi3>
    2dd6:	a2 2e       	mov	r10, r18
    2dd8:	b3 2e       	mov	r11, r19
    2dda:	c4 2e       	mov	r12, r20
    2ddc:	d5 2e       	mov	r13, r21
    2dde:	e6 2e       	mov	r14, r22
    2de0:	f7 2e       	mov	r15, r23
    2de2:	08 2f       	mov	r16, r24
    2de4:	19 2f       	mov	r17, r25
    2de6:	2a 2d       	mov	r18, r10
    2de8:	3b 2d       	mov	r19, r11
    2dea:	4c 2d       	mov	r20, r12
    2dec:	5d 2d       	mov	r21, r13
    2dee:	6e 2d       	mov	r22, r14
    2df0:	7f 2d       	mov	r23, r15
    2df2:	80 2f       	mov	r24, r16
    2df4:	91 2f       	mov	r25, r17
    2df6:	20 93 a4 01 	sts	0x01A4, r18
    2dfa:	30 93 a5 01 	sts	0x01A5, r19
    2dfe:	40 93 a6 01 	sts	0x01A6, r20
    2e02:	50 93 a7 01 	sts	0x01A7, r21
    2e06:	60 93 a8 01 	sts	0x01A8, r22
    2e0a:	70 93 a9 01 	sts	0x01A9, r23
    2e0e:	80 93 aa 01 	sts	0x01AA, r24
    2e12:	90 93 ab 01 	sts	0x01AB, r25

    switch (a_timerMode)
    2e16:	8b 89       	ldd	r24, Y+19	; 0x13
    2e18:	28 2f       	mov	r18, r24
    2e1a:	30 e0       	ldi	r19, 0x00	; 0
    2e1c:	3d 8b       	std	Y+21, r19	; 0x15
    2e1e:	2c 8b       	std	Y+20, r18	; 0x14
    2e20:	8c 89       	ldd	r24, Y+20	; 0x14
    2e22:	9d 89       	ldd	r25, Y+21	; 0x15
    2e24:	00 97       	sbiw	r24, 0x00	; 0
    2e26:	31 f0       	breq	.+12     	; 0x2e34 <TIMER1_ticksCalculator+0x1a4>
    2e28:	2c 89       	ldd	r18, Y+20	; 0x14
    2e2a:	3d 89       	ldd	r19, Y+21	; 0x15
    2e2c:	24 30       	cpi	r18, 0x04	; 4
    2e2e:	31 05       	cpc	r19, r1
    2e30:	59 f0       	breq	.+22     	; 0x2e48 <TIMER1_ticksCalculator+0x1b8>
    2e32:	13 c0       	rjmp	.+38     	; 0x2e5a <TIMER1_ticksCalculator+0x1ca>
    {
    case TIMER1_OVERFLOW_MODE:
        g_preload_value = (TIMER1_OVERFLOW_VALUE - (LOC_numOfTicks % TIMER1_OVERFLOW_VALUE));
    2e34:	89 81       	ldd	r24, Y+1	; 0x01
    2e36:	9a 81       	ldd	r25, Y+2	; 0x02
    2e38:	90 95       	com	r25
    2e3a:	81 95       	neg	r24
    2e3c:	9f 4f       	sbci	r25, 0xFF	; 255
    2e3e:	90 93 ad 01 	sts	0x01AD, r25
    2e42:	80 93 ac 01 	sts	0x01AC, r24
    2e46:	09 c0       	rjmp	.+18     	; 0x2e5a <TIMER1_ticksCalculator+0x1ca>
        break;
    
    case TIMER1_COMPARE_MATCH_MODE:
        g_compare_value = (TIMER1_OVERFLOW_VALUE - (LOC_numOfTicks % TIMER1_OVERFLOW_VALUE));
    2e48:	89 81       	ldd	r24, Y+1	; 0x01
    2e4a:	9a 81       	ldd	r25, Y+2	; 0x02
    2e4c:	90 95       	com	r25
    2e4e:	81 95       	neg	r24
    2e50:	9f 4f       	sbci	r25, 0xFF	; 255
    2e52:	90 93 af 01 	sts	0x01AF, r25
    2e56:	80 93 ae 01 	sts	0x01AE, r24
    
    default:
        /* Do Nothing. */
        break;
    }
}
    2e5a:	65 96       	adiw	r28, 0x15	; 21
    2e5c:	0f b6       	in	r0, 0x3f	; 63
    2e5e:	f8 94       	cli
    2e60:	de bf       	out	0x3e, r29	; 62
    2e62:	0f be       	out	0x3f, r0	; 63
    2e64:	cd bf       	out	0x3d, r28	; 61
    2e66:	cf 91       	pop	r28
    2e68:	df 91       	pop	r29
    2e6a:	1f 91       	pop	r17
    2e6c:	0f 91       	pop	r16
    2e6e:	ff 90       	pop	r15
    2e70:	ef 90       	pop	r14
    2e72:	df 90       	pop	r13
    2e74:	cf 90       	pop	r12
    2e76:	bf 90       	pop	r11
    2e78:	af 90       	pop	r10
    2e7a:	9f 90       	pop	r9
    2e7c:	8f 90       	pop	r8
    2e7e:	7f 90       	pop	r7
    2e80:	6f 90       	pop	r6
    2e82:	5f 90       	pop	r5
    2e84:	4f 90       	pop	r4
    2e86:	3f 90       	pop	r3
    2e88:	2f 90       	pop	r2
    2e8a:	08 95       	ret

00002e8c <TIMER1_setCallBackFunction>:
 * [return]        : The function returns the error status: - No Errors.
 *                                                          - Null Pointer Error.
 *                                                          - Operation Mode Error.
 ====================================================================================================================*/
TIMER1_errorStatus TIMER1_setCallBackFunction(TIMER1_operationMode a_timerMode, void (*a_ptr2callBackFunction)(void))
{
    2e8c:	df 93       	push	r29
    2e8e:	cf 93       	push	r28
    2e90:	00 d0       	rcall	.+0      	; 0x2e92 <TIMER1_setCallBackFunction+0x6>
    2e92:	00 d0       	rcall	.+0      	; 0x2e94 <TIMER1_setCallBackFunction+0x8>
    2e94:	00 d0       	rcall	.+0      	; 0x2e96 <TIMER1_setCallBackFunction+0xa>
    2e96:	cd b7       	in	r28, 0x3d	; 61
    2e98:	de b7       	in	r29, 0x3e	; 62
    2e9a:	8a 83       	std	Y+2, r24	; 0x02
    2e9c:	7c 83       	std	Y+4, r23	; 0x04
    2e9e:	6b 83       	std	Y+3, r22	; 0x03
    TIMER1_errorStatus LOC_errorStatus = TIMER1_NO_ERRORS;
    2ea0:	19 82       	std	Y+1, r1	; 0x01

    if(a_ptr2callBackFunction == NULL_PTR)
    2ea2:	8b 81       	ldd	r24, Y+3	; 0x03
    2ea4:	9c 81       	ldd	r25, Y+4	; 0x04
    2ea6:	00 97       	sbiw	r24, 0x00	; 0
    2ea8:	19 f4       	brne	.+6      	; 0x2eb0 <TIMER1_setCallBackFunction+0x24>
    {
        LOC_errorStatus = TIMER1_NULL_PTR_ERROR;
    2eaa:	81 e0       	ldi	r24, 0x01	; 1
    2eac:	89 83       	std	Y+1, r24	; 0x01
    2eae:	1f c0       	rjmp	.+62     	; 0x2eee <TIMER1_setCallBackFunction+0x62>
    }

    else
    {
        switch (a_timerMode)
    2eb0:	8a 81       	ldd	r24, Y+2	; 0x02
    2eb2:	28 2f       	mov	r18, r24
    2eb4:	30 e0       	ldi	r19, 0x00	; 0
    2eb6:	3e 83       	std	Y+6, r19	; 0x06
    2eb8:	2d 83       	std	Y+5, r18	; 0x05
    2eba:	8d 81       	ldd	r24, Y+5	; 0x05
    2ebc:	9e 81       	ldd	r25, Y+6	; 0x06
    2ebe:	00 97       	sbiw	r24, 0x00	; 0
    2ec0:	31 f0       	breq	.+12     	; 0x2ece <TIMER1_setCallBackFunction+0x42>
    2ec2:	2d 81       	ldd	r18, Y+5	; 0x05
    2ec4:	3e 81       	ldd	r19, Y+6	; 0x06
    2ec6:	24 30       	cpi	r18, 0x04	; 4
    2ec8:	31 05       	cpc	r19, r1
    2eca:	41 f0       	breq	.+16     	; 0x2edc <TIMER1_setCallBackFunction+0x50>
    2ecc:	0e c0       	rjmp	.+28     	; 0x2eea <TIMER1_setCallBackFunction+0x5e>
        {
        case TIMER1_OVERFLOW_MODE:
            *(g_callBackFunctionsArray + TIMER1_OVF_INTERRUPT_ID) = a_ptr2callBackFunction;
    2ece:	8b 81       	ldd	r24, Y+3	; 0x03
    2ed0:	9c 81       	ldd	r25, Y+4	; 0x04
    2ed2:	90 93 a1 01 	sts	0x01A1, r25
    2ed6:	80 93 a0 01 	sts	0x01A0, r24
    2eda:	09 c0       	rjmp	.+18     	; 0x2eee <TIMER1_setCallBackFunction+0x62>
            break;
        
        case TIMER1_COMPARE_MATCH_MODE:
            *(g_callBackFunctionsArray + TIMER1_CTC_INTERRUPT_ID) = a_ptr2callBackFunction;
    2edc:	e2 ea       	ldi	r30, 0xA2	; 162
    2ede:	f1 e0       	ldi	r31, 0x01	; 1
    2ee0:	8b 81       	ldd	r24, Y+3	; 0x03
    2ee2:	9c 81       	ldd	r25, Y+4	; 0x04
    2ee4:	91 83       	std	Z+1, r25	; 0x01
    2ee6:	80 83       	st	Z, r24
    2ee8:	02 c0       	rjmp	.+4      	; 0x2eee <TIMER1_setCallBackFunction+0x62>
            break;
        
        default:
            LOC_errorStatus = TIMER1_OPERATION_MODE_ERROR;
    2eea:	83 e0       	ldi	r24, 0x03	; 3
    2eec:	89 83       	std	Y+1, r24	; 0x01
            break;
        }
    }

    return LOC_errorStatus;
    2eee:	89 81       	ldd	r24, Y+1	; 0x01
}
    2ef0:	26 96       	adiw	r28, 0x06	; 6
    2ef2:	0f b6       	in	r0, 0x3f	; 63
    2ef4:	f8 94       	cli
    2ef6:	de bf       	out	0x3e, r29	; 62
    2ef8:	0f be       	out	0x3f, r0	; 63
    2efa:	cd bf       	out	0x3d, r28	; 61
    2efc:	cf 91       	pop	r28
    2efe:	df 91       	pop	r29
    2f00:	08 95       	ret

00002f02 <__vector_7>:
 * [Arguments]     : The function takes no arguments.
 * [return]        : The function returns void.
 ====================================================================================================================*/
void __vector_7(void) __attribute__((signal));
void __vector_7(void)
{
    2f02:	1f 92       	push	r1
    2f04:	0f 92       	push	r0
    2f06:	0f b6       	in	r0, 0x3f	; 63
    2f08:	0f 92       	push	r0
    2f0a:	11 24       	eor	r1, r1
    2f0c:	2f 93       	push	r18
    2f0e:	3f 93       	push	r19
    2f10:	4f 93       	push	r20
    2f12:	5f 93       	push	r21
    2f14:	6f 93       	push	r22
    2f16:	7f 93       	push	r23
    2f18:	8f 93       	push	r24
    2f1a:	9f 93       	push	r25
    2f1c:	af 93       	push	r26
    2f1e:	bf 93       	push	r27
    2f20:	ef 93       	push	r30
    2f22:	ff 93       	push	r31
    2f24:	df 93       	push	r29
    2f26:	cf 93       	push	r28
    2f28:	cd b7       	in	r28, 0x3d	; 61
    2f2a:	de b7       	in	r29, 0x3e	; 62
    2f2c:	cf 54       	subi	r28, 0x4F	; 79
    2f2e:	d0 40       	sbci	r29, 0x00	; 0
    2f30:	de bf       	out	0x3e, r29	; 62
    2f32:	cd bf       	out	0x3d, r28	; 61
    if(*(g_callBackFunctionsArray + TIMER1_CTC_INTERRUPT_ID) != NULL_PTR)
    2f34:	e2 ea       	ldi	r30, 0xA2	; 162
    2f36:	f1 e0       	ldi	r31, 0x01	; 1
    2f38:	80 81       	ld	r24, Z
    2f3a:	91 81       	ldd	r25, Z+1	; 0x01
    2f3c:	00 97       	sbiw	r24, 0x00	; 0
    2f3e:	09 f4       	brne	.+2      	; 0x2f42 <__vector_7+0x40>
    2f40:	7a c2       	rjmp	.+1268   	; 0x3436 <__vector_7+0x534>
    {
        static uint64 LOC_cyclesCounter = 0;

        if((g_number_of_cycles != 0) && (LOC_cyclesCounter != g_number_of_cycles))
    2f42:	20 91 a4 01 	lds	r18, 0x01A4
    2f46:	30 91 a5 01 	lds	r19, 0x01A5
    2f4a:	40 91 a6 01 	lds	r20, 0x01A6
    2f4e:	50 91 a7 01 	lds	r21, 0x01A7
    2f52:	60 91 a8 01 	lds	r22, 0x01A8
    2f56:	70 91 a9 01 	lds	r23, 0x01A9
    2f5a:	80 91 aa 01 	lds	r24, 0x01AA
    2f5e:	90 91 ab 01 	lds	r25, 0x01AB
    2f62:	e2 2f       	mov	r30, r18
    2f64:	e3 2b       	or	r30, r19
    2f66:	e4 2b       	or	r30, r20
    2f68:	e5 2b       	or	r30, r21
    2f6a:	e6 2b       	or	r30, r22
    2f6c:	e7 2b       	or	r30, r23
    2f6e:	e8 2b       	or	r30, r24
    2f70:	e9 2b       	or	r30, r25
    2f72:	ee 23       	and	r30, r30
    2f74:	09 f4       	brne	.+2      	; 0x2f78 <__vector_7+0x76>
    2f76:	1a c2       	rjmp	.+1076   	; 0x33ac <__vector_7+0x4aa>
    2f78:	80 91 b0 01 	lds	r24, 0x01B0
    2f7c:	8d a3       	std	Y+37, r24	; 0x25
    2f7e:	90 91 b1 01 	lds	r25, 0x01B1
    2f82:	9e a3       	std	Y+38, r25	; 0x26
    2f84:	e0 91 b2 01 	lds	r30, 0x01B2
    2f88:	ef a3       	std	Y+39, r30	; 0x27
    2f8a:	f0 91 b3 01 	lds	r31, 0x01B3
    2f8e:	f8 a7       	std	Y+40, r31	; 0x28
    2f90:	80 91 b4 01 	lds	r24, 0x01B4
    2f94:	89 a7       	std	Y+41, r24	; 0x29
    2f96:	90 91 b5 01 	lds	r25, 0x01B5
    2f9a:	9a a7       	std	Y+42, r25	; 0x2a
    2f9c:	e0 91 b6 01 	lds	r30, 0x01B6
    2fa0:	eb a7       	std	Y+43, r30	; 0x2b
    2fa2:	f0 91 b7 01 	lds	r31, 0x01B7
    2fa6:	fc a7       	std	Y+44, r31	; 0x2c
    2fa8:	80 91 a4 01 	lds	r24, 0x01A4
    2fac:	8d 8f       	std	Y+29, r24	; 0x1d
    2fae:	90 91 a5 01 	lds	r25, 0x01A5
    2fb2:	9e 8f       	std	Y+30, r25	; 0x1e
    2fb4:	e0 91 a6 01 	lds	r30, 0x01A6
    2fb8:	ef 8f       	std	Y+31, r30	; 0x1f
    2fba:	f0 91 a7 01 	lds	r31, 0x01A7
    2fbe:	f8 a3       	std	Y+32, r31	; 0x20
    2fc0:	80 91 a8 01 	lds	r24, 0x01A8
    2fc4:	89 a3       	std	Y+33, r24	; 0x21
    2fc6:	90 91 a9 01 	lds	r25, 0x01A9
    2fca:	9a a3       	std	Y+34, r25	; 0x22
    2fcc:	e0 91 aa 01 	lds	r30, 0x01AA
    2fd0:	eb a3       	std	Y+35, r30	; 0x23
    2fd2:	f0 91 ab 01 	lds	r31, 0x01AB
    2fd6:	fc a3       	std	Y+36, r31	; 0x24
    2fd8:	8d a1       	ldd	r24, Y+37	; 0x25
    2fda:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2fdc:	89 17       	cp	r24, r25
    2fde:	e9 f4       	brne	.+58     	; 0x301a <__vector_7+0x118>
    2fe0:	ee a1       	ldd	r30, Y+38	; 0x26
    2fe2:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2fe4:	ef 17       	cp	r30, r31
    2fe6:	c9 f4       	brne	.+50     	; 0x301a <__vector_7+0x118>
    2fe8:	8f a1       	ldd	r24, Y+39	; 0x27
    2fea:	9f 8d       	ldd	r25, Y+31	; 0x1f
    2fec:	89 17       	cp	r24, r25
    2fee:	a9 f4       	brne	.+42     	; 0x301a <__vector_7+0x118>
    2ff0:	e8 a5       	ldd	r30, Y+40	; 0x28
    2ff2:	f8 a1       	ldd	r31, Y+32	; 0x20
    2ff4:	ef 17       	cp	r30, r31
    2ff6:	89 f4       	brne	.+34     	; 0x301a <__vector_7+0x118>
    2ff8:	89 a5       	ldd	r24, Y+41	; 0x29
    2ffa:	99 a1       	ldd	r25, Y+33	; 0x21
    2ffc:	89 17       	cp	r24, r25
    2ffe:	69 f4       	brne	.+26     	; 0x301a <__vector_7+0x118>
    3000:	ea a5       	ldd	r30, Y+42	; 0x2a
    3002:	fa a1       	ldd	r31, Y+34	; 0x22
    3004:	ef 17       	cp	r30, r31
    3006:	49 f4       	brne	.+18     	; 0x301a <__vector_7+0x118>
    3008:	8b a5       	ldd	r24, Y+43	; 0x2b
    300a:	9b a1       	ldd	r25, Y+35	; 0x23
    300c:	89 17       	cp	r24, r25
    300e:	29 f4       	brne	.+10     	; 0x301a <__vector_7+0x118>
    3010:	ec a5       	ldd	r30, Y+44	; 0x2c
    3012:	fc a1       	ldd	r31, Y+36	; 0x24
    3014:	ef 17       	cp	r30, r31
    3016:	09 f4       	brne	.+2      	; 0x301a <__vector_7+0x118>
    3018:	c9 c1       	rjmp	.+914    	; 0x33ac <__vector_7+0x4aa>
        {
            LOC_cyclesCounter++;
    301a:	80 91 b0 01 	lds	r24, 0x01B0
    301e:	8d 8b       	std	Y+21, r24	; 0x15
    3020:	90 91 b1 01 	lds	r25, 0x01B1
    3024:	9e 8b       	std	Y+22, r25	; 0x16
    3026:	e0 91 b2 01 	lds	r30, 0x01B2
    302a:	ef 8b       	std	Y+23, r30	; 0x17
    302c:	f0 91 b3 01 	lds	r31, 0x01B3
    3030:	f8 8f       	std	Y+24, r31	; 0x18
    3032:	80 91 b4 01 	lds	r24, 0x01B4
    3036:	89 8f       	std	Y+25, r24	; 0x19
    3038:	90 91 b5 01 	lds	r25, 0x01B5
    303c:	9a 8f       	std	Y+26, r25	; 0x1a
    303e:	e0 91 b6 01 	lds	r30, 0x01B6
    3042:	eb 8f       	std	Y+27, r30	; 0x1b
    3044:	f0 91 b7 01 	lds	r31, 0x01B7
    3048:	fc 8f       	std	Y+28, r31	; 0x1c
    304a:	81 e0       	ldi	r24, 0x01	; 1
    304c:	8d a7       	std	Y+45, r24	; 0x2d
    304e:	1e a6       	std	Y+46, r1	; 0x2e
    3050:	1f a6       	std	Y+47, r1	; 0x2f
    3052:	18 aa       	std	Y+48, r1	; 0x30
    3054:	19 aa       	std	Y+49, r1	; 0x31
    3056:	1a aa       	std	Y+50, r1	; 0x32
    3058:	1b aa       	std	Y+51, r1	; 0x33
    305a:	1c aa       	std	Y+52, r1	; 0x34
    305c:	9d 89       	ldd	r25, Y+21	; 0x15
    305e:	ed a5       	ldd	r30, Y+45	; 0x2d
    3060:	9e 0f       	add	r25, r30
    3062:	9d ab       	std	Y+53, r25	; 0x35
    3064:	f1 e0       	ldi	r31, 0x01	; 1
    3066:	fd af       	std	Y+61, r31	; 0x3d
    3068:	8d a9       	ldd	r24, Y+53	; 0x35
    306a:	9d 89       	ldd	r25, Y+21	; 0x15
    306c:	89 17       	cp	r24, r25
    306e:	08 f0       	brcs	.+2      	; 0x3072 <__vector_7+0x170>
    3070:	1d ae       	std	Y+61, r1	; 0x3d
    3072:	ee 89       	ldd	r30, Y+22	; 0x16
    3074:	fe a5       	ldd	r31, Y+46	; 0x2e
    3076:	ef 0f       	add	r30, r31
    3078:	ee ab       	std	Y+54, r30	; 0x36
    307a:	81 e0       	ldi	r24, 0x01	; 1
    307c:	8e af       	std	Y+62, r24	; 0x3e
    307e:	9e a9       	ldd	r25, Y+54	; 0x36
    3080:	ee 89       	ldd	r30, Y+22	; 0x16
    3082:	9e 17       	cp	r25, r30
    3084:	08 f0       	brcs	.+2      	; 0x3088 <__vector_7+0x186>
    3086:	1e ae       	std	Y+62, r1	; 0x3e
    3088:	fd ad       	ldd	r31, Y+61	; 0x3d
    308a:	8e a9       	ldd	r24, Y+54	; 0x36
    308c:	f8 0f       	add	r31, r24
    308e:	ff af       	std	Y+63, r31	; 0x3f
    3090:	91 e0       	ldi	r25, 0x01	; 1
    3092:	21 96       	adiw	r28, 0x01	; 1
    3094:	9f af       	std	Y+63, r25	; 0x3f
    3096:	21 97       	sbiw	r28, 0x01	; 1
    3098:	ef ad       	ldd	r30, Y+63	; 0x3f
    309a:	fe a9       	ldd	r31, Y+54	; 0x36
    309c:	ef 17       	cp	r30, r31
    309e:	18 f0       	brcs	.+6      	; 0x30a6 <__vector_7+0x1a4>
    30a0:	21 96       	adiw	r28, 0x01	; 1
    30a2:	1f ae       	std	Y+63, r1	; 0x3f
    30a4:	21 97       	sbiw	r28, 0x01	; 1
    30a6:	8e ad       	ldd	r24, Y+62	; 0x3e
    30a8:	21 96       	adiw	r28, 0x01	; 1
    30aa:	9f ad       	ldd	r25, Y+63	; 0x3f
    30ac:	21 97       	sbiw	r28, 0x01	; 1
    30ae:	89 2b       	or	r24, r25
    30b0:	8e af       	std	Y+62, r24	; 0x3e
    30b2:	ef ad       	ldd	r30, Y+63	; 0x3f
    30b4:	ee ab       	std	Y+54, r30	; 0x36
    30b6:	ff 89       	ldd	r31, Y+23	; 0x17
    30b8:	8f a5       	ldd	r24, Y+47	; 0x2f
    30ba:	f8 0f       	add	r31, r24
    30bc:	ff ab       	std	Y+55, r31	; 0x37
    30be:	91 e0       	ldi	r25, 0x01	; 1
    30c0:	22 96       	adiw	r28, 0x02	; 2
    30c2:	9f af       	std	Y+63, r25	; 0x3f
    30c4:	22 97       	sbiw	r28, 0x02	; 2
    30c6:	ef a9       	ldd	r30, Y+55	; 0x37
    30c8:	ff 89       	ldd	r31, Y+23	; 0x17
    30ca:	ef 17       	cp	r30, r31
    30cc:	18 f0       	brcs	.+6      	; 0x30d4 <__vector_7+0x1d2>
    30ce:	22 96       	adiw	r28, 0x02	; 2
    30d0:	1f ae       	std	Y+63, r1	; 0x3f
    30d2:	22 97       	sbiw	r28, 0x02	; 2
    30d4:	8e ad       	ldd	r24, Y+62	; 0x3e
    30d6:	9f a9       	ldd	r25, Y+55	; 0x37
    30d8:	89 0f       	add	r24, r25
    30da:	23 96       	adiw	r28, 0x03	; 3
    30dc:	8f af       	std	Y+63, r24	; 0x3f
    30de:	23 97       	sbiw	r28, 0x03	; 3
    30e0:	e1 e0       	ldi	r30, 0x01	; 1
    30e2:	24 96       	adiw	r28, 0x04	; 4
    30e4:	ef af       	std	Y+63, r30	; 0x3f
    30e6:	24 97       	sbiw	r28, 0x04	; 4
    30e8:	23 96       	adiw	r28, 0x03	; 3
    30ea:	ff ad       	ldd	r31, Y+63	; 0x3f
    30ec:	23 97       	sbiw	r28, 0x03	; 3
    30ee:	8f a9       	ldd	r24, Y+55	; 0x37
    30f0:	f8 17       	cp	r31, r24
    30f2:	18 f0       	brcs	.+6      	; 0x30fa <__vector_7+0x1f8>
    30f4:	24 96       	adiw	r28, 0x04	; 4
    30f6:	1f ae       	std	Y+63, r1	; 0x3f
    30f8:	24 97       	sbiw	r28, 0x04	; 4
    30fa:	22 96       	adiw	r28, 0x02	; 2
    30fc:	9f ad       	ldd	r25, Y+63	; 0x3f
    30fe:	22 97       	sbiw	r28, 0x02	; 2
    3100:	24 96       	adiw	r28, 0x04	; 4
    3102:	ef ad       	ldd	r30, Y+63	; 0x3f
    3104:	24 97       	sbiw	r28, 0x04	; 4
    3106:	9e 2b       	or	r25, r30
    3108:	22 96       	adiw	r28, 0x02	; 2
    310a:	9f af       	std	Y+63, r25	; 0x3f
    310c:	22 97       	sbiw	r28, 0x02	; 2
    310e:	23 96       	adiw	r28, 0x03	; 3
    3110:	ff ad       	ldd	r31, Y+63	; 0x3f
    3112:	23 97       	sbiw	r28, 0x03	; 3
    3114:	ff ab       	std	Y+55, r31	; 0x37
    3116:	88 8d       	ldd	r24, Y+24	; 0x18
    3118:	98 a9       	ldd	r25, Y+48	; 0x30
    311a:	89 0f       	add	r24, r25
    311c:	88 af       	std	Y+56, r24	; 0x38
    311e:	e1 e0       	ldi	r30, 0x01	; 1
    3120:	25 96       	adiw	r28, 0x05	; 5
    3122:	ef af       	std	Y+63, r30	; 0x3f
    3124:	25 97       	sbiw	r28, 0x05	; 5
    3126:	f8 ad       	ldd	r31, Y+56	; 0x38
    3128:	88 8d       	ldd	r24, Y+24	; 0x18
    312a:	f8 17       	cp	r31, r24
    312c:	18 f0       	brcs	.+6      	; 0x3134 <__vector_7+0x232>
    312e:	25 96       	adiw	r28, 0x05	; 5
    3130:	1f ae       	std	Y+63, r1	; 0x3f
    3132:	25 97       	sbiw	r28, 0x05	; 5
    3134:	22 96       	adiw	r28, 0x02	; 2
    3136:	9f ad       	ldd	r25, Y+63	; 0x3f
    3138:	22 97       	sbiw	r28, 0x02	; 2
    313a:	e8 ad       	ldd	r30, Y+56	; 0x38
    313c:	9e 0f       	add	r25, r30
    313e:	26 96       	adiw	r28, 0x06	; 6
    3140:	9f af       	std	Y+63, r25	; 0x3f
    3142:	26 97       	sbiw	r28, 0x06	; 6
    3144:	f1 e0       	ldi	r31, 0x01	; 1
    3146:	27 96       	adiw	r28, 0x07	; 7
    3148:	ff af       	std	Y+63, r31	; 0x3f
    314a:	27 97       	sbiw	r28, 0x07	; 7
    314c:	26 96       	adiw	r28, 0x06	; 6
    314e:	8f ad       	ldd	r24, Y+63	; 0x3f
    3150:	26 97       	sbiw	r28, 0x06	; 6
    3152:	98 ad       	ldd	r25, Y+56	; 0x38
    3154:	89 17       	cp	r24, r25
    3156:	18 f0       	brcs	.+6      	; 0x315e <__vector_7+0x25c>
    3158:	27 96       	adiw	r28, 0x07	; 7
    315a:	1f ae       	std	Y+63, r1	; 0x3f
    315c:	27 97       	sbiw	r28, 0x07	; 7
    315e:	25 96       	adiw	r28, 0x05	; 5
    3160:	ef ad       	ldd	r30, Y+63	; 0x3f
    3162:	25 97       	sbiw	r28, 0x05	; 5
    3164:	27 96       	adiw	r28, 0x07	; 7
    3166:	ff ad       	ldd	r31, Y+63	; 0x3f
    3168:	27 97       	sbiw	r28, 0x07	; 7
    316a:	ef 2b       	or	r30, r31
    316c:	25 96       	adiw	r28, 0x05	; 5
    316e:	ef af       	std	Y+63, r30	; 0x3f
    3170:	25 97       	sbiw	r28, 0x05	; 5
    3172:	26 96       	adiw	r28, 0x06	; 6
    3174:	8f ad       	ldd	r24, Y+63	; 0x3f
    3176:	26 97       	sbiw	r28, 0x06	; 6
    3178:	88 af       	std	Y+56, r24	; 0x38
    317a:	99 8d       	ldd	r25, Y+25	; 0x19
    317c:	e9 a9       	ldd	r30, Y+49	; 0x31
    317e:	9e 0f       	add	r25, r30
    3180:	99 af       	std	Y+57, r25	; 0x39
    3182:	f1 e0       	ldi	r31, 0x01	; 1
    3184:	28 96       	adiw	r28, 0x08	; 8
    3186:	ff af       	std	Y+63, r31	; 0x3f
    3188:	28 97       	sbiw	r28, 0x08	; 8
    318a:	89 ad       	ldd	r24, Y+57	; 0x39
    318c:	99 8d       	ldd	r25, Y+25	; 0x19
    318e:	89 17       	cp	r24, r25
    3190:	18 f0       	brcs	.+6      	; 0x3198 <__vector_7+0x296>
    3192:	28 96       	adiw	r28, 0x08	; 8
    3194:	1f ae       	std	Y+63, r1	; 0x3f
    3196:	28 97       	sbiw	r28, 0x08	; 8
    3198:	25 96       	adiw	r28, 0x05	; 5
    319a:	ef ad       	ldd	r30, Y+63	; 0x3f
    319c:	25 97       	sbiw	r28, 0x05	; 5
    319e:	f9 ad       	ldd	r31, Y+57	; 0x39
    31a0:	ef 0f       	add	r30, r31
    31a2:	29 96       	adiw	r28, 0x09	; 9
    31a4:	ef af       	std	Y+63, r30	; 0x3f
    31a6:	29 97       	sbiw	r28, 0x09	; 9
    31a8:	81 e0       	ldi	r24, 0x01	; 1
    31aa:	2a 96       	adiw	r28, 0x0a	; 10
    31ac:	8f af       	std	Y+63, r24	; 0x3f
    31ae:	2a 97       	sbiw	r28, 0x0a	; 10
    31b0:	29 96       	adiw	r28, 0x09	; 9
    31b2:	9f ad       	ldd	r25, Y+63	; 0x3f
    31b4:	29 97       	sbiw	r28, 0x09	; 9
    31b6:	e9 ad       	ldd	r30, Y+57	; 0x39
    31b8:	9e 17       	cp	r25, r30
    31ba:	18 f0       	brcs	.+6      	; 0x31c2 <__vector_7+0x2c0>
    31bc:	2a 96       	adiw	r28, 0x0a	; 10
    31be:	1f ae       	std	Y+63, r1	; 0x3f
    31c0:	2a 97       	sbiw	r28, 0x0a	; 10
    31c2:	28 96       	adiw	r28, 0x08	; 8
    31c4:	ff ad       	ldd	r31, Y+63	; 0x3f
    31c6:	28 97       	sbiw	r28, 0x08	; 8
    31c8:	2a 96       	adiw	r28, 0x0a	; 10
    31ca:	8f ad       	ldd	r24, Y+63	; 0x3f
    31cc:	2a 97       	sbiw	r28, 0x0a	; 10
    31ce:	f8 2b       	or	r31, r24
    31d0:	28 96       	adiw	r28, 0x08	; 8
    31d2:	ff af       	std	Y+63, r31	; 0x3f
    31d4:	28 97       	sbiw	r28, 0x08	; 8
    31d6:	29 96       	adiw	r28, 0x09	; 9
    31d8:	9f ad       	ldd	r25, Y+63	; 0x3f
    31da:	29 97       	sbiw	r28, 0x09	; 9
    31dc:	99 af       	std	Y+57, r25	; 0x39
    31de:	ea 8d       	ldd	r30, Y+26	; 0x1a
    31e0:	fa a9       	ldd	r31, Y+50	; 0x32
    31e2:	ef 0f       	add	r30, r31
    31e4:	ea af       	std	Y+58, r30	; 0x3a
    31e6:	81 e0       	ldi	r24, 0x01	; 1
    31e8:	2b 96       	adiw	r28, 0x0b	; 11
    31ea:	8f af       	std	Y+63, r24	; 0x3f
    31ec:	2b 97       	sbiw	r28, 0x0b	; 11
    31ee:	9a ad       	ldd	r25, Y+58	; 0x3a
    31f0:	ea 8d       	ldd	r30, Y+26	; 0x1a
    31f2:	9e 17       	cp	r25, r30
    31f4:	18 f0       	brcs	.+6      	; 0x31fc <__vector_7+0x2fa>
    31f6:	2b 96       	adiw	r28, 0x0b	; 11
    31f8:	1f ae       	std	Y+63, r1	; 0x3f
    31fa:	2b 97       	sbiw	r28, 0x0b	; 11
    31fc:	28 96       	adiw	r28, 0x08	; 8
    31fe:	ff ad       	ldd	r31, Y+63	; 0x3f
    3200:	28 97       	sbiw	r28, 0x08	; 8
    3202:	8a ad       	ldd	r24, Y+58	; 0x3a
    3204:	f8 0f       	add	r31, r24
    3206:	2c 96       	adiw	r28, 0x0c	; 12
    3208:	ff af       	std	Y+63, r31	; 0x3f
    320a:	2c 97       	sbiw	r28, 0x0c	; 12
    320c:	91 e0       	ldi	r25, 0x01	; 1
    320e:	2d 96       	adiw	r28, 0x0d	; 13
    3210:	9f af       	std	Y+63, r25	; 0x3f
    3212:	2d 97       	sbiw	r28, 0x0d	; 13
    3214:	2c 96       	adiw	r28, 0x0c	; 12
    3216:	ef ad       	ldd	r30, Y+63	; 0x3f
    3218:	2c 97       	sbiw	r28, 0x0c	; 12
    321a:	fa ad       	ldd	r31, Y+58	; 0x3a
    321c:	ef 17       	cp	r30, r31
    321e:	18 f0       	brcs	.+6      	; 0x3226 <__vector_7+0x324>
    3220:	2d 96       	adiw	r28, 0x0d	; 13
    3222:	1f ae       	std	Y+63, r1	; 0x3f
    3224:	2d 97       	sbiw	r28, 0x0d	; 13
    3226:	2b 96       	adiw	r28, 0x0b	; 11
    3228:	8f ad       	ldd	r24, Y+63	; 0x3f
    322a:	2b 97       	sbiw	r28, 0x0b	; 11
    322c:	2d 96       	adiw	r28, 0x0d	; 13
    322e:	9f ad       	ldd	r25, Y+63	; 0x3f
    3230:	2d 97       	sbiw	r28, 0x0d	; 13
    3232:	89 2b       	or	r24, r25
    3234:	2b 96       	adiw	r28, 0x0b	; 11
    3236:	8f af       	std	Y+63, r24	; 0x3f
    3238:	2b 97       	sbiw	r28, 0x0b	; 11
    323a:	2c 96       	adiw	r28, 0x0c	; 12
    323c:	ef ad       	ldd	r30, Y+63	; 0x3f
    323e:	2c 97       	sbiw	r28, 0x0c	; 12
    3240:	ea af       	std	Y+58, r30	; 0x3a
    3242:	fb 8d       	ldd	r31, Y+27	; 0x1b
    3244:	8b a9       	ldd	r24, Y+51	; 0x33
    3246:	f8 0f       	add	r31, r24
    3248:	fb af       	std	Y+59, r31	; 0x3b
    324a:	91 e0       	ldi	r25, 0x01	; 1
    324c:	2e 96       	adiw	r28, 0x0e	; 14
    324e:	9f af       	std	Y+63, r25	; 0x3f
    3250:	2e 97       	sbiw	r28, 0x0e	; 14
    3252:	eb ad       	ldd	r30, Y+59	; 0x3b
    3254:	fb 8d       	ldd	r31, Y+27	; 0x1b
    3256:	ef 17       	cp	r30, r31
    3258:	18 f0       	brcs	.+6      	; 0x3260 <__vector_7+0x35e>
    325a:	2e 96       	adiw	r28, 0x0e	; 14
    325c:	1f ae       	std	Y+63, r1	; 0x3f
    325e:	2e 97       	sbiw	r28, 0x0e	; 14
    3260:	2b 96       	adiw	r28, 0x0b	; 11
    3262:	8f ad       	ldd	r24, Y+63	; 0x3f
    3264:	2b 97       	sbiw	r28, 0x0b	; 11
    3266:	9b ad       	ldd	r25, Y+59	; 0x3b
    3268:	89 0f       	add	r24, r25
    326a:	2f 96       	adiw	r28, 0x0f	; 15
    326c:	8f af       	std	Y+63, r24	; 0x3f
    326e:	2f 97       	sbiw	r28, 0x0f	; 15
    3270:	e1 e0       	ldi	r30, 0x01	; 1
    3272:	60 96       	adiw	r28, 0x10	; 16
    3274:	ef af       	std	Y+63, r30	; 0x3f
    3276:	60 97       	sbiw	r28, 0x10	; 16
    3278:	2f 96       	adiw	r28, 0x0f	; 15
    327a:	ff ad       	ldd	r31, Y+63	; 0x3f
    327c:	2f 97       	sbiw	r28, 0x0f	; 15
    327e:	8b ad       	ldd	r24, Y+59	; 0x3b
    3280:	f8 17       	cp	r31, r24
    3282:	18 f0       	brcs	.+6      	; 0x328a <__vector_7+0x388>
    3284:	60 96       	adiw	r28, 0x10	; 16
    3286:	1f ae       	std	Y+63, r1	; 0x3f
    3288:	60 97       	sbiw	r28, 0x10	; 16
    328a:	2e 96       	adiw	r28, 0x0e	; 14
    328c:	9f ad       	ldd	r25, Y+63	; 0x3f
    328e:	2e 97       	sbiw	r28, 0x0e	; 14
    3290:	60 96       	adiw	r28, 0x10	; 16
    3292:	ef ad       	ldd	r30, Y+63	; 0x3f
    3294:	60 97       	sbiw	r28, 0x10	; 16
    3296:	9e 2b       	or	r25, r30
    3298:	2e 96       	adiw	r28, 0x0e	; 14
    329a:	9f af       	std	Y+63, r25	; 0x3f
    329c:	2e 97       	sbiw	r28, 0x0e	; 14
    329e:	2f 96       	adiw	r28, 0x0f	; 15
    32a0:	ff ad       	ldd	r31, Y+63	; 0x3f
    32a2:	2f 97       	sbiw	r28, 0x0f	; 15
    32a4:	fb af       	std	Y+59, r31	; 0x3b
    32a6:	8c 8d       	ldd	r24, Y+28	; 0x1c
    32a8:	9c a9       	ldd	r25, Y+52	; 0x34
    32aa:	89 0f       	add	r24, r25
    32ac:	8c af       	std	Y+60, r24	; 0x3c
    32ae:	2e 96       	adiw	r28, 0x0e	; 14
    32b0:	8f ad       	ldd	r24, Y+63	; 0x3f
    32b2:	2e 97       	sbiw	r28, 0x0e	; 14
    32b4:	ec ad       	ldd	r30, Y+60	; 0x3c
    32b6:	8e 0f       	add	r24, r30
    32b8:	8c af       	std	Y+60, r24	; 0x3c
    32ba:	2d a9       	ldd	r18, Y+53	; 0x35
    32bc:	3e a9       	ldd	r19, Y+54	; 0x36
    32be:	4f a9       	ldd	r20, Y+55	; 0x37
    32c0:	58 ad       	ldd	r21, Y+56	; 0x38
    32c2:	69 ad       	ldd	r22, Y+57	; 0x39
    32c4:	7a ad       	ldd	r23, Y+58	; 0x3a
    32c6:	8b ad       	ldd	r24, Y+59	; 0x3b
    32c8:	9c ad       	ldd	r25, Y+60	; 0x3c
    32ca:	20 93 b0 01 	sts	0x01B0, r18
    32ce:	30 93 b1 01 	sts	0x01B1, r19
    32d2:	40 93 b2 01 	sts	0x01B2, r20
    32d6:	50 93 b3 01 	sts	0x01B3, r21
    32da:	60 93 b4 01 	sts	0x01B4, r22
    32de:	70 93 b5 01 	sts	0x01B5, r23
    32e2:	80 93 b6 01 	sts	0x01B6, r24
    32e6:	90 93 b7 01 	sts	0x01B7, r25

            if(LOC_cyclesCounter == g_number_of_cycles)
    32ea:	f0 91 b0 01 	lds	r31, 0x01B0
    32ee:	fd 87       	std	Y+13, r31	; 0x0d
    32f0:	80 91 b1 01 	lds	r24, 0x01B1
    32f4:	8e 87       	std	Y+14, r24	; 0x0e
    32f6:	90 91 b2 01 	lds	r25, 0x01B2
    32fa:	9f 87       	std	Y+15, r25	; 0x0f
    32fc:	e0 91 b3 01 	lds	r30, 0x01B3
    3300:	e8 8b       	std	Y+16, r30	; 0x10
    3302:	f0 91 b4 01 	lds	r31, 0x01B4
    3306:	f9 8b       	std	Y+17, r31	; 0x11
    3308:	80 91 b5 01 	lds	r24, 0x01B5
    330c:	8a 8b       	std	Y+18, r24	; 0x12
    330e:	90 91 b6 01 	lds	r25, 0x01B6
    3312:	9b 8b       	std	Y+19, r25	; 0x13
    3314:	e0 91 b7 01 	lds	r30, 0x01B7
    3318:	ec 8b       	std	Y+20, r30	; 0x14
    331a:	f0 91 a4 01 	lds	r31, 0x01A4
    331e:	fd 83       	std	Y+5, r31	; 0x05
    3320:	80 91 a5 01 	lds	r24, 0x01A5
    3324:	8e 83       	std	Y+6, r24	; 0x06
    3326:	90 91 a6 01 	lds	r25, 0x01A6
    332a:	9f 83       	std	Y+7, r25	; 0x07
    332c:	e0 91 a7 01 	lds	r30, 0x01A7
    3330:	e8 87       	std	Y+8, r30	; 0x08
    3332:	f0 91 a8 01 	lds	r31, 0x01A8
    3336:	f9 87       	std	Y+9, r31	; 0x09
    3338:	80 91 a9 01 	lds	r24, 0x01A9
    333c:	8a 87       	std	Y+10, r24	; 0x0a
    333e:	90 91 aa 01 	lds	r25, 0x01AA
    3342:	9b 87       	std	Y+11, r25	; 0x0b
    3344:	e0 91 ab 01 	lds	r30, 0x01AB
    3348:	ec 87       	std	Y+12, r30	; 0x0c
    334a:	fd 85       	ldd	r31, Y+13	; 0x0d
    334c:	8d 81       	ldd	r24, Y+5	; 0x05
    334e:	f8 17       	cp	r31, r24
    3350:	09 f0       	breq	.+2      	; 0x3354 <__vector_7+0x452>
    3352:	71 c0       	rjmp	.+226    	; 0x3436 <__vector_7+0x534>
    3354:	9e 85       	ldd	r25, Y+14	; 0x0e
    3356:	ee 81       	ldd	r30, Y+6	; 0x06
    3358:	9e 17       	cp	r25, r30
    335a:	09 f0       	breq	.+2      	; 0x335e <__vector_7+0x45c>
    335c:	6c c0       	rjmp	.+216    	; 0x3436 <__vector_7+0x534>
    335e:	ff 85       	ldd	r31, Y+15	; 0x0f
    3360:	8f 81       	ldd	r24, Y+7	; 0x07
    3362:	f8 17       	cp	r31, r24
    3364:	09 f0       	breq	.+2      	; 0x3368 <__vector_7+0x466>
    3366:	67 c0       	rjmp	.+206    	; 0x3436 <__vector_7+0x534>
    3368:	98 89       	ldd	r25, Y+16	; 0x10
    336a:	e8 85       	ldd	r30, Y+8	; 0x08
    336c:	9e 17       	cp	r25, r30
    336e:	09 f0       	breq	.+2      	; 0x3372 <__vector_7+0x470>
    3370:	62 c0       	rjmp	.+196    	; 0x3436 <__vector_7+0x534>
    3372:	f9 89       	ldd	r31, Y+17	; 0x11
    3374:	89 85       	ldd	r24, Y+9	; 0x09
    3376:	f8 17       	cp	r31, r24
    3378:	09 f0       	breq	.+2      	; 0x337c <__vector_7+0x47a>
    337a:	5d c0       	rjmp	.+186    	; 0x3436 <__vector_7+0x534>
    337c:	9a 89       	ldd	r25, Y+18	; 0x12
    337e:	ea 85       	ldd	r30, Y+10	; 0x0a
    3380:	9e 17       	cp	r25, r30
    3382:	09 f0       	breq	.+2      	; 0x3386 <__vector_7+0x484>
    3384:	58 c0       	rjmp	.+176    	; 0x3436 <__vector_7+0x534>
    3386:	fb 89       	ldd	r31, Y+19	; 0x13
    3388:	8b 85       	ldd	r24, Y+11	; 0x0b
    338a:	f8 17       	cp	r31, r24
    338c:	09 f0       	breq	.+2      	; 0x3390 <__vector_7+0x48e>
    338e:	53 c0       	rjmp	.+166    	; 0x3436 <__vector_7+0x534>
    3390:	9c 89       	ldd	r25, Y+20	; 0x14
    3392:	ec 85       	ldd	r30, Y+12	; 0x0c
    3394:	9e 17       	cp	r25, r30
    3396:	09 f0       	breq	.+2      	; 0x339a <__vector_7+0x498>
    3398:	4e c0       	rjmp	.+156    	; 0x3436 <__vector_7+0x534>
            {
            	OCR1A = g_compare_value;
    339a:	ea e4       	ldi	r30, 0x4A	; 74
    339c:	f0 e0       	ldi	r31, 0x00	; 0
    339e:	80 91 ae 01 	lds	r24, 0x01AE
    33a2:	90 91 af 01 	lds	r25, 0x01AF
    33a6:	91 83       	std	Z+1, r25	; 0x01
    33a8:	80 83       	st	Z, r24
    33aa:	45 c0       	rjmp	.+138    	; 0x3436 <__vector_7+0x534>
            }
        }

        else
        {
            LOC_cyclesCounter = 0;
    33ac:	10 92 b0 01 	sts	0x01B0, r1
    33b0:	10 92 b1 01 	sts	0x01B1, r1
    33b4:	10 92 b2 01 	sts	0x01B2, r1
    33b8:	10 92 b3 01 	sts	0x01B3, r1
    33bc:	10 92 b4 01 	sts	0x01B4, r1
    33c0:	10 92 b5 01 	sts	0x01B5, r1
    33c4:	10 92 b6 01 	sts	0x01B6, r1
    33c8:	10 92 b7 01 	sts	0x01B7, r1
            (*(g_callBackFunctionsArray + TIMER1_CTC_INTERRUPT_ID))();
    33cc:	e2 ea       	ldi	r30, 0xA2	; 162
    33ce:	f1 e0       	ldi	r31, 0x01	; 1
    33d0:	01 90       	ld	r0, Z+
    33d2:	f0 81       	ld	r31, Z
    33d4:	e0 2d       	mov	r30, r0
    33d6:	09 95       	icall
            OCR1A = (g_number_of_cycles == 0) ? g_compare_value : (TIMER1_OVERFLOW_VALUE - 1);
    33d8:	8a e4       	ldi	r24, 0x4A	; 74
    33da:	90 e0       	ldi	r25, 0x00	; 0
    33dc:	9c 83       	std	Y+4, r25	; 0x04
    33de:	8b 83       	std	Y+3, r24	; 0x03
    33e0:	20 91 a4 01 	lds	r18, 0x01A4
    33e4:	30 91 a5 01 	lds	r19, 0x01A5
    33e8:	40 91 a6 01 	lds	r20, 0x01A6
    33ec:	50 91 a7 01 	lds	r21, 0x01A7
    33f0:	60 91 a8 01 	lds	r22, 0x01A8
    33f4:	70 91 a9 01 	lds	r23, 0x01A9
    33f8:	80 91 aa 01 	lds	r24, 0x01AA
    33fc:	90 91 ab 01 	lds	r25, 0x01AB
    3400:	e2 2f       	mov	r30, r18
    3402:	e3 2b       	or	r30, r19
    3404:	e4 2b       	or	r30, r20
    3406:	e5 2b       	or	r30, r21
    3408:	e6 2b       	or	r30, r22
    340a:	e7 2b       	or	r30, r23
    340c:	e8 2b       	or	r30, r24
    340e:	e9 2b       	or	r30, r25
    3410:	ee 23       	and	r30, r30
    3412:	39 f4       	brne	.+14     	; 0x3422 <__vector_7+0x520>
    3414:	e0 91 ae 01 	lds	r30, 0x01AE
    3418:	f0 91 af 01 	lds	r31, 0x01AF
    341c:	fa 83       	std	Y+2, r31	; 0x02
    341e:	e9 83       	std	Y+1, r30	; 0x01
    3420:	04 c0       	rjmp	.+8      	; 0x342a <__vector_7+0x528>
    3422:	8f ef       	ldi	r24, 0xFF	; 255
    3424:	9f ef       	ldi	r25, 0xFF	; 255
    3426:	9a 83       	std	Y+2, r25	; 0x02
    3428:	89 83       	std	Y+1, r24	; 0x01
    342a:	89 81       	ldd	r24, Y+1	; 0x01
    342c:	9a 81       	ldd	r25, Y+2	; 0x02
    342e:	eb 81       	ldd	r30, Y+3	; 0x03
    3430:	fc 81       	ldd	r31, Y+4	; 0x04
    3432:	91 83       	std	Z+1, r25	; 0x01
    3434:	80 83       	st	Z, r24

    else
    {
    	/* Do Nothing. */
    }
}
    3436:	c1 5b       	subi	r28, 0xB1	; 177
    3438:	df 4f       	sbci	r29, 0xFF	; 255
    343a:	de bf       	out	0x3e, r29	; 62
    343c:	cd bf       	out	0x3d, r28	; 61
    343e:	cf 91       	pop	r28
    3440:	df 91       	pop	r29
    3442:	ff 91       	pop	r31
    3444:	ef 91       	pop	r30
    3446:	bf 91       	pop	r27
    3448:	af 91       	pop	r26
    344a:	9f 91       	pop	r25
    344c:	8f 91       	pop	r24
    344e:	7f 91       	pop	r23
    3450:	6f 91       	pop	r22
    3452:	5f 91       	pop	r21
    3454:	4f 91       	pop	r20
    3456:	3f 91       	pop	r19
    3458:	2f 91       	pop	r18
    345a:	0f 90       	pop	r0
    345c:	0f be       	out	0x3f, r0	; 63
    345e:	0f 90       	pop	r0
    3460:	1f 90       	pop	r1
    3462:	18 95       	reti

00003464 <__vector_9>:
 * [Arguments]     : The function takes no arguments.
 * [return]        : The function returns void.
 ====================================================================================================================*/
void __vector_9(void) __attribute__((signal));
void __vector_9(void)
{
    3464:	1f 92       	push	r1
    3466:	0f 92       	push	r0
    3468:	0f b6       	in	r0, 0x3f	; 63
    346a:	0f 92       	push	r0
    346c:	11 24       	eor	r1, r1
    346e:	2f 93       	push	r18
    3470:	3f 93       	push	r19
    3472:	4f 93       	push	r20
    3474:	5f 93       	push	r21
    3476:	6f 93       	push	r22
    3478:	7f 93       	push	r23
    347a:	8f 93       	push	r24
    347c:	9f 93       	push	r25
    347e:	af 93       	push	r26
    3480:	bf 93       	push	r27
    3482:	ef 93       	push	r30
    3484:	ff 93       	push	r31
    3486:	df 93       	push	r29
    3488:	cf 93       	push	r28
    348a:	cd b7       	in	r28, 0x3d	; 61
    348c:	de b7       	in	r29, 0x3e	; 62
    348e:	cf 54       	subi	r28, 0x4F	; 79
    3490:	d0 40       	sbci	r29, 0x00	; 0
    3492:	de bf       	out	0x3e, r29	; 62
    3494:	cd bf       	out	0x3d, r28	; 61
    if(*(g_callBackFunctionsArray + TIMER1_OVF_INTERRUPT_ID) != NULL_PTR)
    3496:	80 91 a0 01 	lds	r24, 0x01A0
    349a:	90 91 a1 01 	lds	r25, 0x01A1
    349e:	00 97       	sbiw	r24, 0x00	; 0
    34a0:	09 f4       	brne	.+2      	; 0x34a4 <__vector_9+0x40>
    34a2:	77 c2       	rjmp	.+1262   	; 0x3992 <__vector_9+0x52e>
    {
        static uint64 LOC_cyclesCounter = 0;

        if((g_number_of_cycles != 0) && (LOC_cyclesCounter != g_number_of_cycles))
    34a4:	20 91 a4 01 	lds	r18, 0x01A4
    34a8:	30 91 a5 01 	lds	r19, 0x01A5
    34ac:	40 91 a6 01 	lds	r20, 0x01A6
    34b0:	50 91 a7 01 	lds	r21, 0x01A7
    34b4:	60 91 a8 01 	lds	r22, 0x01A8
    34b8:	70 91 a9 01 	lds	r23, 0x01A9
    34bc:	80 91 aa 01 	lds	r24, 0x01AA
    34c0:	90 91 ab 01 	lds	r25, 0x01AB
    34c4:	e2 2f       	mov	r30, r18
    34c6:	e3 2b       	or	r30, r19
    34c8:	e4 2b       	or	r30, r20
    34ca:	e5 2b       	or	r30, r21
    34cc:	e6 2b       	or	r30, r22
    34ce:	e7 2b       	or	r30, r23
    34d0:	e8 2b       	or	r30, r24
    34d2:	e9 2b       	or	r30, r25
    34d4:	ee 23       	and	r30, r30
    34d6:	09 f4       	brne	.+2      	; 0x34da <__vector_9+0x76>
    34d8:	1a c2       	rjmp	.+1076   	; 0x390e <__vector_9+0x4aa>
    34da:	80 91 b8 01 	lds	r24, 0x01B8
    34de:	8d a3       	std	Y+37, r24	; 0x25
    34e0:	90 91 b9 01 	lds	r25, 0x01B9
    34e4:	9e a3       	std	Y+38, r25	; 0x26
    34e6:	e0 91 ba 01 	lds	r30, 0x01BA
    34ea:	ef a3       	std	Y+39, r30	; 0x27
    34ec:	f0 91 bb 01 	lds	r31, 0x01BB
    34f0:	f8 a7       	std	Y+40, r31	; 0x28
    34f2:	80 91 bc 01 	lds	r24, 0x01BC
    34f6:	89 a7       	std	Y+41, r24	; 0x29
    34f8:	90 91 bd 01 	lds	r25, 0x01BD
    34fc:	9a a7       	std	Y+42, r25	; 0x2a
    34fe:	e0 91 be 01 	lds	r30, 0x01BE
    3502:	eb a7       	std	Y+43, r30	; 0x2b
    3504:	f0 91 bf 01 	lds	r31, 0x01BF
    3508:	fc a7       	std	Y+44, r31	; 0x2c
    350a:	80 91 a4 01 	lds	r24, 0x01A4
    350e:	8d 8f       	std	Y+29, r24	; 0x1d
    3510:	90 91 a5 01 	lds	r25, 0x01A5
    3514:	9e 8f       	std	Y+30, r25	; 0x1e
    3516:	e0 91 a6 01 	lds	r30, 0x01A6
    351a:	ef 8f       	std	Y+31, r30	; 0x1f
    351c:	f0 91 a7 01 	lds	r31, 0x01A7
    3520:	f8 a3       	std	Y+32, r31	; 0x20
    3522:	80 91 a8 01 	lds	r24, 0x01A8
    3526:	89 a3       	std	Y+33, r24	; 0x21
    3528:	90 91 a9 01 	lds	r25, 0x01A9
    352c:	9a a3       	std	Y+34, r25	; 0x22
    352e:	e0 91 aa 01 	lds	r30, 0x01AA
    3532:	eb a3       	std	Y+35, r30	; 0x23
    3534:	f0 91 ab 01 	lds	r31, 0x01AB
    3538:	fc a3       	std	Y+36, r31	; 0x24
    353a:	8d a1       	ldd	r24, Y+37	; 0x25
    353c:	9d 8d       	ldd	r25, Y+29	; 0x1d
    353e:	89 17       	cp	r24, r25
    3540:	e9 f4       	brne	.+58     	; 0x357c <__vector_9+0x118>
    3542:	ee a1       	ldd	r30, Y+38	; 0x26
    3544:	fe 8d       	ldd	r31, Y+30	; 0x1e
    3546:	ef 17       	cp	r30, r31
    3548:	c9 f4       	brne	.+50     	; 0x357c <__vector_9+0x118>
    354a:	8f a1       	ldd	r24, Y+39	; 0x27
    354c:	9f 8d       	ldd	r25, Y+31	; 0x1f
    354e:	89 17       	cp	r24, r25
    3550:	a9 f4       	brne	.+42     	; 0x357c <__vector_9+0x118>
    3552:	e8 a5       	ldd	r30, Y+40	; 0x28
    3554:	f8 a1       	ldd	r31, Y+32	; 0x20
    3556:	ef 17       	cp	r30, r31
    3558:	89 f4       	brne	.+34     	; 0x357c <__vector_9+0x118>
    355a:	89 a5       	ldd	r24, Y+41	; 0x29
    355c:	99 a1       	ldd	r25, Y+33	; 0x21
    355e:	89 17       	cp	r24, r25
    3560:	69 f4       	brne	.+26     	; 0x357c <__vector_9+0x118>
    3562:	ea a5       	ldd	r30, Y+42	; 0x2a
    3564:	fa a1       	ldd	r31, Y+34	; 0x22
    3566:	ef 17       	cp	r30, r31
    3568:	49 f4       	brne	.+18     	; 0x357c <__vector_9+0x118>
    356a:	8b a5       	ldd	r24, Y+43	; 0x2b
    356c:	9b a1       	ldd	r25, Y+35	; 0x23
    356e:	89 17       	cp	r24, r25
    3570:	29 f4       	brne	.+10     	; 0x357c <__vector_9+0x118>
    3572:	ec a5       	ldd	r30, Y+44	; 0x2c
    3574:	fc a1       	ldd	r31, Y+36	; 0x24
    3576:	ef 17       	cp	r30, r31
    3578:	09 f4       	brne	.+2      	; 0x357c <__vector_9+0x118>
    357a:	c9 c1       	rjmp	.+914    	; 0x390e <__vector_9+0x4aa>
        {
            LOC_cyclesCounter++;
    357c:	80 91 b8 01 	lds	r24, 0x01B8
    3580:	8d 8b       	std	Y+21, r24	; 0x15
    3582:	90 91 b9 01 	lds	r25, 0x01B9
    3586:	9e 8b       	std	Y+22, r25	; 0x16
    3588:	e0 91 ba 01 	lds	r30, 0x01BA
    358c:	ef 8b       	std	Y+23, r30	; 0x17
    358e:	f0 91 bb 01 	lds	r31, 0x01BB
    3592:	f8 8f       	std	Y+24, r31	; 0x18
    3594:	80 91 bc 01 	lds	r24, 0x01BC
    3598:	89 8f       	std	Y+25, r24	; 0x19
    359a:	90 91 bd 01 	lds	r25, 0x01BD
    359e:	9a 8f       	std	Y+26, r25	; 0x1a
    35a0:	e0 91 be 01 	lds	r30, 0x01BE
    35a4:	eb 8f       	std	Y+27, r30	; 0x1b
    35a6:	f0 91 bf 01 	lds	r31, 0x01BF
    35aa:	fc 8f       	std	Y+28, r31	; 0x1c
    35ac:	81 e0       	ldi	r24, 0x01	; 1
    35ae:	8d a7       	std	Y+45, r24	; 0x2d
    35b0:	1e a6       	std	Y+46, r1	; 0x2e
    35b2:	1f a6       	std	Y+47, r1	; 0x2f
    35b4:	18 aa       	std	Y+48, r1	; 0x30
    35b6:	19 aa       	std	Y+49, r1	; 0x31
    35b8:	1a aa       	std	Y+50, r1	; 0x32
    35ba:	1b aa       	std	Y+51, r1	; 0x33
    35bc:	1c aa       	std	Y+52, r1	; 0x34
    35be:	9d 89       	ldd	r25, Y+21	; 0x15
    35c0:	ed a5       	ldd	r30, Y+45	; 0x2d
    35c2:	9e 0f       	add	r25, r30
    35c4:	9d ab       	std	Y+53, r25	; 0x35
    35c6:	f1 e0       	ldi	r31, 0x01	; 1
    35c8:	fd af       	std	Y+61, r31	; 0x3d
    35ca:	8d a9       	ldd	r24, Y+53	; 0x35
    35cc:	9d 89       	ldd	r25, Y+21	; 0x15
    35ce:	89 17       	cp	r24, r25
    35d0:	08 f0       	brcs	.+2      	; 0x35d4 <__vector_9+0x170>
    35d2:	1d ae       	std	Y+61, r1	; 0x3d
    35d4:	ee 89       	ldd	r30, Y+22	; 0x16
    35d6:	fe a5       	ldd	r31, Y+46	; 0x2e
    35d8:	ef 0f       	add	r30, r31
    35da:	ee ab       	std	Y+54, r30	; 0x36
    35dc:	81 e0       	ldi	r24, 0x01	; 1
    35de:	8e af       	std	Y+62, r24	; 0x3e
    35e0:	9e a9       	ldd	r25, Y+54	; 0x36
    35e2:	ee 89       	ldd	r30, Y+22	; 0x16
    35e4:	9e 17       	cp	r25, r30
    35e6:	08 f0       	brcs	.+2      	; 0x35ea <__vector_9+0x186>
    35e8:	1e ae       	std	Y+62, r1	; 0x3e
    35ea:	fd ad       	ldd	r31, Y+61	; 0x3d
    35ec:	8e a9       	ldd	r24, Y+54	; 0x36
    35ee:	f8 0f       	add	r31, r24
    35f0:	ff af       	std	Y+63, r31	; 0x3f
    35f2:	91 e0       	ldi	r25, 0x01	; 1
    35f4:	21 96       	adiw	r28, 0x01	; 1
    35f6:	9f af       	std	Y+63, r25	; 0x3f
    35f8:	21 97       	sbiw	r28, 0x01	; 1
    35fa:	ef ad       	ldd	r30, Y+63	; 0x3f
    35fc:	fe a9       	ldd	r31, Y+54	; 0x36
    35fe:	ef 17       	cp	r30, r31
    3600:	18 f0       	brcs	.+6      	; 0x3608 <__vector_9+0x1a4>
    3602:	21 96       	adiw	r28, 0x01	; 1
    3604:	1f ae       	std	Y+63, r1	; 0x3f
    3606:	21 97       	sbiw	r28, 0x01	; 1
    3608:	8e ad       	ldd	r24, Y+62	; 0x3e
    360a:	21 96       	adiw	r28, 0x01	; 1
    360c:	9f ad       	ldd	r25, Y+63	; 0x3f
    360e:	21 97       	sbiw	r28, 0x01	; 1
    3610:	89 2b       	or	r24, r25
    3612:	8e af       	std	Y+62, r24	; 0x3e
    3614:	ef ad       	ldd	r30, Y+63	; 0x3f
    3616:	ee ab       	std	Y+54, r30	; 0x36
    3618:	ff 89       	ldd	r31, Y+23	; 0x17
    361a:	8f a5       	ldd	r24, Y+47	; 0x2f
    361c:	f8 0f       	add	r31, r24
    361e:	ff ab       	std	Y+55, r31	; 0x37
    3620:	91 e0       	ldi	r25, 0x01	; 1
    3622:	22 96       	adiw	r28, 0x02	; 2
    3624:	9f af       	std	Y+63, r25	; 0x3f
    3626:	22 97       	sbiw	r28, 0x02	; 2
    3628:	ef a9       	ldd	r30, Y+55	; 0x37
    362a:	ff 89       	ldd	r31, Y+23	; 0x17
    362c:	ef 17       	cp	r30, r31
    362e:	18 f0       	brcs	.+6      	; 0x3636 <__vector_9+0x1d2>
    3630:	22 96       	adiw	r28, 0x02	; 2
    3632:	1f ae       	std	Y+63, r1	; 0x3f
    3634:	22 97       	sbiw	r28, 0x02	; 2
    3636:	8e ad       	ldd	r24, Y+62	; 0x3e
    3638:	9f a9       	ldd	r25, Y+55	; 0x37
    363a:	89 0f       	add	r24, r25
    363c:	23 96       	adiw	r28, 0x03	; 3
    363e:	8f af       	std	Y+63, r24	; 0x3f
    3640:	23 97       	sbiw	r28, 0x03	; 3
    3642:	e1 e0       	ldi	r30, 0x01	; 1
    3644:	24 96       	adiw	r28, 0x04	; 4
    3646:	ef af       	std	Y+63, r30	; 0x3f
    3648:	24 97       	sbiw	r28, 0x04	; 4
    364a:	23 96       	adiw	r28, 0x03	; 3
    364c:	ff ad       	ldd	r31, Y+63	; 0x3f
    364e:	23 97       	sbiw	r28, 0x03	; 3
    3650:	8f a9       	ldd	r24, Y+55	; 0x37
    3652:	f8 17       	cp	r31, r24
    3654:	18 f0       	brcs	.+6      	; 0x365c <__vector_9+0x1f8>
    3656:	24 96       	adiw	r28, 0x04	; 4
    3658:	1f ae       	std	Y+63, r1	; 0x3f
    365a:	24 97       	sbiw	r28, 0x04	; 4
    365c:	22 96       	adiw	r28, 0x02	; 2
    365e:	9f ad       	ldd	r25, Y+63	; 0x3f
    3660:	22 97       	sbiw	r28, 0x02	; 2
    3662:	24 96       	adiw	r28, 0x04	; 4
    3664:	ef ad       	ldd	r30, Y+63	; 0x3f
    3666:	24 97       	sbiw	r28, 0x04	; 4
    3668:	9e 2b       	or	r25, r30
    366a:	22 96       	adiw	r28, 0x02	; 2
    366c:	9f af       	std	Y+63, r25	; 0x3f
    366e:	22 97       	sbiw	r28, 0x02	; 2
    3670:	23 96       	adiw	r28, 0x03	; 3
    3672:	ff ad       	ldd	r31, Y+63	; 0x3f
    3674:	23 97       	sbiw	r28, 0x03	; 3
    3676:	ff ab       	std	Y+55, r31	; 0x37
    3678:	88 8d       	ldd	r24, Y+24	; 0x18
    367a:	98 a9       	ldd	r25, Y+48	; 0x30
    367c:	89 0f       	add	r24, r25
    367e:	88 af       	std	Y+56, r24	; 0x38
    3680:	e1 e0       	ldi	r30, 0x01	; 1
    3682:	25 96       	adiw	r28, 0x05	; 5
    3684:	ef af       	std	Y+63, r30	; 0x3f
    3686:	25 97       	sbiw	r28, 0x05	; 5
    3688:	f8 ad       	ldd	r31, Y+56	; 0x38
    368a:	88 8d       	ldd	r24, Y+24	; 0x18
    368c:	f8 17       	cp	r31, r24
    368e:	18 f0       	brcs	.+6      	; 0x3696 <__vector_9+0x232>
    3690:	25 96       	adiw	r28, 0x05	; 5
    3692:	1f ae       	std	Y+63, r1	; 0x3f
    3694:	25 97       	sbiw	r28, 0x05	; 5
    3696:	22 96       	adiw	r28, 0x02	; 2
    3698:	9f ad       	ldd	r25, Y+63	; 0x3f
    369a:	22 97       	sbiw	r28, 0x02	; 2
    369c:	e8 ad       	ldd	r30, Y+56	; 0x38
    369e:	9e 0f       	add	r25, r30
    36a0:	26 96       	adiw	r28, 0x06	; 6
    36a2:	9f af       	std	Y+63, r25	; 0x3f
    36a4:	26 97       	sbiw	r28, 0x06	; 6
    36a6:	f1 e0       	ldi	r31, 0x01	; 1
    36a8:	27 96       	adiw	r28, 0x07	; 7
    36aa:	ff af       	std	Y+63, r31	; 0x3f
    36ac:	27 97       	sbiw	r28, 0x07	; 7
    36ae:	26 96       	adiw	r28, 0x06	; 6
    36b0:	8f ad       	ldd	r24, Y+63	; 0x3f
    36b2:	26 97       	sbiw	r28, 0x06	; 6
    36b4:	98 ad       	ldd	r25, Y+56	; 0x38
    36b6:	89 17       	cp	r24, r25
    36b8:	18 f0       	brcs	.+6      	; 0x36c0 <__vector_9+0x25c>
    36ba:	27 96       	adiw	r28, 0x07	; 7
    36bc:	1f ae       	std	Y+63, r1	; 0x3f
    36be:	27 97       	sbiw	r28, 0x07	; 7
    36c0:	25 96       	adiw	r28, 0x05	; 5
    36c2:	ef ad       	ldd	r30, Y+63	; 0x3f
    36c4:	25 97       	sbiw	r28, 0x05	; 5
    36c6:	27 96       	adiw	r28, 0x07	; 7
    36c8:	ff ad       	ldd	r31, Y+63	; 0x3f
    36ca:	27 97       	sbiw	r28, 0x07	; 7
    36cc:	ef 2b       	or	r30, r31
    36ce:	25 96       	adiw	r28, 0x05	; 5
    36d0:	ef af       	std	Y+63, r30	; 0x3f
    36d2:	25 97       	sbiw	r28, 0x05	; 5
    36d4:	26 96       	adiw	r28, 0x06	; 6
    36d6:	8f ad       	ldd	r24, Y+63	; 0x3f
    36d8:	26 97       	sbiw	r28, 0x06	; 6
    36da:	88 af       	std	Y+56, r24	; 0x38
    36dc:	99 8d       	ldd	r25, Y+25	; 0x19
    36de:	e9 a9       	ldd	r30, Y+49	; 0x31
    36e0:	9e 0f       	add	r25, r30
    36e2:	99 af       	std	Y+57, r25	; 0x39
    36e4:	f1 e0       	ldi	r31, 0x01	; 1
    36e6:	28 96       	adiw	r28, 0x08	; 8
    36e8:	ff af       	std	Y+63, r31	; 0x3f
    36ea:	28 97       	sbiw	r28, 0x08	; 8
    36ec:	89 ad       	ldd	r24, Y+57	; 0x39
    36ee:	99 8d       	ldd	r25, Y+25	; 0x19
    36f0:	89 17       	cp	r24, r25
    36f2:	18 f0       	brcs	.+6      	; 0x36fa <__vector_9+0x296>
    36f4:	28 96       	adiw	r28, 0x08	; 8
    36f6:	1f ae       	std	Y+63, r1	; 0x3f
    36f8:	28 97       	sbiw	r28, 0x08	; 8
    36fa:	25 96       	adiw	r28, 0x05	; 5
    36fc:	ef ad       	ldd	r30, Y+63	; 0x3f
    36fe:	25 97       	sbiw	r28, 0x05	; 5
    3700:	f9 ad       	ldd	r31, Y+57	; 0x39
    3702:	ef 0f       	add	r30, r31
    3704:	29 96       	adiw	r28, 0x09	; 9
    3706:	ef af       	std	Y+63, r30	; 0x3f
    3708:	29 97       	sbiw	r28, 0x09	; 9
    370a:	81 e0       	ldi	r24, 0x01	; 1
    370c:	2a 96       	adiw	r28, 0x0a	; 10
    370e:	8f af       	std	Y+63, r24	; 0x3f
    3710:	2a 97       	sbiw	r28, 0x0a	; 10
    3712:	29 96       	adiw	r28, 0x09	; 9
    3714:	9f ad       	ldd	r25, Y+63	; 0x3f
    3716:	29 97       	sbiw	r28, 0x09	; 9
    3718:	e9 ad       	ldd	r30, Y+57	; 0x39
    371a:	9e 17       	cp	r25, r30
    371c:	18 f0       	brcs	.+6      	; 0x3724 <__vector_9+0x2c0>
    371e:	2a 96       	adiw	r28, 0x0a	; 10
    3720:	1f ae       	std	Y+63, r1	; 0x3f
    3722:	2a 97       	sbiw	r28, 0x0a	; 10
    3724:	28 96       	adiw	r28, 0x08	; 8
    3726:	ff ad       	ldd	r31, Y+63	; 0x3f
    3728:	28 97       	sbiw	r28, 0x08	; 8
    372a:	2a 96       	adiw	r28, 0x0a	; 10
    372c:	8f ad       	ldd	r24, Y+63	; 0x3f
    372e:	2a 97       	sbiw	r28, 0x0a	; 10
    3730:	f8 2b       	or	r31, r24
    3732:	28 96       	adiw	r28, 0x08	; 8
    3734:	ff af       	std	Y+63, r31	; 0x3f
    3736:	28 97       	sbiw	r28, 0x08	; 8
    3738:	29 96       	adiw	r28, 0x09	; 9
    373a:	9f ad       	ldd	r25, Y+63	; 0x3f
    373c:	29 97       	sbiw	r28, 0x09	; 9
    373e:	99 af       	std	Y+57, r25	; 0x39
    3740:	ea 8d       	ldd	r30, Y+26	; 0x1a
    3742:	fa a9       	ldd	r31, Y+50	; 0x32
    3744:	ef 0f       	add	r30, r31
    3746:	ea af       	std	Y+58, r30	; 0x3a
    3748:	81 e0       	ldi	r24, 0x01	; 1
    374a:	2b 96       	adiw	r28, 0x0b	; 11
    374c:	8f af       	std	Y+63, r24	; 0x3f
    374e:	2b 97       	sbiw	r28, 0x0b	; 11
    3750:	9a ad       	ldd	r25, Y+58	; 0x3a
    3752:	ea 8d       	ldd	r30, Y+26	; 0x1a
    3754:	9e 17       	cp	r25, r30
    3756:	18 f0       	brcs	.+6      	; 0x375e <__vector_9+0x2fa>
    3758:	2b 96       	adiw	r28, 0x0b	; 11
    375a:	1f ae       	std	Y+63, r1	; 0x3f
    375c:	2b 97       	sbiw	r28, 0x0b	; 11
    375e:	28 96       	adiw	r28, 0x08	; 8
    3760:	ff ad       	ldd	r31, Y+63	; 0x3f
    3762:	28 97       	sbiw	r28, 0x08	; 8
    3764:	8a ad       	ldd	r24, Y+58	; 0x3a
    3766:	f8 0f       	add	r31, r24
    3768:	2c 96       	adiw	r28, 0x0c	; 12
    376a:	ff af       	std	Y+63, r31	; 0x3f
    376c:	2c 97       	sbiw	r28, 0x0c	; 12
    376e:	91 e0       	ldi	r25, 0x01	; 1
    3770:	2d 96       	adiw	r28, 0x0d	; 13
    3772:	9f af       	std	Y+63, r25	; 0x3f
    3774:	2d 97       	sbiw	r28, 0x0d	; 13
    3776:	2c 96       	adiw	r28, 0x0c	; 12
    3778:	ef ad       	ldd	r30, Y+63	; 0x3f
    377a:	2c 97       	sbiw	r28, 0x0c	; 12
    377c:	fa ad       	ldd	r31, Y+58	; 0x3a
    377e:	ef 17       	cp	r30, r31
    3780:	18 f0       	brcs	.+6      	; 0x3788 <__vector_9+0x324>
    3782:	2d 96       	adiw	r28, 0x0d	; 13
    3784:	1f ae       	std	Y+63, r1	; 0x3f
    3786:	2d 97       	sbiw	r28, 0x0d	; 13
    3788:	2b 96       	adiw	r28, 0x0b	; 11
    378a:	8f ad       	ldd	r24, Y+63	; 0x3f
    378c:	2b 97       	sbiw	r28, 0x0b	; 11
    378e:	2d 96       	adiw	r28, 0x0d	; 13
    3790:	9f ad       	ldd	r25, Y+63	; 0x3f
    3792:	2d 97       	sbiw	r28, 0x0d	; 13
    3794:	89 2b       	or	r24, r25
    3796:	2b 96       	adiw	r28, 0x0b	; 11
    3798:	8f af       	std	Y+63, r24	; 0x3f
    379a:	2b 97       	sbiw	r28, 0x0b	; 11
    379c:	2c 96       	adiw	r28, 0x0c	; 12
    379e:	ef ad       	ldd	r30, Y+63	; 0x3f
    37a0:	2c 97       	sbiw	r28, 0x0c	; 12
    37a2:	ea af       	std	Y+58, r30	; 0x3a
    37a4:	fb 8d       	ldd	r31, Y+27	; 0x1b
    37a6:	8b a9       	ldd	r24, Y+51	; 0x33
    37a8:	f8 0f       	add	r31, r24
    37aa:	fb af       	std	Y+59, r31	; 0x3b
    37ac:	91 e0       	ldi	r25, 0x01	; 1
    37ae:	2e 96       	adiw	r28, 0x0e	; 14
    37b0:	9f af       	std	Y+63, r25	; 0x3f
    37b2:	2e 97       	sbiw	r28, 0x0e	; 14
    37b4:	eb ad       	ldd	r30, Y+59	; 0x3b
    37b6:	fb 8d       	ldd	r31, Y+27	; 0x1b
    37b8:	ef 17       	cp	r30, r31
    37ba:	18 f0       	brcs	.+6      	; 0x37c2 <__vector_9+0x35e>
    37bc:	2e 96       	adiw	r28, 0x0e	; 14
    37be:	1f ae       	std	Y+63, r1	; 0x3f
    37c0:	2e 97       	sbiw	r28, 0x0e	; 14
    37c2:	2b 96       	adiw	r28, 0x0b	; 11
    37c4:	8f ad       	ldd	r24, Y+63	; 0x3f
    37c6:	2b 97       	sbiw	r28, 0x0b	; 11
    37c8:	9b ad       	ldd	r25, Y+59	; 0x3b
    37ca:	89 0f       	add	r24, r25
    37cc:	2f 96       	adiw	r28, 0x0f	; 15
    37ce:	8f af       	std	Y+63, r24	; 0x3f
    37d0:	2f 97       	sbiw	r28, 0x0f	; 15
    37d2:	e1 e0       	ldi	r30, 0x01	; 1
    37d4:	60 96       	adiw	r28, 0x10	; 16
    37d6:	ef af       	std	Y+63, r30	; 0x3f
    37d8:	60 97       	sbiw	r28, 0x10	; 16
    37da:	2f 96       	adiw	r28, 0x0f	; 15
    37dc:	ff ad       	ldd	r31, Y+63	; 0x3f
    37de:	2f 97       	sbiw	r28, 0x0f	; 15
    37e0:	8b ad       	ldd	r24, Y+59	; 0x3b
    37e2:	f8 17       	cp	r31, r24
    37e4:	18 f0       	brcs	.+6      	; 0x37ec <__vector_9+0x388>
    37e6:	60 96       	adiw	r28, 0x10	; 16
    37e8:	1f ae       	std	Y+63, r1	; 0x3f
    37ea:	60 97       	sbiw	r28, 0x10	; 16
    37ec:	2e 96       	adiw	r28, 0x0e	; 14
    37ee:	9f ad       	ldd	r25, Y+63	; 0x3f
    37f0:	2e 97       	sbiw	r28, 0x0e	; 14
    37f2:	60 96       	adiw	r28, 0x10	; 16
    37f4:	ef ad       	ldd	r30, Y+63	; 0x3f
    37f6:	60 97       	sbiw	r28, 0x10	; 16
    37f8:	9e 2b       	or	r25, r30
    37fa:	2e 96       	adiw	r28, 0x0e	; 14
    37fc:	9f af       	std	Y+63, r25	; 0x3f
    37fe:	2e 97       	sbiw	r28, 0x0e	; 14
    3800:	2f 96       	adiw	r28, 0x0f	; 15
    3802:	ff ad       	ldd	r31, Y+63	; 0x3f
    3804:	2f 97       	sbiw	r28, 0x0f	; 15
    3806:	fb af       	std	Y+59, r31	; 0x3b
    3808:	8c 8d       	ldd	r24, Y+28	; 0x1c
    380a:	9c a9       	ldd	r25, Y+52	; 0x34
    380c:	89 0f       	add	r24, r25
    380e:	8c af       	std	Y+60, r24	; 0x3c
    3810:	2e 96       	adiw	r28, 0x0e	; 14
    3812:	8f ad       	ldd	r24, Y+63	; 0x3f
    3814:	2e 97       	sbiw	r28, 0x0e	; 14
    3816:	ec ad       	ldd	r30, Y+60	; 0x3c
    3818:	8e 0f       	add	r24, r30
    381a:	8c af       	std	Y+60, r24	; 0x3c
    381c:	2d a9       	ldd	r18, Y+53	; 0x35
    381e:	3e a9       	ldd	r19, Y+54	; 0x36
    3820:	4f a9       	ldd	r20, Y+55	; 0x37
    3822:	58 ad       	ldd	r21, Y+56	; 0x38
    3824:	69 ad       	ldd	r22, Y+57	; 0x39
    3826:	7a ad       	ldd	r23, Y+58	; 0x3a
    3828:	8b ad       	ldd	r24, Y+59	; 0x3b
    382a:	9c ad       	ldd	r25, Y+60	; 0x3c
    382c:	20 93 b8 01 	sts	0x01B8, r18
    3830:	30 93 b9 01 	sts	0x01B9, r19
    3834:	40 93 ba 01 	sts	0x01BA, r20
    3838:	50 93 bb 01 	sts	0x01BB, r21
    383c:	60 93 bc 01 	sts	0x01BC, r22
    3840:	70 93 bd 01 	sts	0x01BD, r23
    3844:	80 93 be 01 	sts	0x01BE, r24
    3848:	90 93 bf 01 	sts	0x01BF, r25

            if(LOC_cyclesCounter == g_number_of_cycles)
    384c:	f0 91 b8 01 	lds	r31, 0x01B8
    3850:	fd 87       	std	Y+13, r31	; 0x0d
    3852:	80 91 b9 01 	lds	r24, 0x01B9
    3856:	8e 87       	std	Y+14, r24	; 0x0e
    3858:	90 91 ba 01 	lds	r25, 0x01BA
    385c:	9f 87       	std	Y+15, r25	; 0x0f
    385e:	e0 91 bb 01 	lds	r30, 0x01BB
    3862:	e8 8b       	std	Y+16, r30	; 0x10
    3864:	f0 91 bc 01 	lds	r31, 0x01BC
    3868:	f9 8b       	std	Y+17, r31	; 0x11
    386a:	80 91 bd 01 	lds	r24, 0x01BD
    386e:	8a 8b       	std	Y+18, r24	; 0x12
    3870:	90 91 be 01 	lds	r25, 0x01BE
    3874:	9b 8b       	std	Y+19, r25	; 0x13
    3876:	e0 91 bf 01 	lds	r30, 0x01BF
    387a:	ec 8b       	std	Y+20, r30	; 0x14
    387c:	f0 91 a4 01 	lds	r31, 0x01A4
    3880:	fd 83       	std	Y+5, r31	; 0x05
    3882:	80 91 a5 01 	lds	r24, 0x01A5
    3886:	8e 83       	std	Y+6, r24	; 0x06
    3888:	90 91 a6 01 	lds	r25, 0x01A6
    388c:	9f 83       	std	Y+7, r25	; 0x07
    388e:	e0 91 a7 01 	lds	r30, 0x01A7
    3892:	e8 87       	std	Y+8, r30	; 0x08
    3894:	f0 91 a8 01 	lds	r31, 0x01A8
    3898:	f9 87       	std	Y+9, r31	; 0x09
    389a:	80 91 a9 01 	lds	r24, 0x01A9
    389e:	8a 87       	std	Y+10, r24	; 0x0a
    38a0:	90 91 aa 01 	lds	r25, 0x01AA
    38a4:	9b 87       	std	Y+11, r25	; 0x0b
    38a6:	e0 91 ab 01 	lds	r30, 0x01AB
    38aa:	ec 87       	std	Y+12, r30	; 0x0c
    38ac:	fd 85       	ldd	r31, Y+13	; 0x0d
    38ae:	8d 81       	ldd	r24, Y+5	; 0x05
    38b0:	f8 17       	cp	r31, r24
    38b2:	09 f0       	breq	.+2      	; 0x38b6 <__vector_9+0x452>
    38b4:	6e c0       	rjmp	.+220    	; 0x3992 <__vector_9+0x52e>
    38b6:	9e 85       	ldd	r25, Y+14	; 0x0e
    38b8:	ee 81       	ldd	r30, Y+6	; 0x06
    38ba:	9e 17       	cp	r25, r30
    38bc:	09 f0       	breq	.+2      	; 0x38c0 <__vector_9+0x45c>
    38be:	69 c0       	rjmp	.+210    	; 0x3992 <__vector_9+0x52e>
    38c0:	ff 85       	ldd	r31, Y+15	; 0x0f
    38c2:	8f 81       	ldd	r24, Y+7	; 0x07
    38c4:	f8 17       	cp	r31, r24
    38c6:	09 f0       	breq	.+2      	; 0x38ca <__vector_9+0x466>
    38c8:	64 c0       	rjmp	.+200    	; 0x3992 <__vector_9+0x52e>
    38ca:	98 89       	ldd	r25, Y+16	; 0x10
    38cc:	e8 85       	ldd	r30, Y+8	; 0x08
    38ce:	9e 17       	cp	r25, r30
    38d0:	09 f0       	breq	.+2      	; 0x38d4 <__vector_9+0x470>
    38d2:	5f c0       	rjmp	.+190    	; 0x3992 <__vector_9+0x52e>
    38d4:	f9 89       	ldd	r31, Y+17	; 0x11
    38d6:	89 85       	ldd	r24, Y+9	; 0x09
    38d8:	f8 17       	cp	r31, r24
    38da:	09 f0       	breq	.+2      	; 0x38de <__vector_9+0x47a>
    38dc:	5a c0       	rjmp	.+180    	; 0x3992 <__vector_9+0x52e>
    38de:	9a 89       	ldd	r25, Y+18	; 0x12
    38e0:	ea 85       	ldd	r30, Y+10	; 0x0a
    38e2:	9e 17       	cp	r25, r30
    38e4:	09 f0       	breq	.+2      	; 0x38e8 <__vector_9+0x484>
    38e6:	55 c0       	rjmp	.+170    	; 0x3992 <__vector_9+0x52e>
    38e8:	fb 89       	ldd	r31, Y+19	; 0x13
    38ea:	8b 85       	ldd	r24, Y+11	; 0x0b
    38ec:	f8 17       	cp	r31, r24
    38ee:	09 f0       	breq	.+2      	; 0x38f2 <__vector_9+0x48e>
    38f0:	50 c0       	rjmp	.+160    	; 0x3992 <__vector_9+0x52e>
    38f2:	9c 89       	ldd	r25, Y+20	; 0x14
    38f4:	ec 85       	ldd	r30, Y+12	; 0x0c
    38f6:	9e 17       	cp	r25, r30
    38f8:	09 f0       	breq	.+2      	; 0x38fc <__vector_9+0x498>
    38fa:	4b c0       	rjmp	.+150    	; 0x3992 <__vector_9+0x52e>
            {
                TCNT1 = g_preload_value;
    38fc:	ec e4       	ldi	r30, 0x4C	; 76
    38fe:	f0 e0       	ldi	r31, 0x00	; 0
    3900:	80 91 ac 01 	lds	r24, 0x01AC
    3904:	90 91 ad 01 	lds	r25, 0x01AD
    3908:	91 83       	std	Z+1, r25	; 0x01
    390a:	80 83       	st	Z, r24
    390c:	42 c0       	rjmp	.+132    	; 0x3992 <__vector_9+0x52e>
            }
        }

        else
        {
            LOC_cyclesCounter = 0;
    390e:	10 92 b8 01 	sts	0x01B8, r1
    3912:	10 92 b9 01 	sts	0x01B9, r1
    3916:	10 92 ba 01 	sts	0x01BA, r1
    391a:	10 92 bb 01 	sts	0x01BB, r1
    391e:	10 92 bc 01 	sts	0x01BC, r1
    3922:	10 92 bd 01 	sts	0x01BD, r1
    3926:	10 92 be 01 	sts	0x01BE, r1
    392a:	10 92 bf 01 	sts	0x01BF, r1
            (*(g_callBackFunctionsArray + TIMER1_OVF_INTERRUPT_ID))();
    392e:	e0 91 a0 01 	lds	r30, 0x01A0
    3932:	f0 91 a1 01 	lds	r31, 0x01A1
    3936:	09 95       	icall
            TCNT1 = (g_number_of_cycles == 0) ? g_preload_value : 0;
    3938:	8c e4       	ldi	r24, 0x4C	; 76
    393a:	90 e0       	ldi	r25, 0x00	; 0
    393c:	9c 83       	std	Y+4, r25	; 0x04
    393e:	8b 83       	std	Y+3, r24	; 0x03
    3940:	20 91 a4 01 	lds	r18, 0x01A4
    3944:	30 91 a5 01 	lds	r19, 0x01A5
    3948:	40 91 a6 01 	lds	r20, 0x01A6
    394c:	50 91 a7 01 	lds	r21, 0x01A7
    3950:	60 91 a8 01 	lds	r22, 0x01A8
    3954:	70 91 a9 01 	lds	r23, 0x01A9
    3958:	80 91 aa 01 	lds	r24, 0x01AA
    395c:	90 91 ab 01 	lds	r25, 0x01AB
    3960:	e2 2f       	mov	r30, r18
    3962:	e3 2b       	or	r30, r19
    3964:	e4 2b       	or	r30, r20
    3966:	e5 2b       	or	r30, r21
    3968:	e6 2b       	or	r30, r22
    396a:	e7 2b       	or	r30, r23
    396c:	e8 2b       	or	r30, r24
    396e:	e9 2b       	or	r30, r25
    3970:	ee 23       	and	r30, r30
    3972:	39 f4       	brne	.+14     	; 0x3982 <__vector_9+0x51e>
    3974:	e0 91 ac 01 	lds	r30, 0x01AC
    3978:	f0 91 ad 01 	lds	r31, 0x01AD
    397c:	fa 83       	std	Y+2, r31	; 0x02
    397e:	e9 83       	std	Y+1, r30	; 0x01
    3980:	02 c0       	rjmp	.+4      	; 0x3986 <__vector_9+0x522>
    3982:	1a 82       	std	Y+2, r1	; 0x02
    3984:	19 82       	std	Y+1, r1	; 0x01
    3986:	89 81       	ldd	r24, Y+1	; 0x01
    3988:	9a 81       	ldd	r25, Y+2	; 0x02
    398a:	eb 81       	ldd	r30, Y+3	; 0x03
    398c:	fc 81       	ldd	r31, Y+4	; 0x04
    398e:	91 83       	std	Z+1, r25	; 0x01
    3990:	80 83       	st	Z, r24

    else
    {
    	/* Do Nothing. */
    }
}
    3992:	c1 5b       	subi	r28, 0xB1	; 177
    3994:	df 4f       	sbci	r29, 0xFF	; 255
    3996:	de bf       	out	0x3e, r29	; 62
    3998:	cd bf       	out	0x3d, r28	; 61
    399a:	cf 91       	pop	r28
    399c:	df 91       	pop	r29
    399e:	ff 91       	pop	r31
    39a0:	ef 91       	pop	r30
    39a2:	bf 91       	pop	r27
    39a4:	af 91       	pop	r26
    39a6:	9f 91       	pop	r25
    39a8:	8f 91       	pop	r24
    39aa:	7f 91       	pop	r23
    39ac:	6f 91       	pop	r22
    39ae:	5f 91       	pop	r21
    39b0:	4f 91       	pop	r20
    39b2:	3f 91       	pop	r19
    39b4:	2f 91       	pop	r18
    39b6:	0f 90       	pop	r0
    39b8:	0f be       	out	0x3f, r0	; 63
    39ba:	0f 90       	pop	r0
    39bc:	1f 90       	pop	r1
    39be:	18 95       	reti

000039c0 <PORT_init>:
 * [Description]   : Initialize all pins with specific static configurations.
 * [Arguments]     : The function takes no arguments.
 * [return]        : The function returns void.
 ====================================================================================================================*/
void PORT_init(void)
{
    39c0:	df 93       	push	r29
    39c2:	cf 93       	push	r28
    39c4:	cd b7       	in	r28, 0x3d	; 61
    39c6:	de b7       	in	r29, 0x3e	; 62
    #define PORT_OUTPUT_LOW_PIN    1

    #undef  PORT_OUTPUT_HIGH_PIN
    #define PORT_OUTPUT_HIGH_PIN   1

    DDRA = CONCAT(PORT_PORTA_PIN7_PIN_MODE,PORT_PORTA_PIN6_PIN_MODE,PORT_PORTA_PIN5_PIN_MODE,PORT_PORTA_PIN4_PIN_MODE,PORT_PORTA_PIN3_PIN_MODE,PORT_PORTA_PIN2_PIN_MODE,PORT_PORTA_PIN1_PIN_MODE,PORT_PORTA_PIN0_PIN_MODE);
    39c8:	ea e3       	ldi	r30, 0x3A	; 58
    39ca:	f0 e0       	ldi	r31, 0x00	; 0
    39cc:	8f e0       	ldi	r24, 0x0F	; 15
    39ce:	80 83       	st	Z, r24
    DDRB = CONCAT(PORT_PORTB_PIN7_PIN_MODE,PORT_PORTB_PIN6_PIN_MODE,PORT_PORTB_PIN5_PIN_MODE,PORT_PORTB_PIN4_PIN_MODE,PORT_PORTB_PIN3_PIN_MODE,PORT_PORTB_PIN2_PIN_MODE,PORT_PORTB_PIN1_PIN_MODE,PORT_PORTB_PIN0_PIN_MODE);
    39d0:	e7 e3       	ldi	r30, 0x37	; 55
    39d2:	f0 e0       	ldi	r31, 0x00	; 0
    39d4:	81 e0       	ldi	r24, 0x01	; 1
    39d6:	80 83       	st	Z, r24
    DDRC = CONCAT(PORT_PORTC_PIN7_PIN_MODE,PORT_PORTC_PIN6_PIN_MODE,PORT_PORTC_PIN5_PIN_MODE,PORT_PORTC_PIN4_PIN_MODE,PORT_PORTC_PIN3_PIN_MODE,PORT_PORTC_PIN2_PIN_MODE,PORT_PORTC_PIN1_PIN_MODE,PORT_PORTC_PIN0_PIN_MODE);
    39d8:	e4 e3       	ldi	r30, 0x34	; 52
    39da:	f0 e0       	ldi	r31, 0x00	; 0
    39dc:	8f ef       	ldi	r24, 0xFF	; 255
    39de:	80 83       	st	Z, r24
    DDRD = CONCAT(PORT_PORTD_PIN7_PIN_MODE,PORT_PORTD_PIN6_PIN_MODE,PORT_PORTD_PIN5_PIN_MODE,PORT_PORTD_PIN4_PIN_MODE,PORT_PORTD_PIN3_PIN_MODE,PORT_PORTD_PIN2_PIN_MODE,PORT_PORTD_PIN1_PIN_MODE,PORT_PORTD_PIN0_PIN_MODE);
    39e0:	e1 e3       	ldi	r30, 0x31	; 49
    39e2:	f0 e0       	ldi	r31, 0x00	; 0
    39e4:	8f ef       	ldi	r24, 0xFF	; 255
    39e6:	80 83       	st	Z, r24
    #define PORT_OUTPUT_LOW_PIN    0

    #undef  PORT_OUTPUT_HIGH_PIN
    #define PORT_OUTPUT_HIGH_PIN   1

    PORTA = CONCAT(PORT_PORTA_PIN7_PIN_MODE,PORT_PORTA_PIN6_PIN_MODE,PORT_PORTA_PIN5_PIN_MODE,PORT_PORTA_PIN4_PIN_MODE,PORT_PORTA_PIN3_PIN_MODE,PORT_PORTA_PIN2_PIN_MODE,PORT_PORTA_PIN1_PIN_MODE,PORT_PORTA_PIN0_PIN_MODE);
    39e8:	eb e3       	ldi	r30, 0x3B	; 59
    39ea:	f0 e0       	ldi	r31, 0x00	; 0
    39ec:	80 ef       	ldi	r24, 0xF0	; 240
    39ee:	80 83       	st	Z, r24
    PORTB = CONCAT(PORT_PORTB_PIN7_PIN_MODE,PORT_PORTB_PIN6_PIN_MODE,PORT_PORTB_PIN5_PIN_MODE,PORT_PORTB_PIN4_PIN_MODE,PORT_PORTB_PIN3_PIN_MODE,PORT_PORTB_PIN2_PIN_MODE,PORT_PORTB_PIN1_PIN_MODE,PORT_PORTB_PIN0_PIN_MODE);
    39f0:	e8 e3       	ldi	r30, 0x38	; 56
    39f2:	f0 e0       	ldi	r31, 0x00	; 0
    39f4:	10 82       	st	Z, r1
    PORTC = CONCAT(PORT_PORTC_PIN7_PIN_MODE,PORT_PORTC_PIN6_PIN_MODE,PORT_PORTC_PIN5_PIN_MODE,PORT_PORTC_PIN4_PIN_MODE,PORT_PORTC_PIN3_PIN_MODE,PORT_PORTC_PIN2_PIN_MODE,PORT_PORTC_PIN1_PIN_MODE,PORT_PORTC_PIN0_PIN_MODE);
    39f6:	e5 e3       	ldi	r30, 0x35	; 53
    39f8:	f0 e0       	ldi	r31, 0x00	; 0
    39fa:	10 82       	st	Z, r1
    PORTD = CONCAT(PORT_PORTD_PIN7_PIN_MODE,PORT_PORTD_PIN6_PIN_MODE,PORT_PORTD_PIN5_PIN_MODE,PORT_PORTD_PIN4_PIN_MODE,PORT_PORTD_PIN3_PIN_MODE,PORT_PORTD_PIN2_PIN_MODE,PORT_PORTD_PIN1_PIN_MODE,PORT_PORTD_PIN0_PIN_MODE);
    39fc:	e2 e3       	ldi	r30, 0x32	; 50
    39fe:	f0 e0       	ldi	r31, 0x00	; 0
    3a00:	10 82       	st	Z, r1
    #undef  PORT_OUTPUT_LOW_PIN
    #define PORT_OUTPUT_LOW_PIN    2

    #undef  PORT_OUTPUT_HIGH_PIN
    #define PORT_OUTPUT_HIGH_PIN   3
}
    3a02:	cf 91       	pop	r28
    3a04:	df 91       	pop	r29
    3a06:	08 95       	ret

00003a08 <PORT_setPinDirection>:
 *                                                          - Port Number Error.
 *                                                          - Pin Number Error.
 *                                                          - Invalid Direction Error.
 ====================================================================================================================*/
PORT_errorStatus PORT_setPinDirection(uint8 a_portID, uint8 a_pinID, PORT_pinDirection a_direction)
{
    3a08:	df 93       	push	r29
    3a0a:	cf 93       	push	r28
    3a0c:	00 d0       	rcall	.+0      	; 0x3a0e <PORT_setPinDirection+0x6>
    3a0e:	00 d0       	rcall	.+0      	; 0x3a10 <PORT_setPinDirection+0x8>
    3a10:	00 d0       	rcall	.+0      	; 0x3a12 <PORT_setPinDirection+0xa>
    3a12:	cd b7       	in	r28, 0x3d	; 61
    3a14:	de b7       	in	r29, 0x3e	; 62
    3a16:	8a 83       	std	Y+2, r24	; 0x02
    3a18:	6b 83       	std	Y+3, r22	; 0x03
    3a1a:	4c 83       	std	Y+4, r20	; 0x04
    PORT_errorStatus LOC_errorStatus = PORT_NO_ERRORS;
    3a1c:	19 82       	std	Y+1, r1	; 0x01

    if(a_portID >= PORT_NUM_OF_PORTS)
    3a1e:	8a 81       	ldd	r24, Y+2	; 0x02
    3a20:	84 30       	cpi	r24, 0x04	; 4
    3a22:	18 f0       	brcs	.+6      	; 0x3a2a <PORT_setPinDirection+0x22>
    {
        LOC_errorStatus = PORT_PORT_NUM_ERROR;
    3a24:	81 e0       	ldi	r24, 0x01	; 1
    3a26:	89 83       	std	Y+1, r24	; 0x01
    3a28:	b8 c0       	rjmp	.+368    	; 0x3b9a <PORT_setPinDirection+0x192>
    }

    else if(a_pinID >= PORT_NUM_OF_PINS_PER_PORT)
    3a2a:	8b 81       	ldd	r24, Y+3	; 0x03
    3a2c:	88 30       	cpi	r24, 0x08	; 8
    3a2e:	18 f0       	brcs	.+6      	; 0x3a36 <PORT_setPinDirection+0x2e>
    {
        LOC_errorStatus = PORT_PIN_NUM_ERROR;
    3a30:	82 e0       	ldi	r24, 0x02	; 2
    3a32:	89 83       	std	Y+1, r24	; 0x01
    3a34:	b2 c0       	rjmp	.+356    	; 0x3b9a <PORT_setPinDirection+0x192>
    }

    else if((a_direction != PORT_INPUT_PIN) && (a_direction != PORT_OUTPUT_PIN))
    3a36:	8c 81       	ldd	r24, Y+4	; 0x04
    3a38:	88 23       	and	r24, r24
    3a3a:	31 f0       	breq	.+12     	; 0x3a48 <PORT_setPinDirection+0x40>
    3a3c:	8c 81       	ldd	r24, Y+4	; 0x04
    3a3e:	81 30       	cpi	r24, 0x01	; 1
    3a40:	19 f0       	breq	.+6      	; 0x3a48 <PORT_setPinDirection+0x40>
    {
        LOC_errorStatus = PORT_DIRECTION_ERROR;
    3a42:	83 e0       	ldi	r24, 0x03	; 3
    3a44:	89 83       	std	Y+1, r24	; 0x01
    3a46:	a9 c0       	rjmp	.+338    	; 0x3b9a <PORT_setPinDirection+0x192>
    }

    else
    {
        switch (a_portID)
    3a48:	8a 81       	ldd	r24, Y+2	; 0x02
    3a4a:	28 2f       	mov	r18, r24
    3a4c:	30 e0       	ldi	r19, 0x00	; 0
    3a4e:	3e 83       	std	Y+6, r19	; 0x06
    3a50:	2d 83       	std	Y+5, r18	; 0x05
    3a52:	6d 81       	ldd	r22, Y+5	; 0x05
    3a54:	7e 81       	ldd	r23, Y+6	; 0x06
    3a56:	61 30       	cpi	r22, 0x01	; 1
    3a58:	71 05       	cpc	r23, r1
    3a5a:	d1 f1       	breq	.+116    	; 0x3ad0 <PORT_setPinDirection+0xc8>
    3a5c:	8d 81       	ldd	r24, Y+5	; 0x05
    3a5e:	9e 81       	ldd	r25, Y+6	; 0x06
    3a60:	82 30       	cpi	r24, 0x02	; 2
    3a62:	91 05       	cpc	r25, r1
    3a64:	34 f4       	brge	.+12     	; 0x3a72 <PORT_setPinDirection+0x6a>
    3a66:	2d 81       	ldd	r18, Y+5	; 0x05
    3a68:	3e 81       	ldd	r19, Y+6	; 0x06
    3a6a:	21 15       	cp	r18, r1
    3a6c:	31 05       	cpc	r19, r1
    3a6e:	71 f0       	breq	.+28     	; 0x3a8c <PORT_setPinDirection+0x84>
    3a70:	94 c0       	rjmp	.+296    	; 0x3b9a <PORT_setPinDirection+0x192>
    3a72:	6d 81       	ldd	r22, Y+5	; 0x05
    3a74:	7e 81       	ldd	r23, Y+6	; 0x06
    3a76:	62 30       	cpi	r22, 0x02	; 2
    3a78:	71 05       	cpc	r23, r1
    3a7a:	09 f4       	brne	.+2      	; 0x3a7e <PORT_setPinDirection+0x76>
    3a7c:	4b c0       	rjmp	.+150    	; 0x3b14 <PORT_setPinDirection+0x10c>
    3a7e:	8d 81       	ldd	r24, Y+5	; 0x05
    3a80:	9e 81       	ldd	r25, Y+6	; 0x06
    3a82:	83 30       	cpi	r24, 0x03	; 3
    3a84:	91 05       	cpc	r25, r1
    3a86:	09 f4       	brne	.+2      	; 0x3a8a <PORT_setPinDirection+0x82>
    3a88:	67 c0       	rjmp	.+206    	; 0x3b58 <PORT_setPinDirection+0x150>
    3a8a:	87 c0       	rjmp	.+270    	; 0x3b9a <PORT_setPinDirection+0x192>
        {
        case PORT_PORTA_ID:
            WRITE_BIT(DDRA,a_pinID,a_direction);
    3a8c:	aa e3       	ldi	r26, 0x3A	; 58
    3a8e:	b0 e0       	ldi	r27, 0x00	; 0
    3a90:	ea e3       	ldi	r30, 0x3A	; 58
    3a92:	f0 e0       	ldi	r31, 0x00	; 0
    3a94:	80 81       	ld	r24, Z
    3a96:	48 2f       	mov	r20, r24
    3a98:	8b 81       	ldd	r24, Y+3	; 0x03
    3a9a:	28 2f       	mov	r18, r24
    3a9c:	30 e0       	ldi	r19, 0x00	; 0
    3a9e:	81 e0       	ldi	r24, 0x01	; 1
    3aa0:	90 e0       	ldi	r25, 0x00	; 0
    3aa2:	02 c0       	rjmp	.+4      	; 0x3aa8 <PORT_setPinDirection+0xa0>
    3aa4:	88 0f       	add	r24, r24
    3aa6:	99 1f       	adc	r25, r25
    3aa8:	2a 95       	dec	r18
    3aaa:	e2 f7       	brpl	.-8      	; 0x3aa4 <PORT_setPinDirection+0x9c>
    3aac:	80 95       	com	r24
    3aae:	48 23       	and	r20, r24
    3ab0:	8c 81       	ldd	r24, Y+4	; 0x04
    3ab2:	28 2f       	mov	r18, r24
    3ab4:	30 e0       	ldi	r19, 0x00	; 0
    3ab6:	8b 81       	ldd	r24, Y+3	; 0x03
    3ab8:	88 2f       	mov	r24, r24
    3aba:	90 e0       	ldi	r25, 0x00	; 0
    3abc:	b9 01       	movw	r22, r18
    3abe:	02 c0       	rjmp	.+4      	; 0x3ac4 <PORT_setPinDirection+0xbc>
    3ac0:	66 0f       	add	r22, r22
    3ac2:	77 1f       	adc	r23, r23
    3ac4:	8a 95       	dec	r24
    3ac6:	e2 f7       	brpl	.-8      	; 0x3ac0 <PORT_setPinDirection+0xb8>
    3ac8:	cb 01       	movw	r24, r22
    3aca:	84 2b       	or	r24, r20
    3acc:	8c 93       	st	X, r24
    3ace:	65 c0       	rjmp	.+202    	; 0x3b9a <PORT_setPinDirection+0x192>
            break;

        case PORT_PORTB_ID:
            WRITE_BIT(DDRB,a_pinID,a_direction);
    3ad0:	a7 e3       	ldi	r26, 0x37	; 55
    3ad2:	b0 e0       	ldi	r27, 0x00	; 0
    3ad4:	e7 e3       	ldi	r30, 0x37	; 55
    3ad6:	f0 e0       	ldi	r31, 0x00	; 0
    3ad8:	80 81       	ld	r24, Z
    3ada:	48 2f       	mov	r20, r24
    3adc:	8b 81       	ldd	r24, Y+3	; 0x03
    3ade:	28 2f       	mov	r18, r24
    3ae0:	30 e0       	ldi	r19, 0x00	; 0
    3ae2:	81 e0       	ldi	r24, 0x01	; 1
    3ae4:	90 e0       	ldi	r25, 0x00	; 0
    3ae6:	02 c0       	rjmp	.+4      	; 0x3aec <PORT_setPinDirection+0xe4>
    3ae8:	88 0f       	add	r24, r24
    3aea:	99 1f       	adc	r25, r25
    3aec:	2a 95       	dec	r18
    3aee:	e2 f7       	brpl	.-8      	; 0x3ae8 <PORT_setPinDirection+0xe0>
    3af0:	80 95       	com	r24
    3af2:	48 23       	and	r20, r24
    3af4:	8c 81       	ldd	r24, Y+4	; 0x04
    3af6:	28 2f       	mov	r18, r24
    3af8:	30 e0       	ldi	r19, 0x00	; 0
    3afa:	8b 81       	ldd	r24, Y+3	; 0x03
    3afc:	88 2f       	mov	r24, r24
    3afe:	90 e0       	ldi	r25, 0x00	; 0
    3b00:	b9 01       	movw	r22, r18
    3b02:	02 c0       	rjmp	.+4      	; 0x3b08 <PORT_setPinDirection+0x100>
    3b04:	66 0f       	add	r22, r22
    3b06:	77 1f       	adc	r23, r23
    3b08:	8a 95       	dec	r24
    3b0a:	e2 f7       	brpl	.-8      	; 0x3b04 <PORT_setPinDirection+0xfc>
    3b0c:	cb 01       	movw	r24, r22
    3b0e:	84 2b       	or	r24, r20
    3b10:	8c 93       	st	X, r24
    3b12:	43 c0       	rjmp	.+134    	; 0x3b9a <PORT_setPinDirection+0x192>
            break;

        case PORT_PORTC_ID:
            WRITE_BIT(DDRC,a_pinID,a_direction);
    3b14:	a4 e3       	ldi	r26, 0x34	; 52
    3b16:	b0 e0       	ldi	r27, 0x00	; 0
    3b18:	e4 e3       	ldi	r30, 0x34	; 52
    3b1a:	f0 e0       	ldi	r31, 0x00	; 0
    3b1c:	80 81       	ld	r24, Z
    3b1e:	48 2f       	mov	r20, r24
    3b20:	8b 81       	ldd	r24, Y+3	; 0x03
    3b22:	28 2f       	mov	r18, r24
    3b24:	30 e0       	ldi	r19, 0x00	; 0
    3b26:	81 e0       	ldi	r24, 0x01	; 1
    3b28:	90 e0       	ldi	r25, 0x00	; 0
    3b2a:	02 c0       	rjmp	.+4      	; 0x3b30 <PORT_setPinDirection+0x128>
    3b2c:	88 0f       	add	r24, r24
    3b2e:	99 1f       	adc	r25, r25
    3b30:	2a 95       	dec	r18
    3b32:	e2 f7       	brpl	.-8      	; 0x3b2c <PORT_setPinDirection+0x124>
    3b34:	80 95       	com	r24
    3b36:	48 23       	and	r20, r24
    3b38:	8c 81       	ldd	r24, Y+4	; 0x04
    3b3a:	28 2f       	mov	r18, r24
    3b3c:	30 e0       	ldi	r19, 0x00	; 0
    3b3e:	8b 81       	ldd	r24, Y+3	; 0x03
    3b40:	88 2f       	mov	r24, r24
    3b42:	90 e0       	ldi	r25, 0x00	; 0
    3b44:	b9 01       	movw	r22, r18
    3b46:	02 c0       	rjmp	.+4      	; 0x3b4c <PORT_setPinDirection+0x144>
    3b48:	66 0f       	add	r22, r22
    3b4a:	77 1f       	adc	r23, r23
    3b4c:	8a 95       	dec	r24
    3b4e:	e2 f7       	brpl	.-8      	; 0x3b48 <PORT_setPinDirection+0x140>
    3b50:	cb 01       	movw	r24, r22
    3b52:	84 2b       	or	r24, r20
    3b54:	8c 93       	st	X, r24
    3b56:	21 c0       	rjmp	.+66     	; 0x3b9a <PORT_setPinDirection+0x192>
            break;

        case PORT_PORTD_ID:
            WRITE_BIT(DDRD,a_pinID,a_direction);
    3b58:	a1 e3       	ldi	r26, 0x31	; 49
    3b5a:	b0 e0       	ldi	r27, 0x00	; 0
    3b5c:	e1 e3       	ldi	r30, 0x31	; 49
    3b5e:	f0 e0       	ldi	r31, 0x00	; 0
    3b60:	80 81       	ld	r24, Z
    3b62:	48 2f       	mov	r20, r24
    3b64:	8b 81       	ldd	r24, Y+3	; 0x03
    3b66:	28 2f       	mov	r18, r24
    3b68:	30 e0       	ldi	r19, 0x00	; 0
    3b6a:	81 e0       	ldi	r24, 0x01	; 1
    3b6c:	90 e0       	ldi	r25, 0x00	; 0
    3b6e:	02 c0       	rjmp	.+4      	; 0x3b74 <PORT_setPinDirection+0x16c>
    3b70:	88 0f       	add	r24, r24
    3b72:	99 1f       	adc	r25, r25
    3b74:	2a 95       	dec	r18
    3b76:	e2 f7       	brpl	.-8      	; 0x3b70 <PORT_setPinDirection+0x168>
    3b78:	80 95       	com	r24
    3b7a:	48 23       	and	r20, r24
    3b7c:	8c 81       	ldd	r24, Y+4	; 0x04
    3b7e:	28 2f       	mov	r18, r24
    3b80:	30 e0       	ldi	r19, 0x00	; 0
    3b82:	8b 81       	ldd	r24, Y+3	; 0x03
    3b84:	88 2f       	mov	r24, r24
    3b86:	90 e0       	ldi	r25, 0x00	; 0
    3b88:	b9 01       	movw	r22, r18
    3b8a:	02 c0       	rjmp	.+4      	; 0x3b90 <PORT_setPinDirection+0x188>
    3b8c:	66 0f       	add	r22, r22
    3b8e:	77 1f       	adc	r23, r23
    3b90:	8a 95       	dec	r24
    3b92:	e2 f7       	brpl	.-8      	; 0x3b8c <PORT_setPinDirection+0x184>
    3b94:	cb 01       	movw	r24, r22
    3b96:	84 2b       	or	r24, r20
    3b98:	8c 93       	st	X, r24
            /* Do Nothing. */
            break;
        }
    }

    return LOC_errorStatus;
    3b9a:	89 81       	ldd	r24, Y+1	; 0x01
}
    3b9c:	26 96       	adiw	r28, 0x06	; 6
    3b9e:	0f b6       	in	r0, 0x3f	; 63
    3ba0:	f8 94       	cli
    3ba2:	de bf       	out	0x3e, r29	; 62
    3ba4:	0f be       	out	0x3f, r0	; 63
    3ba6:	cd bf       	out	0x3d, r28	; 61
    3ba8:	cf 91       	pop	r28
    3baa:	df 91       	pop	r29
    3bac:	08 95       	ret

00003bae <GIE_setInterruptStatus>:
 * [Arguments]     : <a_status>      -> Indicates to the required status [Enable - Disable].
 * [return]        : The function returns the error status: - No Errors.
 *                                                          - Invalid Status Error.
 ====================================================================================================================*/
GIE_errorStatus GIE_setInterruptStatus(GIE_interruptStatus a_status)
{
    3bae:	df 93       	push	r29
    3bb0:	cf 93       	push	r28
    3bb2:	00 d0       	rcall	.+0      	; 0x3bb4 <GIE_setInterruptStatus+0x6>
    3bb4:	cd b7       	in	r28, 0x3d	; 61
    3bb6:	de b7       	in	r29, 0x3e	; 62
    3bb8:	8a 83       	std	Y+2, r24	; 0x02
    GIE_errorStatus LOC_errorStatus = GIE_NO_ERRORS;
    3bba:	19 82       	std	Y+1, r1	; 0x01

    if((a_status != GIE_DISABLE) && (a_status != GIE_ENABLE))
    3bbc:	8a 81       	ldd	r24, Y+2	; 0x02
    3bbe:	88 23       	and	r24, r24
    3bc0:	31 f0       	breq	.+12     	; 0x3bce <GIE_setInterruptStatus+0x20>
    3bc2:	8a 81       	ldd	r24, Y+2	; 0x02
    3bc4:	81 30       	cpi	r24, 0x01	; 1
    3bc6:	19 f0       	breq	.+6      	; 0x3bce <GIE_setInterruptStatus+0x20>
    {
        LOC_errorStatus = GIE_STATUS_ERROR;
    3bc8:	81 e0       	ldi	r24, 0x01	; 1
    3bca:	89 83       	std	Y+1, r24	; 0x01
    3bcc:	11 c0       	rjmp	.+34     	; 0x3bf0 <GIE_setInterruptStatus+0x42>
    }

    else
    {
        WRITE_BIT(SREG,GIE_BIT_ID,a_status);
    3bce:	af e5       	ldi	r26, 0x5F	; 95
    3bd0:	b0 e0       	ldi	r27, 0x00	; 0
    3bd2:	ef e5       	ldi	r30, 0x5F	; 95
    3bd4:	f0 e0       	ldi	r31, 0x00	; 0
    3bd6:	80 81       	ld	r24, Z
    3bd8:	28 2f       	mov	r18, r24
    3bda:	2f 77       	andi	r18, 0x7F	; 127
    3bdc:	8a 81       	ldd	r24, Y+2	; 0x02
    3bde:	88 2f       	mov	r24, r24
    3be0:	90 e0       	ldi	r25, 0x00	; 0
    3be2:	96 95       	lsr	r25
    3be4:	98 2f       	mov	r25, r24
    3be6:	88 27       	eor	r24, r24
    3be8:	97 95       	ror	r25
    3bea:	87 95       	ror	r24
    3bec:	82 2b       	or	r24, r18
    3bee:	8c 93       	st	X, r24
    }

    return LOC_errorStatus;
    3bf0:	89 81       	ldd	r24, Y+1	; 0x01
    3bf2:	0f 90       	pop	r0
    3bf4:	0f 90       	pop	r0
    3bf6:	cf 91       	pop	r28
    3bf8:	df 91       	pop	r29
    3bfa:	08 95       	ret

00003bfc <DIO_writePin>:
 *                                                          - Port Number Error.
 *                                                          - Pin Number Error.
 *                                                          - Invalid Level Error.
 ====================================================================================================================*/
DIO_errorStatus DIO_writePin(uint8 a_portID, uint8 a_pinID, DIO_pinStatus a_value)
{
    3bfc:	df 93       	push	r29
    3bfe:	cf 93       	push	r28
    3c00:	00 d0       	rcall	.+0      	; 0x3c02 <DIO_writePin+0x6>
    3c02:	00 d0       	rcall	.+0      	; 0x3c04 <DIO_writePin+0x8>
    3c04:	00 d0       	rcall	.+0      	; 0x3c06 <DIO_writePin+0xa>
    3c06:	cd b7       	in	r28, 0x3d	; 61
    3c08:	de b7       	in	r29, 0x3e	; 62
    3c0a:	8a 83       	std	Y+2, r24	; 0x02
    3c0c:	6b 83       	std	Y+3, r22	; 0x03
    3c0e:	4c 83       	std	Y+4, r20	; 0x04
    DIO_errorStatus LOC_errorStatus = DIO_NO_ERRORS;
    3c10:	19 82       	std	Y+1, r1	; 0x01

    if(a_portID >= DIO_NUM_OF_PORTS)
    3c12:	8a 81       	ldd	r24, Y+2	; 0x02
    3c14:	84 30       	cpi	r24, 0x04	; 4
    3c16:	18 f0       	brcs	.+6      	; 0x3c1e <DIO_writePin+0x22>
    {
        LOC_errorStatus = DIO_PORT_NUM_ERROR;
    3c18:	81 e0       	ldi	r24, 0x01	; 1
    3c1a:	89 83       	std	Y+1, r24	; 0x01
    3c1c:	b8 c0       	rjmp	.+368    	; 0x3d8e <DIO_writePin+0x192>
    }

    else if(a_pinID >= DIO_NUM_OF_PINS_PER_PORT)
    3c1e:	8b 81       	ldd	r24, Y+3	; 0x03
    3c20:	88 30       	cpi	r24, 0x08	; 8
    3c22:	18 f0       	brcs	.+6      	; 0x3c2a <DIO_writePin+0x2e>
    {
        LOC_errorStatus = DIO_PIN_NUM_ERROR;
    3c24:	82 e0       	ldi	r24, 0x02	; 2
    3c26:	89 83       	std	Y+1, r24	; 0x01
    3c28:	b2 c0       	rjmp	.+356    	; 0x3d8e <DIO_writePin+0x192>
    }

    else if((a_value != DIO_HIGH_PIN) && (a_value != DIO_LOW_PIN))
    3c2a:	8c 81       	ldd	r24, Y+4	; 0x04
    3c2c:	81 30       	cpi	r24, 0x01	; 1
    3c2e:	31 f0       	breq	.+12     	; 0x3c3c <DIO_writePin+0x40>
    3c30:	8c 81       	ldd	r24, Y+4	; 0x04
    3c32:	88 23       	and	r24, r24
    3c34:	19 f0       	breq	.+6      	; 0x3c3c <DIO_writePin+0x40>
    {
        LOC_errorStatus = DIO_LEVEL_ERROR;
    3c36:	83 e0       	ldi	r24, 0x03	; 3
    3c38:	89 83       	std	Y+1, r24	; 0x01
    3c3a:	a9 c0       	rjmp	.+338    	; 0x3d8e <DIO_writePin+0x192>
    }

    else
    {
        switch (a_portID)
    3c3c:	8a 81       	ldd	r24, Y+2	; 0x02
    3c3e:	28 2f       	mov	r18, r24
    3c40:	30 e0       	ldi	r19, 0x00	; 0
    3c42:	3e 83       	std	Y+6, r19	; 0x06
    3c44:	2d 83       	std	Y+5, r18	; 0x05
    3c46:	6d 81       	ldd	r22, Y+5	; 0x05
    3c48:	7e 81       	ldd	r23, Y+6	; 0x06
    3c4a:	61 30       	cpi	r22, 0x01	; 1
    3c4c:	71 05       	cpc	r23, r1
    3c4e:	d1 f1       	breq	.+116    	; 0x3cc4 <DIO_writePin+0xc8>
    3c50:	8d 81       	ldd	r24, Y+5	; 0x05
    3c52:	9e 81       	ldd	r25, Y+6	; 0x06
    3c54:	82 30       	cpi	r24, 0x02	; 2
    3c56:	91 05       	cpc	r25, r1
    3c58:	34 f4       	brge	.+12     	; 0x3c66 <DIO_writePin+0x6a>
    3c5a:	2d 81       	ldd	r18, Y+5	; 0x05
    3c5c:	3e 81       	ldd	r19, Y+6	; 0x06
    3c5e:	21 15       	cp	r18, r1
    3c60:	31 05       	cpc	r19, r1
    3c62:	71 f0       	breq	.+28     	; 0x3c80 <DIO_writePin+0x84>
    3c64:	94 c0       	rjmp	.+296    	; 0x3d8e <DIO_writePin+0x192>
    3c66:	6d 81       	ldd	r22, Y+5	; 0x05
    3c68:	7e 81       	ldd	r23, Y+6	; 0x06
    3c6a:	62 30       	cpi	r22, 0x02	; 2
    3c6c:	71 05       	cpc	r23, r1
    3c6e:	09 f4       	brne	.+2      	; 0x3c72 <DIO_writePin+0x76>
    3c70:	4b c0       	rjmp	.+150    	; 0x3d08 <DIO_writePin+0x10c>
    3c72:	8d 81       	ldd	r24, Y+5	; 0x05
    3c74:	9e 81       	ldd	r25, Y+6	; 0x06
    3c76:	83 30       	cpi	r24, 0x03	; 3
    3c78:	91 05       	cpc	r25, r1
    3c7a:	09 f4       	brne	.+2      	; 0x3c7e <DIO_writePin+0x82>
    3c7c:	67 c0       	rjmp	.+206    	; 0x3d4c <DIO_writePin+0x150>
    3c7e:	87 c0       	rjmp	.+270    	; 0x3d8e <DIO_writePin+0x192>
        {
        case DIO_PORTA_ID:
            WRITE_BIT(PORTA,a_pinID,a_value);
    3c80:	ab e3       	ldi	r26, 0x3B	; 59
    3c82:	b0 e0       	ldi	r27, 0x00	; 0
    3c84:	eb e3       	ldi	r30, 0x3B	; 59
    3c86:	f0 e0       	ldi	r31, 0x00	; 0
    3c88:	80 81       	ld	r24, Z
    3c8a:	48 2f       	mov	r20, r24
    3c8c:	8b 81       	ldd	r24, Y+3	; 0x03
    3c8e:	28 2f       	mov	r18, r24
    3c90:	30 e0       	ldi	r19, 0x00	; 0
    3c92:	81 e0       	ldi	r24, 0x01	; 1
    3c94:	90 e0       	ldi	r25, 0x00	; 0
    3c96:	02 c0       	rjmp	.+4      	; 0x3c9c <DIO_writePin+0xa0>
    3c98:	88 0f       	add	r24, r24
    3c9a:	99 1f       	adc	r25, r25
    3c9c:	2a 95       	dec	r18
    3c9e:	e2 f7       	brpl	.-8      	; 0x3c98 <DIO_writePin+0x9c>
    3ca0:	80 95       	com	r24
    3ca2:	48 23       	and	r20, r24
    3ca4:	8c 81       	ldd	r24, Y+4	; 0x04
    3ca6:	28 2f       	mov	r18, r24
    3ca8:	30 e0       	ldi	r19, 0x00	; 0
    3caa:	8b 81       	ldd	r24, Y+3	; 0x03
    3cac:	88 2f       	mov	r24, r24
    3cae:	90 e0       	ldi	r25, 0x00	; 0
    3cb0:	b9 01       	movw	r22, r18
    3cb2:	02 c0       	rjmp	.+4      	; 0x3cb8 <DIO_writePin+0xbc>
    3cb4:	66 0f       	add	r22, r22
    3cb6:	77 1f       	adc	r23, r23
    3cb8:	8a 95       	dec	r24
    3cba:	e2 f7       	brpl	.-8      	; 0x3cb4 <DIO_writePin+0xb8>
    3cbc:	cb 01       	movw	r24, r22
    3cbe:	84 2b       	or	r24, r20
    3cc0:	8c 93       	st	X, r24
    3cc2:	65 c0       	rjmp	.+202    	; 0x3d8e <DIO_writePin+0x192>
            break;

        case DIO_PORTB_ID:
            WRITE_BIT(PORTB,a_pinID,a_value);
    3cc4:	a8 e3       	ldi	r26, 0x38	; 56
    3cc6:	b0 e0       	ldi	r27, 0x00	; 0
    3cc8:	e8 e3       	ldi	r30, 0x38	; 56
    3cca:	f0 e0       	ldi	r31, 0x00	; 0
    3ccc:	80 81       	ld	r24, Z
    3cce:	48 2f       	mov	r20, r24
    3cd0:	8b 81       	ldd	r24, Y+3	; 0x03
    3cd2:	28 2f       	mov	r18, r24
    3cd4:	30 e0       	ldi	r19, 0x00	; 0
    3cd6:	81 e0       	ldi	r24, 0x01	; 1
    3cd8:	90 e0       	ldi	r25, 0x00	; 0
    3cda:	02 c0       	rjmp	.+4      	; 0x3ce0 <DIO_writePin+0xe4>
    3cdc:	88 0f       	add	r24, r24
    3cde:	99 1f       	adc	r25, r25
    3ce0:	2a 95       	dec	r18
    3ce2:	e2 f7       	brpl	.-8      	; 0x3cdc <DIO_writePin+0xe0>
    3ce4:	80 95       	com	r24
    3ce6:	48 23       	and	r20, r24
    3ce8:	8c 81       	ldd	r24, Y+4	; 0x04
    3cea:	28 2f       	mov	r18, r24
    3cec:	30 e0       	ldi	r19, 0x00	; 0
    3cee:	8b 81       	ldd	r24, Y+3	; 0x03
    3cf0:	88 2f       	mov	r24, r24
    3cf2:	90 e0       	ldi	r25, 0x00	; 0
    3cf4:	b9 01       	movw	r22, r18
    3cf6:	02 c0       	rjmp	.+4      	; 0x3cfc <DIO_writePin+0x100>
    3cf8:	66 0f       	add	r22, r22
    3cfa:	77 1f       	adc	r23, r23
    3cfc:	8a 95       	dec	r24
    3cfe:	e2 f7       	brpl	.-8      	; 0x3cf8 <DIO_writePin+0xfc>
    3d00:	cb 01       	movw	r24, r22
    3d02:	84 2b       	or	r24, r20
    3d04:	8c 93       	st	X, r24
    3d06:	43 c0       	rjmp	.+134    	; 0x3d8e <DIO_writePin+0x192>
            break;

        case DIO_PORTC_ID:
            WRITE_BIT(PORTC,a_pinID,a_value);
    3d08:	a5 e3       	ldi	r26, 0x35	; 53
    3d0a:	b0 e0       	ldi	r27, 0x00	; 0
    3d0c:	e5 e3       	ldi	r30, 0x35	; 53
    3d0e:	f0 e0       	ldi	r31, 0x00	; 0
    3d10:	80 81       	ld	r24, Z
    3d12:	48 2f       	mov	r20, r24
    3d14:	8b 81       	ldd	r24, Y+3	; 0x03
    3d16:	28 2f       	mov	r18, r24
    3d18:	30 e0       	ldi	r19, 0x00	; 0
    3d1a:	81 e0       	ldi	r24, 0x01	; 1
    3d1c:	90 e0       	ldi	r25, 0x00	; 0
    3d1e:	02 c0       	rjmp	.+4      	; 0x3d24 <DIO_writePin+0x128>
    3d20:	88 0f       	add	r24, r24
    3d22:	99 1f       	adc	r25, r25
    3d24:	2a 95       	dec	r18
    3d26:	e2 f7       	brpl	.-8      	; 0x3d20 <DIO_writePin+0x124>
    3d28:	80 95       	com	r24
    3d2a:	48 23       	and	r20, r24
    3d2c:	8c 81       	ldd	r24, Y+4	; 0x04
    3d2e:	28 2f       	mov	r18, r24
    3d30:	30 e0       	ldi	r19, 0x00	; 0
    3d32:	8b 81       	ldd	r24, Y+3	; 0x03
    3d34:	88 2f       	mov	r24, r24
    3d36:	90 e0       	ldi	r25, 0x00	; 0
    3d38:	b9 01       	movw	r22, r18
    3d3a:	02 c0       	rjmp	.+4      	; 0x3d40 <DIO_writePin+0x144>
    3d3c:	66 0f       	add	r22, r22
    3d3e:	77 1f       	adc	r23, r23
    3d40:	8a 95       	dec	r24
    3d42:	e2 f7       	brpl	.-8      	; 0x3d3c <DIO_writePin+0x140>
    3d44:	cb 01       	movw	r24, r22
    3d46:	84 2b       	or	r24, r20
    3d48:	8c 93       	st	X, r24
    3d4a:	21 c0       	rjmp	.+66     	; 0x3d8e <DIO_writePin+0x192>
            break;

        case DIO_PORTD_ID:
            WRITE_BIT(PORTD,a_pinID,a_value);
    3d4c:	a2 e3       	ldi	r26, 0x32	; 50
    3d4e:	b0 e0       	ldi	r27, 0x00	; 0
    3d50:	e2 e3       	ldi	r30, 0x32	; 50
    3d52:	f0 e0       	ldi	r31, 0x00	; 0
    3d54:	80 81       	ld	r24, Z
    3d56:	48 2f       	mov	r20, r24
    3d58:	8b 81       	ldd	r24, Y+3	; 0x03
    3d5a:	28 2f       	mov	r18, r24
    3d5c:	30 e0       	ldi	r19, 0x00	; 0
    3d5e:	81 e0       	ldi	r24, 0x01	; 1
    3d60:	90 e0       	ldi	r25, 0x00	; 0
    3d62:	02 c0       	rjmp	.+4      	; 0x3d68 <DIO_writePin+0x16c>
    3d64:	88 0f       	add	r24, r24
    3d66:	99 1f       	adc	r25, r25
    3d68:	2a 95       	dec	r18
    3d6a:	e2 f7       	brpl	.-8      	; 0x3d64 <DIO_writePin+0x168>
    3d6c:	80 95       	com	r24
    3d6e:	48 23       	and	r20, r24
    3d70:	8c 81       	ldd	r24, Y+4	; 0x04
    3d72:	28 2f       	mov	r18, r24
    3d74:	30 e0       	ldi	r19, 0x00	; 0
    3d76:	8b 81       	ldd	r24, Y+3	; 0x03
    3d78:	88 2f       	mov	r24, r24
    3d7a:	90 e0       	ldi	r25, 0x00	; 0
    3d7c:	b9 01       	movw	r22, r18
    3d7e:	02 c0       	rjmp	.+4      	; 0x3d84 <DIO_writePin+0x188>
    3d80:	66 0f       	add	r22, r22
    3d82:	77 1f       	adc	r23, r23
    3d84:	8a 95       	dec	r24
    3d86:	e2 f7       	brpl	.-8      	; 0x3d80 <DIO_writePin+0x184>
    3d88:	cb 01       	movw	r24, r22
    3d8a:	84 2b       	or	r24, r20
    3d8c:	8c 93       	st	X, r24
            /* Do Nothing. */
            break;
        }
    }

    return LOC_errorStatus;
    3d8e:	89 81       	ldd	r24, Y+1	; 0x01
}
    3d90:	26 96       	adiw	r28, 0x06	; 6
    3d92:	0f b6       	in	r0, 0x3f	; 63
    3d94:	f8 94       	cli
    3d96:	de bf       	out	0x3e, r29	; 62
    3d98:	0f be       	out	0x3f, r0	; 63
    3d9a:	cd bf       	out	0x3d, r28	; 61
    3d9c:	cf 91       	pop	r28
    3d9e:	df 91       	pop	r29
    3da0:	08 95       	ret

00003da2 <DIO_writePort>:
 * [return]        : The function returns the error status: - No Errors.
 *                                                          - Port Number Error.
 *                                                          - Invalid Level Error.
 ====================================================================================================================*/
DIO_errorStatus DIO_writePort(uint8 a_portID, uint8 a_value)
{
    3da2:	df 93       	push	r29
    3da4:	cf 93       	push	r28
    3da6:	00 d0       	rcall	.+0      	; 0x3da8 <DIO_writePort+0x6>
    3da8:	00 d0       	rcall	.+0      	; 0x3daa <DIO_writePort+0x8>
    3daa:	0f 92       	push	r0
    3dac:	cd b7       	in	r28, 0x3d	; 61
    3dae:	de b7       	in	r29, 0x3e	; 62
    3db0:	8a 83       	std	Y+2, r24	; 0x02
    3db2:	6b 83       	std	Y+3, r22	; 0x03
    DIO_errorStatus LOC_errorStatus = DIO_NO_ERRORS;
    3db4:	19 82       	std	Y+1, r1	; 0x01

    if(a_portID >= DIO_NUM_OF_PORTS)
    3db6:	8a 81       	ldd	r24, Y+2	; 0x02
    3db8:	84 30       	cpi	r24, 0x04	; 4
    3dba:	18 f0       	brcs	.+6      	; 0x3dc2 <DIO_writePort+0x20>
    {
        LOC_errorStatus = DIO_PORT_NUM_ERROR;
    3dbc:	81 e0       	ldi	r24, 0x01	; 1
    3dbe:	89 83       	std	Y+1, r24	; 0x01
    3dc0:	32 c0       	rjmp	.+100    	; 0x3e26 <DIO_writePort+0x84>
        LOC_errorStatus = DIO_LEVEL_ERROR;
    }

    else
    {
        switch (a_portID)
    3dc2:	8a 81       	ldd	r24, Y+2	; 0x02
    3dc4:	28 2f       	mov	r18, r24
    3dc6:	30 e0       	ldi	r19, 0x00	; 0
    3dc8:	3d 83       	std	Y+5, r19	; 0x05
    3dca:	2c 83       	std	Y+4, r18	; 0x04
    3dcc:	8c 81       	ldd	r24, Y+4	; 0x04
    3dce:	9d 81       	ldd	r25, Y+5	; 0x05
    3dd0:	81 30       	cpi	r24, 0x01	; 1
    3dd2:	91 05       	cpc	r25, r1
    3dd4:	d1 f0       	breq	.+52     	; 0x3e0a <DIO_writePort+0x68>
    3dd6:	2c 81       	ldd	r18, Y+4	; 0x04
    3dd8:	3d 81       	ldd	r19, Y+5	; 0x05
    3dda:	22 30       	cpi	r18, 0x02	; 2
    3ddc:	31 05       	cpc	r19, r1
    3dde:	2c f4       	brge	.+10     	; 0x3dea <DIO_writePort+0x48>
    3de0:	8c 81       	ldd	r24, Y+4	; 0x04
    3de2:	9d 81       	ldd	r25, Y+5	; 0x05
    3de4:	00 97       	sbiw	r24, 0x00	; 0
    3de6:	61 f0       	breq	.+24     	; 0x3e00 <DIO_writePort+0x5e>
    3de8:	1e c0       	rjmp	.+60     	; 0x3e26 <DIO_writePort+0x84>
    3dea:	2c 81       	ldd	r18, Y+4	; 0x04
    3dec:	3d 81       	ldd	r19, Y+5	; 0x05
    3dee:	22 30       	cpi	r18, 0x02	; 2
    3df0:	31 05       	cpc	r19, r1
    3df2:	81 f0       	breq	.+32     	; 0x3e14 <DIO_writePort+0x72>
    3df4:	8c 81       	ldd	r24, Y+4	; 0x04
    3df6:	9d 81       	ldd	r25, Y+5	; 0x05
    3df8:	83 30       	cpi	r24, 0x03	; 3
    3dfa:	91 05       	cpc	r25, r1
    3dfc:	81 f0       	breq	.+32     	; 0x3e1e <DIO_writePort+0x7c>
    3dfe:	13 c0       	rjmp	.+38     	; 0x3e26 <DIO_writePort+0x84>
        {
        case DIO_PORTA_ID:
            PORTA = a_value;
    3e00:	eb e3       	ldi	r30, 0x3B	; 59
    3e02:	f0 e0       	ldi	r31, 0x00	; 0
    3e04:	8b 81       	ldd	r24, Y+3	; 0x03
    3e06:	80 83       	st	Z, r24
    3e08:	0e c0       	rjmp	.+28     	; 0x3e26 <DIO_writePort+0x84>
            break;

        case DIO_PORTB_ID:
            PORTB = a_value;
    3e0a:	e8 e3       	ldi	r30, 0x38	; 56
    3e0c:	f0 e0       	ldi	r31, 0x00	; 0
    3e0e:	8b 81       	ldd	r24, Y+3	; 0x03
    3e10:	80 83       	st	Z, r24
    3e12:	09 c0       	rjmp	.+18     	; 0x3e26 <DIO_writePort+0x84>
            break;

        case DIO_PORTC_ID:
            PORTC = a_value;
    3e14:	e5 e3       	ldi	r30, 0x35	; 53
    3e16:	f0 e0       	ldi	r31, 0x00	; 0
    3e18:	8b 81       	ldd	r24, Y+3	; 0x03
    3e1a:	80 83       	st	Z, r24
    3e1c:	04 c0       	rjmp	.+8      	; 0x3e26 <DIO_writePort+0x84>
            break;

        case DIO_PORTD_ID:
            PORTD = a_value;
    3e1e:	e2 e3       	ldi	r30, 0x32	; 50
    3e20:	f0 e0       	ldi	r31, 0x00	; 0
    3e22:	8b 81       	ldd	r24, Y+3	; 0x03
    3e24:	80 83       	st	Z, r24
            /* Do Nothing. */
            break;
        }
    }

    return LOC_errorStatus;
    3e26:	89 81       	ldd	r24, Y+1	; 0x01
}
    3e28:	0f 90       	pop	r0
    3e2a:	0f 90       	pop	r0
    3e2c:	0f 90       	pop	r0
    3e2e:	0f 90       	pop	r0
    3e30:	0f 90       	pop	r0
    3e32:	cf 91       	pop	r28
    3e34:	df 91       	pop	r29
    3e36:	08 95       	ret

00003e38 <DIO_readPin>:
 *                                                          - Port Number Error.
 *                                                          - Pin Number Error.
 *                                                          - Null Pointer Error.
 ====================================================================================================================*/
DIO_errorStatus DIO_readPin(uint8 a_portID, uint8 a_pinID, DIO_pinStatus* a_ptr2value)
{
    3e38:	df 93       	push	r29
    3e3a:	cf 93       	push	r28
    3e3c:	cd b7       	in	r28, 0x3d	; 61
    3e3e:	de b7       	in	r29, 0x3e	; 62
    3e40:	2b 97       	sbiw	r28, 0x0b	; 11
    3e42:	0f b6       	in	r0, 0x3f	; 63
    3e44:	f8 94       	cli
    3e46:	de bf       	out	0x3e, r29	; 62
    3e48:	0f be       	out	0x3f, r0	; 63
    3e4a:	cd bf       	out	0x3d, r28	; 61
    3e4c:	8a 83       	std	Y+2, r24	; 0x02
    3e4e:	6b 83       	std	Y+3, r22	; 0x03
    3e50:	5d 83       	std	Y+5, r21	; 0x05
    3e52:	4c 83       	std	Y+4, r20	; 0x04
    DIO_errorStatus LOC_errorStatus = DIO_NO_ERRORS;
    3e54:	19 82       	std	Y+1, r1	; 0x01

    if(a_portID >= DIO_NUM_OF_PORTS)
    3e56:	8a 81       	ldd	r24, Y+2	; 0x02
    3e58:	84 30       	cpi	r24, 0x04	; 4
    3e5a:	18 f0       	brcs	.+6      	; 0x3e62 <DIO_readPin+0x2a>
    {
        LOC_errorStatus = DIO_PORT_NUM_ERROR;
    3e5c:	81 e0       	ldi	r24, 0x01	; 1
    3e5e:	89 83       	std	Y+1, r24	; 0x01
    3e60:	9e c0       	rjmp	.+316    	; 0x3f9e <DIO_readPin+0x166>
    }

    else if(a_pinID >= DIO_NUM_OF_PINS_PER_PORT)
    3e62:	8b 81       	ldd	r24, Y+3	; 0x03
    3e64:	88 30       	cpi	r24, 0x08	; 8
    3e66:	18 f0       	brcs	.+6      	; 0x3e6e <DIO_readPin+0x36>
    {
        LOC_errorStatus = DIO_PIN_NUM_ERROR;
    3e68:	82 e0       	ldi	r24, 0x02	; 2
    3e6a:	89 83       	std	Y+1, r24	; 0x01
    3e6c:	98 c0       	rjmp	.+304    	; 0x3f9e <DIO_readPin+0x166>
    }

    else if(a_ptr2value == NULL_PTR)
    3e6e:	8c 81       	ldd	r24, Y+4	; 0x04
    3e70:	9d 81       	ldd	r25, Y+5	; 0x05
    3e72:	00 97       	sbiw	r24, 0x00	; 0
    3e74:	19 f4       	brne	.+6      	; 0x3e7c <DIO_readPin+0x44>
    {
        LOC_errorStatus = DIO_NULL_PTR_ERROR;
    3e76:	84 e0       	ldi	r24, 0x04	; 4
    3e78:	89 83       	std	Y+1, r24	; 0x01
    3e7a:	91 c0       	rjmp	.+290    	; 0x3f9e <DIO_readPin+0x166>
    }

    else
    {
        switch (a_portID)
    3e7c:	8a 81       	ldd	r24, Y+2	; 0x02
    3e7e:	28 2f       	mov	r18, r24
    3e80:	30 e0       	ldi	r19, 0x00	; 0
    3e82:	3b 87       	std	Y+11, r19	; 0x0b
    3e84:	2a 87       	std	Y+10, r18	; 0x0a
    3e86:	4a 85       	ldd	r20, Y+10	; 0x0a
    3e88:	5b 85       	ldd	r21, Y+11	; 0x0b
    3e8a:	41 30       	cpi	r20, 0x01	; 1
    3e8c:	51 05       	cpc	r21, r1
    3e8e:	a1 f1       	breq	.+104    	; 0x3ef8 <DIO_readPin+0xc0>
    3e90:	8a 85       	ldd	r24, Y+10	; 0x0a
    3e92:	9b 85       	ldd	r25, Y+11	; 0x0b
    3e94:	82 30       	cpi	r24, 0x02	; 2
    3e96:	91 05       	cpc	r25, r1
    3e98:	34 f4       	brge	.+12     	; 0x3ea6 <DIO_readPin+0x6e>
    3e9a:	2a 85       	ldd	r18, Y+10	; 0x0a
    3e9c:	3b 85       	ldd	r19, Y+11	; 0x0b
    3e9e:	21 15       	cp	r18, r1
    3ea0:	31 05       	cpc	r19, r1
    3ea2:	71 f0       	breq	.+28     	; 0x3ec0 <DIO_readPin+0x88>
    3ea4:	7c c0       	rjmp	.+248    	; 0x3f9e <DIO_readPin+0x166>
    3ea6:	4a 85       	ldd	r20, Y+10	; 0x0a
    3ea8:	5b 85       	ldd	r21, Y+11	; 0x0b
    3eaa:	42 30       	cpi	r20, 0x02	; 2
    3eac:	51 05       	cpc	r21, r1
    3eae:	09 f4       	brne	.+2      	; 0x3eb2 <DIO_readPin+0x7a>
    3eb0:	3f c0       	rjmp	.+126    	; 0x3f30 <DIO_readPin+0xf8>
    3eb2:	8a 85       	ldd	r24, Y+10	; 0x0a
    3eb4:	9b 85       	ldd	r25, Y+11	; 0x0b
    3eb6:	83 30       	cpi	r24, 0x03	; 3
    3eb8:	91 05       	cpc	r25, r1
    3eba:	09 f4       	brne	.+2      	; 0x3ebe <DIO_readPin+0x86>
    3ebc:	55 c0       	rjmp	.+170    	; 0x3f68 <DIO_readPin+0x130>
    3ebe:	6f c0       	rjmp	.+222    	; 0x3f9e <DIO_readPin+0x166>
        {
        case DIO_PORTA_ID:
            *a_ptr2value = GET_BIT(PINA,a_pinID);
    3ec0:	e9 e3       	ldi	r30, 0x39	; 57
    3ec2:	f0 e0       	ldi	r31, 0x00	; 0
    3ec4:	80 81       	ld	r24, Z
    3ec6:	28 2f       	mov	r18, r24
    3ec8:	30 e0       	ldi	r19, 0x00	; 0
    3eca:	8b 81       	ldd	r24, Y+3	; 0x03
    3ecc:	88 2f       	mov	r24, r24
    3ece:	90 e0       	ldi	r25, 0x00	; 0
    3ed0:	a9 01       	movw	r20, r18
    3ed2:	02 c0       	rjmp	.+4      	; 0x3ed8 <DIO_readPin+0xa0>
    3ed4:	55 95       	asr	r21
    3ed6:	47 95       	ror	r20
    3ed8:	8a 95       	dec	r24
    3eda:	e2 f7       	brpl	.-8      	; 0x3ed4 <DIO_readPin+0x9c>
    3edc:	ca 01       	movw	r24, r20
    3ede:	81 70       	andi	r24, 0x01	; 1
    3ee0:	90 70       	andi	r25, 0x00	; 0
    3ee2:	88 23       	and	r24, r24
    3ee4:	19 f0       	breq	.+6      	; 0x3eec <DIO_readPin+0xb4>
    3ee6:	51 e0       	ldi	r21, 0x01	; 1
    3ee8:	59 87       	std	Y+9, r21	; 0x09
    3eea:	01 c0       	rjmp	.+2      	; 0x3eee <DIO_readPin+0xb6>
    3eec:	19 86       	std	Y+9, r1	; 0x09
    3eee:	ec 81       	ldd	r30, Y+4	; 0x04
    3ef0:	fd 81       	ldd	r31, Y+5	; 0x05
    3ef2:	89 85       	ldd	r24, Y+9	; 0x09
    3ef4:	80 83       	st	Z, r24
    3ef6:	53 c0       	rjmp	.+166    	; 0x3f9e <DIO_readPin+0x166>
            break;

        case DIO_PORTB_ID:
            *a_ptr2value = GET_BIT(PINB,a_pinID);
    3ef8:	e6 e3       	ldi	r30, 0x36	; 54
    3efa:	f0 e0       	ldi	r31, 0x00	; 0
    3efc:	80 81       	ld	r24, Z
    3efe:	28 2f       	mov	r18, r24
    3f00:	30 e0       	ldi	r19, 0x00	; 0
    3f02:	8b 81       	ldd	r24, Y+3	; 0x03
    3f04:	88 2f       	mov	r24, r24
    3f06:	90 e0       	ldi	r25, 0x00	; 0
    3f08:	a9 01       	movw	r20, r18
    3f0a:	02 c0       	rjmp	.+4      	; 0x3f10 <DIO_readPin+0xd8>
    3f0c:	55 95       	asr	r21
    3f0e:	47 95       	ror	r20
    3f10:	8a 95       	dec	r24
    3f12:	e2 f7       	brpl	.-8      	; 0x3f0c <DIO_readPin+0xd4>
    3f14:	ca 01       	movw	r24, r20
    3f16:	81 70       	andi	r24, 0x01	; 1
    3f18:	90 70       	andi	r25, 0x00	; 0
    3f1a:	88 23       	and	r24, r24
    3f1c:	19 f0       	breq	.+6      	; 0x3f24 <DIO_readPin+0xec>
    3f1e:	51 e0       	ldi	r21, 0x01	; 1
    3f20:	58 87       	std	Y+8, r21	; 0x08
    3f22:	01 c0       	rjmp	.+2      	; 0x3f26 <DIO_readPin+0xee>
    3f24:	18 86       	std	Y+8, r1	; 0x08
    3f26:	ec 81       	ldd	r30, Y+4	; 0x04
    3f28:	fd 81       	ldd	r31, Y+5	; 0x05
    3f2a:	88 85       	ldd	r24, Y+8	; 0x08
    3f2c:	80 83       	st	Z, r24
    3f2e:	37 c0       	rjmp	.+110    	; 0x3f9e <DIO_readPin+0x166>
            break;

        case DIO_PORTC_ID:
            *a_ptr2value = GET_BIT(PINC,a_pinID);
    3f30:	e3 e3       	ldi	r30, 0x33	; 51
    3f32:	f0 e0       	ldi	r31, 0x00	; 0
    3f34:	80 81       	ld	r24, Z
    3f36:	28 2f       	mov	r18, r24
    3f38:	30 e0       	ldi	r19, 0x00	; 0
    3f3a:	8b 81       	ldd	r24, Y+3	; 0x03
    3f3c:	88 2f       	mov	r24, r24
    3f3e:	90 e0       	ldi	r25, 0x00	; 0
    3f40:	a9 01       	movw	r20, r18
    3f42:	02 c0       	rjmp	.+4      	; 0x3f48 <DIO_readPin+0x110>
    3f44:	55 95       	asr	r21
    3f46:	47 95       	ror	r20
    3f48:	8a 95       	dec	r24
    3f4a:	e2 f7       	brpl	.-8      	; 0x3f44 <DIO_readPin+0x10c>
    3f4c:	ca 01       	movw	r24, r20
    3f4e:	81 70       	andi	r24, 0x01	; 1
    3f50:	90 70       	andi	r25, 0x00	; 0
    3f52:	88 23       	and	r24, r24
    3f54:	19 f0       	breq	.+6      	; 0x3f5c <DIO_readPin+0x124>
    3f56:	51 e0       	ldi	r21, 0x01	; 1
    3f58:	5f 83       	std	Y+7, r21	; 0x07
    3f5a:	01 c0       	rjmp	.+2      	; 0x3f5e <DIO_readPin+0x126>
    3f5c:	1f 82       	std	Y+7, r1	; 0x07
    3f5e:	ec 81       	ldd	r30, Y+4	; 0x04
    3f60:	fd 81       	ldd	r31, Y+5	; 0x05
    3f62:	8f 81       	ldd	r24, Y+7	; 0x07
    3f64:	80 83       	st	Z, r24
    3f66:	1b c0       	rjmp	.+54     	; 0x3f9e <DIO_readPin+0x166>
            break;

        case DIO_PORTD_ID:
            *a_ptr2value = GET_BIT(PIND,a_pinID);
    3f68:	e0 e3       	ldi	r30, 0x30	; 48
    3f6a:	f0 e0       	ldi	r31, 0x00	; 0
    3f6c:	80 81       	ld	r24, Z
    3f6e:	28 2f       	mov	r18, r24
    3f70:	30 e0       	ldi	r19, 0x00	; 0
    3f72:	8b 81       	ldd	r24, Y+3	; 0x03
    3f74:	88 2f       	mov	r24, r24
    3f76:	90 e0       	ldi	r25, 0x00	; 0
    3f78:	a9 01       	movw	r20, r18
    3f7a:	02 c0       	rjmp	.+4      	; 0x3f80 <DIO_readPin+0x148>
    3f7c:	55 95       	asr	r21
    3f7e:	47 95       	ror	r20
    3f80:	8a 95       	dec	r24
    3f82:	e2 f7       	brpl	.-8      	; 0x3f7c <DIO_readPin+0x144>
    3f84:	ca 01       	movw	r24, r20
    3f86:	81 70       	andi	r24, 0x01	; 1
    3f88:	90 70       	andi	r25, 0x00	; 0
    3f8a:	88 23       	and	r24, r24
    3f8c:	19 f0       	breq	.+6      	; 0x3f94 <DIO_readPin+0x15c>
    3f8e:	51 e0       	ldi	r21, 0x01	; 1
    3f90:	5e 83       	std	Y+6, r21	; 0x06
    3f92:	01 c0       	rjmp	.+2      	; 0x3f96 <DIO_readPin+0x15e>
    3f94:	1e 82       	std	Y+6, r1	; 0x06
    3f96:	ec 81       	ldd	r30, Y+4	; 0x04
    3f98:	fd 81       	ldd	r31, Y+5	; 0x05
    3f9a:	8e 81       	ldd	r24, Y+6	; 0x06
    3f9c:	80 83       	st	Z, r24
            /* Do Nothing. */
            break;
        }
    }

    return LOC_errorStatus;
    3f9e:	89 81       	ldd	r24, Y+1	; 0x01
}
    3fa0:	2b 96       	adiw	r28, 0x0b	; 11
    3fa2:	0f b6       	in	r0, 0x3f	; 63
    3fa4:	f8 94       	cli
    3fa6:	de bf       	out	0x3e, r29	; 62
    3fa8:	0f be       	out	0x3f, r0	; 63
    3faa:	cd bf       	out	0x3d, r28	; 61
    3fac:	cf 91       	pop	r28
    3fae:	df 91       	pop	r29
    3fb0:	08 95       	ret

00003fb2 <DIO_readPort>:
 * [return]        : The function returns the error status: - No Errors.
 *                                                          - Port Number Error.
 *                                                          - Null Pointer Error.
 ====================================================================================================================*/
DIO_errorStatus DIO_readPort(uint8 a_portID, uint8* a_ptr2value)
{
    3fb2:	df 93       	push	r29
    3fb4:	cf 93       	push	r28
    3fb6:	00 d0       	rcall	.+0      	; 0x3fb8 <DIO_readPort+0x6>
    3fb8:	00 d0       	rcall	.+0      	; 0x3fba <DIO_readPort+0x8>
    3fba:	00 d0       	rcall	.+0      	; 0x3fbc <DIO_readPort+0xa>
    3fbc:	cd b7       	in	r28, 0x3d	; 61
    3fbe:	de b7       	in	r29, 0x3e	; 62
    3fc0:	8a 83       	std	Y+2, r24	; 0x02
    3fc2:	7c 83       	std	Y+4, r23	; 0x04
    3fc4:	6b 83       	std	Y+3, r22	; 0x03
    DIO_errorStatus LOC_errorStatus = DIO_NO_ERRORS;
    3fc6:	19 82       	std	Y+1, r1	; 0x01

    if(a_portID >= DIO_NUM_OF_PORTS)
    3fc8:	8a 81       	ldd	r24, Y+2	; 0x02
    3fca:	84 30       	cpi	r24, 0x04	; 4
    3fcc:	18 f0       	brcs	.+6      	; 0x3fd4 <DIO_readPort+0x22>
    {
        LOC_errorStatus = DIO_PORT_NUM_ERROR;
    3fce:	81 e0       	ldi	r24, 0x01	; 1
    3fd0:	89 83       	std	Y+1, r24	; 0x01
    3fd2:	41 c0       	rjmp	.+130    	; 0x4056 <DIO_readPort+0xa4>
    }

    else if(a_ptr2value == NULL_PTR)
    3fd4:	8b 81       	ldd	r24, Y+3	; 0x03
    3fd6:	9c 81       	ldd	r25, Y+4	; 0x04
    3fd8:	00 97       	sbiw	r24, 0x00	; 0
    3fda:	19 f4       	brne	.+6      	; 0x3fe2 <DIO_readPort+0x30>
    {
        LOC_errorStatus = DIO_NULL_PTR_ERROR;
    3fdc:	84 e0       	ldi	r24, 0x04	; 4
    3fde:	89 83       	std	Y+1, r24	; 0x01
    3fe0:	3a c0       	rjmp	.+116    	; 0x4056 <DIO_readPort+0xa4>
    }

    else
    {
        switch (a_portID)
    3fe2:	8a 81       	ldd	r24, Y+2	; 0x02
    3fe4:	28 2f       	mov	r18, r24
    3fe6:	30 e0       	ldi	r19, 0x00	; 0
    3fe8:	3e 83       	std	Y+6, r19	; 0x06
    3fea:	2d 83       	std	Y+5, r18	; 0x05
    3fec:	8d 81       	ldd	r24, Y+5	; 0x05
    3fee:	9e 81       	ldd	r25, Y+6	; 0x06
    3ff0:	81 30       	cpi	r24, 0x01	; 1
    3ff2:	91 05       	cpc	r25, r1
    3ff4:	e1 f0       	breq	.+56     	; 0x402e <DIO_readPort+0x7c>
    3ff6:	2d 81       	ldd	r18, Y+5	; 0x05
    3ff8:	3e 81       	ldd	r19, Y+6	; 0x06
    3ffa:	22 30       	cpi	r18, 0x02	; 2
    3ffc:	31 05       	cpc	r19, r1
    3ffe:	2c f4       	brge	.+10     	; 0x400a <DIO_readPort+0x58>
    4000:	8d 81       	ldd	r24, Y+5	; 0x05
    4002:	9e 81       	ldd	r25, Y+6	; 0x06
    4004:	00 97       	sbiw	r24, 0x00	; 0
    4006:	61 f0       	breq	.+24     	; 0x4020 <DIO_readPort+0x6e>
    4008:	26 c0       	rjmp	.+76     	; 0x4056 <DIO_readPort+0xa4>
    400a:	2d 81       	ldd	r18, Y+5	; 0x05
    400c:	3e 81       	ldd	r19, Y+6	; 0x06
    400e:	22 30       	cpi	r18, 0x02	; 2
    4010:	31 05       	cpc	r19, r1
    4012:	a1 f0       	breq	.+40     	; 0x403c <DIO_readPort+0x8a>
    4014:	8d 81       	ldd	r24, Y+5	; 0x05
    4016:	9e 81       	ldd	r25, Y+6	; 0x06
    4018:	83 30       	cpi	r24, 0x03	; 3
    401a:	91 05       	cpc	r25, r1
    401c:	b1 f0       	breq	.+44     	; 0x404a <DIO_readPort+0x98>
    401e:	1b c0       	rjmp	.+54     	; 0x4056 <DIO_readPort+0xa4>
        {
        case DIO_PORTA_ID:
            *a_ptr2value = PINA;
    4020:	e9 e3       	ldi	r30, 0x39	; 57
    4022:	f0 e0       	ldi	r31, 0x00	; 0
    4024:	80 81       	ld	r24, Z
    4026:	eb 81       	ldd	r30, Y+3	; 0x03
    4028:	fc 81       	ldd	r31, Y+4	; 0x04
    402a:	80 83       	st	Z, r24
    402c:	14 c0       	rjmp	.+40     	; 0x4056 <DIO_readPort+0xa4>
            break;

        case DIO_PORTB_ID:
            *a_ptr2value = PINB;
    402e:	e6 e3       	ldi	r30, 0x36	; 54
    4030:	f0 e0       	ldi	r31, 0x00	; 0
    4032:	80 81       	ld	r24, Z
    4034:	eb 81       	ldd	r30, Y+3	; 0x03
    4036:	fc 81       	ldd	r31, Y+4	; 0x04
    4038:	80 83       	st	Z, r24
    403a:	0d c0       	rjmp	.+26     	; 0x4056 <DIO_readPort+0xa4>
            break;

        case DIO_PORTC_ID:
            *a_ptr2value = PINC;
    403c:	e3 e3       	ldi	r30, 0x33	; 51
    403e:	f0 e0       	ldi	r31, 0x00	; 0
    4040:	80 81       	ld	r24, Z
    4042:	eb 81       	ldd	r30, Y+3	; 0x03
    4044:	fc 81       	ldd	r31, Y+4	; 0x04
    4046:	80 83       	st	Z, r24
    4048:	06 c0       	rjmp	.+12     	; 0x4056 <DIO_readPort+0xa4>
            break;

        case DIO_PORTD_ID:
            *a_ptr2value = PIND;
    404a:	e0 e3       	ldi	r30, 0x30	; 48
    404c:	f0 e0       	ldi	r31, 0x00	; 0
    404e:	80 81       	ld	r24, Z
    4050:	eb 81       	ldd	r30, Y+3	; 0x03
    4052:	fc 81       	ldd	r31, Y+4	; 0x04
    4054:	80 83       	st	Z, r24
            /* Do Nothing. */
            break;
        }
    }

    return LOC_errorStatus;
    4056:	89 81       	ldd	r24, Y+1	; 0x01
}
    4058:	26 96       	adiw	r28, 0x06	; 6
    405a:	0f b6       	in	r0, 0x3f	; 63
    405c:	f8 94       	cli
    405e:	de bf       	out	0x3e, r29	; 62
    4060:	0f be       	out	0x3f, r0	; 63
    4062:	cd bf       	out	0x3d, r28	; 61
    4064:	cf 91       	pop	r28
    4066:	df 91       	pop	r29
    4068:	08 95       	ret

0000406a <DIO_togglePin>:
 * [return]        : The function returns the error status: - No Errors.
 *                                                          - Port Number Error.
 *                                                          - Pin Number Error.
 ====================================================================================================================*/
DIO_errorStatus DIO_togglePin(uint8 a_portID, uint8 a_pinID)
{
    406a:	df 93       	push	r29
    406c:	cf 93       	push	r28
    406e:	00 d0       	rcall	.+0      	; 0x4070 <DIO_togglePin+0x6>
    4070:	00 d0       	rcall	.+0      	; 0x4072 <DIO_togglePin+0x8>
    4072:	0f 92       	push	r0
    4074:	cd b7       	in	r28, 0x3d	; 61
    4076:	de b7       	in	r29, 0x3e	; 62
    4078:	8a 83       	std	Y+2, r24	; 0x02
    407a:	6b 83       	std	Y+3, r22	; 0x03
    DIO_errorStatus LOC_errorStatus = DIO_NO_ERRORS;
    407c:	19 82       	std	Y+1, r1	; 0x01

    if(a_portID >= DIO_NUM_OF_PORTS)
    407e:	8a 81       	ldd	r24, Y+2	; 0x02
    4080:	84 30       	cpi	r24, 0x04	; 4
    4082:	18 f0       	brcs	.+6      	; 0x408a <DIO_togglePin+0x20>
    {
        LOC_errorStatus = DIO_PORT_NUM_ERROR;
    4084:	81 e0       	ldi	r24, 0x01	; 1
    4086:	89 83       	std	Y+1, r24	; 0x01
    4088:	74 c0       	rjmp	.+232    	; 0x4172 <DIO_togglePin+0x108>
    }

    else if(a_pinID >= DIO_NUM_OF_PINS_PER_PORT)
    408a:	8b 81       	ldd	r24, Y+3	; 0x03
    408c:	88 30       	cpi	r24, 0x08	; 8
    408e:	18 f0       	brcs	.+6      	; 0x4096 <DIO_togglePin+0x2c>
    {
        LOC_errorStatus = DIO_PIN_NUM_ERROR;
    4090:	82 e0       	ldi	r24, 0x02	; 2
    4092:	89 83       	std	Y+1, r24	; 0x01
    4094:	6e c0       	rjmp	.+220    	; 0x4172 <DIO_togglePin+0x108>
    }

    else
    {
        switch (a_portID)
    4096:	8a 81       	ldd	r24, Y+2	; 0x02
    4098:	28 2f       	mov	r18, r24
    409a:	30 e0       	ldi	r19, 0x00	; 0
    409c:	3d 83       	std	Y+5, r19	; 0x05
    409e:	2c 83       	std	Y+4, r18	; 0x04
    40a0:	8c 81       	ldd	r24, Y+4	; 0x04
    40a2:	9d 81       	ldd	r25, Y+5	; 0x05
    40a4:	81 30       	cpi	r24, 0x01	; 1
    40a6:	91 05       	cpc	r25, r1
    40a8:	49 f1       	breq	.+82     	; 0x40fc <DIO_togglePin+0x92>
    40aa:	2c 81       	ldd	r18, Y+4	; 0x04
    40ac:	3d 81       	ldd	r19, Y+5	; 0x05
    40ae:	22 30       	cpi	r18, 0x02	; 2
    40b0:	31 05       	cpc	r19, r1
    40b2:	2c f4       	brge	.+10     	; 0x40be <DIO_togglePin+0x54>
    40b4:	8c 81       	ldd	r24, Y+4	; 0x04
    40b6:	9d 81       	ldd	r25, Y+5	; 0x05
    40b8:	00 97       	sbiw	r24, 0x00	; 0
    40ba:	61 f0       	breq	.+24     	; 0x40d4 <DIO_togglePin+0x6a>
    40bc:	5a c0       	rjmp	.+180    	; 0x4172 <DIO_togglePin+0x108>
    40be:	2c 81       	ldd	r18, Y+4	; 0x04
    40c0:	3d 81       	ldd	r19, Y+5	; 0x05
    40c2:	22 30       	cpi	r18, 0x02	; 2
    40c4:	31 05       	cpc	r19, r1
    40c6:	71 f1       	breq	.+92     	; 0x4124 <DIO_togglePin+0xba>
    40c8:	8c 81       	ldd	r24, Y+4	; 0x04
    40ca:	9d 81       	ldd	r25, Y+5	; 0x05
    40cc:	83 30       	cpi	r24, 0x03	; 3
    40ce:	91 05       	cpc	r25, r1
    40d0:	e9 f1       	breq	.+122    	; 0x414c <DIO_togglePin+0xe2>
    40d2:	4f c0       	rjmp	.+158    	; 0x4172 <DIO_togglePin+0x108>
        {
        case DIO_PORTA_ID:
            TOGGLE_BIT(PORTA,a_pinID);
    40d4:	ab e3       	ldi	r26, 0x3B	; 59
    40d6:	b0 e0       	ldi	r27, 0x00	; 0
    40d8:	eb e3       	ldi	r30, 0x3B	; 59
    40da:	f0 e0       	ldi	r31, 0x00	; 0
    40dc:	80 81       	ld	r24, Z
    40de:	48 2f       	mov	r20, r24
    40e0:	8b 81       	ldd	r24, Y+3	; 0x03
    40e2:	28 2f       	mov	r18, r24
    40e4:	30 e0       	ldi	r19, 0x00	; 0
    40e6:	81 e0       	ldi	r24, 0x01	; 1
    40e8:	90 e0       	ldi	r25, 0x00	; 0
    40ea:	02 2e       	mov	r0, r18
    40ec:	02 c0       	rjmp	.+4      	; 0x40f2 <DIO_togglePin+0x88>
    40ee:	88 0f       	add	r24, r24
    40f0:	99 1f       	adc	r25, r25
    40f2:	0a 94       	dec	r0
    40f4:	e2 f7       	brpl	.-8      	; 0x40ee <DIO_togglePin+0x84>
    40f6:	84 27       	eor	r24, r20
    40f8:	8c 93       	st	X, r24
    40fa:	3b c0       	rjmp	.+118    	; 0x4172 <DIO_togglePin+0x108>
            break;

        case DIO_PORTB_ID:
            TOGGLE_BIT(PORTB,a_pinID);
    40fc:	a8 e3       	ldi	r26, 0x38	; 56
    40fe:	b0 e0       	ldi	r27, 0x00	; 0
    4100:	e8 e3       	ldi	r30, 0x38	; 56
    4102:	f0 e0       	ldi	r31, 0x00	; 0
    4104:	80 81       	ld	r24, Z
    4106:	48 2f       	mov	r20, r24
    4108:	8b 81       	ldd	r24, Y+3	; 0x03
    410a:	28 2f       	mov	r18, r24
    410c:	30 e0       	ldi	r19, 0x00	; 0
    410e:	81 e0       	ldi	r24, 0x01	; 1
    4110:	90 e0       	ldi	r25, 0x00	; 0
    4112:	02 2e       	mov	r0, r18
    4114:	02 c0       	rjmp	.+4      	; 0x411a <DIO_togglePin+0xb0>
    4116:	88 0f       	add	r24, r24
    4118:	99 1f       	adc	r25, r25
    411a:	0a 94       	dec	r0
    411c:	e2 f7       	brpl	.-8      	; 0x4116 <DIO_togglePin+0xac>
    411e:	84 27       	eor	r24, r20
    4120:	8c 93       	st	X, r24
    4122:	27 c0       	rjmp	.+78     	; 0x4172 <DIO_togglePin+0x108>
            break;

        case DIO_PORTC_ID:
            TOGGLE_BIT(PORTC,a_pinID);
    4124:	a5 e3       	ldi	r26, 0x35	; 53
    4126:	b0 e0       	ldi	r27, 0x00	; 0
    4128:	e5 e3       	ldi	r30, 0x35	; 53
    412a:	f0 e0       	ldi	r31, 0x00	; 0
    412c:	80 81       	ld	r24, Z
    412e:	48 2f       	mov	r20, r24
    4130:	8b 81       	ldd	r24, Y+3	; 0x03
    4132:	28 2f       	mov	r18, r24
    4134:	30 e0       	ldi	r19, 0x00	; 0
    4136:	81 e0       	ldi	r24, 0x01	; 1
    4138:	90 e0       	ldi	r25, 0x00	; 0
    413a:	02 2e       	mov	r0, r18
    413c:	02 c0       	rjmp	.+4      	; 0x4142 <DIO_togglePin+0xd8>
    413e:	88 0f       	add	r24, r24
    4140:	99 1f       	adc	r25, r25
    4142:	0a 94       	dec	r0
    4144:	e2 f7       	brpl	.-8      	; 0x413e <DIO_togglePin+0xd4>
    4146:	84 27       	eor	r24, r20
    4148:	8c 93       	st	X, r24
    414a:	13 c0       	rjmp	.+38     	; 0x4172 <DIO_togglePin+0x108>
            break;

        case DIO_PORTD_ID:
            TOGGLE_BIT(PORTD,a_pinID);
    414c:	a2 e3       	ldi	r26, 0x32	; 50
    414e:	b0 e0       	ldi	r27, 0x00	; 0
    4150:	e2 e3       	ldi	r30, 0x32	; 50
    4152:	f0 e0       	ldi	r31, 0x00	; 0
    4154:	80 81       	ld	r24, Z
    4156:	48 2f       	mov	r20, r24
    4158:	8b 81       	ldd	r24, Y+3	; 0x03
    415a:	28 2f       	mov	r18, r24
    415c:	30 e0       	ldi	r19, 0x00	; 0
    415e:	81 e0       	ldi	r24, 0x01	; 1
    4160:	90 e0       	ldi	r25, 0x00	; 0
    4162:	02 2e       	mov	r0, r18
    4164:	02 c0       	rjmp	.+4      	; 0x416a <DIO_togglePin+0x100>
    4166:	88 0f       	add	r24, r24
    4168:	99 1f       	adc	r25, r25
    416a:	0a 94       	dec	r0
    416c:	e2 f7       	brpl	.-8      	; 0x4166 <DIO_togglePin+0xfc>
    416e:	84 27       	eor	r24, r20
    4170:	8c 93       	st	X, r24
            /* Do Nothing. */
            break;
        }
    }

    return LOC_errorStatus;
    4172:	89 81       	ldd	r24, Y+1	; 0x01
}
    4174:	0f 90       	pop	r0
    4176:	0f 90       	pop	r0
    4178:	0f 90       	pop	r0
    417a:	0f 90       	pop	r0
    417c:	0f 90       	pop	r0
    417e:	cf 91       	pop	r28
    4180:	df 91       	pop	r29
    4182:	08 95       	ret

00004184 <LCD_init>:
 * [Description]   : Initialize the LCD by sending initialization command.
 * [Arguments]     : The function takes no arguments.
 * [return]        : The function returns void.
 ====================================================================================================================*/
void LCD_init(void)
{
    4184:	df 93       	push	r29
    4186:	cf 93       	push	r28
    4188:	cd b7       	in	r28, 0x3d	; 61
    418a:	de b7       	in	r29, 0x3e	; 62
	LCD_sendCommand(LCD_4_BIT_2_LINES_INIT2_COMMAND);
	LCD_sendCommand(LCD_4_BIT_2_LINES_SET_COMMAND);

	#elif(LCD_DATA_BIT_MODE == LCD_8_BIT_MODE)

	LCD_sendCommand(LCD_8_BIT_2_LINES_SET_COMMAND);
    418c:	88 e3       	ldi	r24, 0x38	; 56
    418e:	0e 94 d2 20 	call	0x41a4	; 0x41a4 <LCD_sendCommand>

	#endif

	LCD_sendCommand(LCD_CURSOR_OFF_COMMAND);
    4192:	8c e0       	ldi	r24, 0x0C	; 12
    4194:	0e 94 d2 20 	call	0x41a4	; 0x41a4 <LCD_sendCommand>
	LCD_sendCommand(LCD_CLEAR_SCREEN_COMMAND);
    4198:	81 e0       	ldi	r24, 0x01	; 1
    419a:	0e 94 d2 20 	call	0x41a4	; 0x41a4 <LCD_sendCommand>
}
    419e:	cf 91       	pop	r28
    41a0:	df 91       	pop	r29
    41a2:	08 95       	ret

000041a4 <LCD_sendCommand>:
 * [Description]   : Send a specific command to the LCD.
 * [Arguments]     : <a_command>      -> Indicates to the required command.
 * [return]        : The function returns void.
 ====================================================================================================================*/
static void LCD_sendCommand(uint8 a_command)
{
    41a4:	df 93       	push	r29
    41a6:	cf 93       	push	r28
    41a8:	cd b7       	in	r28, 0x3d	; 61
    41aa:	de b7       	in	r29, 0x3e	; 62
    41ac:	e9 97       	sbiw	r28, 0x39	; 57
    41ae:	0f b6       	in	r0, 0x3f	; 63
    41b0:	f8 94       	cli
    41b2:	de bf       	out	0x3e, r29	; 62
    41b4:	0f be       	out	0x3f, r0	; 63
    41b6:	cd bf       	out	0x3d, r28	; 61
    41b8:	89 af       	std	Y+57, r24	; 0x39
	DIO_writePin(LCD_RS_PORT_ID,LCD_RS_PIN_ID,DIO_LOW_PIN);
    41ba:	82 e0       	ldi	r24, 0x02	; 2
    41bc:	60 e0       	ldi	r22, 0x00	; 0
    41be:	40 e0       	ldi	r20, 0x00	; 0
    41c0:	0e 94 fe 1d 	call	0x3bfc	; 0x3bfc <DIO_writePin>
    41c4:	80 e0       	ldi	r24, 0x00	; 0
    41c6:	90 e0       	ldi	r25, 0x00	; 0
    41c8:	a0 e8       	ldi	r26, 0x80	; 128
    41ca:	bf e3       	ldi	r27, 0x3F	; 63
    41cc:	8d ab       	std	Y+53, r24	; 0x35
    41ce:	9e ab       	std	Y+54, r25	; 0x36
    41d0:	af ab       	std	Y+55, r26	; 0x37
    41d2:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    41d4:	6d a9       	ldd	r22, Y+53	; 0x35
    41d6:	7e a9       	ldd	r23, Y+54	; 0x36
    41d8:	8f a9       	ldd	r24, Y+55	; 0x37
    41da:	98 ad       	ldd	r25, Y+56	; 0x38
    41dc:	20 e0       	ldi	r18, 0x00	; 0
    41de:	30 e0       	ldi	r19, 0x00	; 0
    41e0:	4a e7       	ldi	r20, 0x7A	; 122
    41e2:	55 e4       	ldi	r21, 0x45	; 69
    41e4:	0e 94 fd 10 	call	0x21fa	; 0x21fa <__mulsf3>
    41e8:	dc 01       	movw	r26, r24
    41ea:	cb 01       	movw	r24, r22
    41ec:	89 ab       	std	Y+49, r24	; 0x31
    41ee:	9a ab       	std	Y+50, r25	; 0x32
    41f0:	ab ab       	std	Y+51, r26	; 0x33
    41f2:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    41f4:	69 a9       	ldd	r22, Y+49	; 0x31
    41f6:	7a a9       	ldd	r23, Y+50	; 0x32
    41f8:	8b a9       	ldd	r24, Y+51	; 0x33
    41fa:	9c a9       	ldd	r25, Y+52	; 0x34
    41fc:	20 e0       	ldi	r18, 0x00	; 0
    41fe:	30 e0       	ldi	r19, 0x00	; 0
    4200:	40 e8       	ldi	r20, 0x80	; 128
    4202:	5f e3       	ldi	r21, 0x3F	; 63
    4204:	0e 94 57 12 	call	0x24ae	; 0x24ae <__ltsf2>
    4208:	88 23       	and	r24, r24
    420a:	2c f4       	brge	.+10     	; 0x4216 <LCD_sendCommand+0x72>
		__ticks = 1;
    420c:	81 e0       	ldi	r24, 0x01	; 1
    420e:	90 e0       	ldi	r25, 0x00	; 0
    4210:	98 ab       	std	Y+48, r25	; 0x30
    4212:	8f a7       	std	Y+47, r24	; 0x2f
    4214:	3f c0       	rjmp	.+126    	; 0x4294 <LCD_sendCommand+0xf0>
	else if (__tmp > 65535)
    4216:	69 a9       	ldd	r22, Y+49	; 0x31
    4218:	7a a9       	ldd	r23, Y+50	; 0x32
    421a:	8b a9       	ldd	r24, Y+51	; 0x33
    421c:	9c a9       	ldd	r25, Y+52	; 0x34
    421e:	20 e0       	ldi	r18, 0x00	; 0
    4220:	3f ef       	ldi	r19, 0xFF	; 255
    4222:	4f e7       	ldi	r20, 0x7F	; 127
    4224:	57 e4       	ldi	r21, 0x47	; 71
    4226:	0e 94 f7 11 	call	0x23ee	; 0x23ee <__gtsf2>
    422a:	18 16       	cp	r1, r24
    422c:	4c f5       	brge	.+82     	; 0x4280 <LCD_sendCommand+0xdc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    422e:	6d a9       	ldd	r22, Y+53	; 0x35
    4230:	7e a9       	ldd	r23, Y+54	; 0x36
    4232:	8f a9       	ldd	r24, Y+55	; 0x37
    4234:	98 ad       	ldd	r25, Y+56	; 0x38
    4236:	20 e0       	ldi	r18, 0x00	; 0
    4238:	30 e0       	ldi	r19, 0x00	; 0
    423a:	40 e2       	ldi	r20, 0x20	; 32
    423c:	51 e4       	ldi	r21, 0x41	; 65
    423e:	0e 94 fd 10 	call	0x21fa	; 0x21fa <__mulsf3>
    4242:	dc 01       	movw	r26, r24
    4244:	cb 01       	movw	r24, r22
    4246:	bc 01       	movw	r22, r24
    4248:	cd 01       	movw	r24, r26
    424a:	0e 94 42 02 	call	0x484	; 0x484 <__fixunssfsi>
    424e:	dc 01       	movw	r26, r24
    4250:	cb 01       	movw	r24, r22
    4252:	98 ab       	std	Y+48, r25	; 0x30
    4254:	8f a7       	std	Y+47, r24	; 0x2f
    4256:	0f c0       	rjmp	.+30     	; 0x4276 <LCD_sendCommand+0xd2>
    4258:	80 e9       	ldi	r24, 0x90	; 144
    425a:	91 e0       	ldi	r25, 0x01	; 1
    425c:	9e a7       	std	Y+46, r25	; 0x2e
    425e:	8d a7       	std	Y+45, r24	; 0x2d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    4260:	8d a5       	ldd	r24, Y+45	; 0x2d
    4262:	9e a5       	ldd	r25, Y+46	; 0x2e
    4264:	01 97       	sbiw	r24, 0x01	; 1
    4266:	f1 f7       	brne	.-4      	; 0x4264 <LCD_sendCommand+0xc0>
    4268:	9e a7       	std	Y+46, r25	; 0x2e
    426a:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    426c:	8f a5       	ldd	r24, Y+47	; 0x2f
    426e:	98 a9       	ldd	r25, Y+48	; 0x30
    4270:	01 97       	sbiw	r24, 0x01	; 1
    4272:	98 ab       	std	Y+48, r25	; 0x30
    4274:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4276:	8f a5       	ldd	r24, Y+47	; 0x2f
    4278:	98 a9       	ldd	r25, Y+48	; 0x30
    427a:	00 97       	sbiw	r24, 0x00	; 0
    427c:	69 f7       	brne	.-38     	; 0x4258 <LCD_sendCommand+0xb4>
    427e:	14 c0       	rjmp	.+40     	; 0x42a8 <LCD_sendCommand+0x104>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4280:	69 a9       	ldd	r22, Y+49	; 0x31
    4282:	7a a9       	ldd	r23, Y+50	; 0x32
    4284:	8b a9       	ldd	r24, Y+51	; 0x33
    4286:	9c a9       	ldd	r25, Y+52	; 0x34
    4288:	0e 94 42 02 	call	0x484	; 0x484 <__fixunssfsi>
    428c:	dc 01       	movw	r26, r24
    428e:	cb 01       	movw	r24, r22
    4290:	98 ab       	std	Y+48, r25	; 0x30
    4292:	8f a7       	std	Y+47, r24	; 0x2f
    4294:	8f a5       	ldd	r24, Y+47	; 0x2f
    4296:	98 a9       	ldd	r25, Y+48	; 0x30
    4298:	9c a7       	std	Y+44, r25	; 0x2c
    429a:	8b a7       	std	Y+43, r24	; 0x2b
    429c:	8b a5       	ldd	r24, Y+43	; 0x2b
    429e:	9c a5       	ldd	r25, Y+44	; 0x2c
    42a0:	01 97       	sbiw	r24, 0x01	; 1
    42a2:	f1 f7       	brne	.-4      	; 0x42a0 <LCD_sendCommand+0xfc>
    42a4:	9c a7       	std	Y+44, r25	; 0x2c
    42a6:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(LCD_SETUP_TIME_DELAY);
	DIO_writePin(LCD_EN_PORT_ID,LCD_EN_PIN_ID,DIO_HIGH_PIN);
    42a8:	82 e0       	ldi	r24, 0x02	; 2
    42aa:	61 e0       	ldi	r22, 0x01	; 1
    42ac:	41 e0       	ldi	r20, 0x01	; 1
    42ae:	0e 94 fe 1d 	call	0x3bfc	; 0x3bfc <DIO_writePin>
    42b2:	80 e0       	ldi	r24, 0x00	; 0
    42b4:	90 e0       	ldi	r25, 0x00	; 0
    42b6:	a0 e8       	ldi	r26, 0x80	; 128
    42b8:	bf e3       	ldi	r27, 0x3F	; 63
    42ba:	8f a3       	std	Y+39, r24	; 0x27
    42bc:	98 a7       	std	Y+40, r25	; 0x28
    42be:	a9 a7       	std	Y+41, r26	; 0x29
    42c0:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    42c2:	6f a1       	ldd	r22, Y+39	; 0x27
    42c4:	78 a5       	ldd	r23, Y+40	; 0x28
    42c6:	89 a5       	ldd	r24, Y+41	; 0x29
    42c8:	9a a5       	ldd	r25, Y+42	; 0x2a
    42ca:	20 e0       	ldi	r18, 0x00	; 0
    42cc:	30 e0       	ldi	r19, 0x00	; 0
    42ce:	4a e7       	ldi	r20, 0x7A	; 122
    42d0:	55 e4       	ldi	r21, 0x45	; 69
    42d2:	0e 94 fd 10 	call	0x21fa	; 0x21fa <__mulsf3>
    42d6:	dc 01       	movw	r26, r24
    42d8:	cb 01       	movw	r24, r22
    42da:	8b a3       	std	Y+35, r24	; 0x23
    42dc:	9c a3       	std	Y+36, r25	; 0x24
    42de:	ad a3       	std	Y+37, r26	; 0x25
    42e0:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    42e2:	6b a1       	ldd	r22, Y+35	; 0x23
    42e4:	7c a1       	ldd	r23, Y+36	; 0x24
    42e6:	8d a1       	ldd	r24, Y+37	; 0x25
    42e8:	9e a1       	ldd	r25, Y+38	; 0x26
    42ea:	20 e0       	ldi	r18, 0x00	; 0
    42ec:	30 e0       	ldi	r19, 0x00	; 0
    42ee:	40 e8       	ldi	r20, 0x80	; 128
    42f0:	5f e3       	ldi	r21, 0x3F	; 63
    42f2:	0e 94 57 12 	call	0x24ae	; 0x24ae <__ltsf2>
    42f6:	88 23       	and	r24, r24
    42f8:	2c f4       	brge	.+10     	; 0x4304 <LCD_sendCommand+0x160>
		__ticks = 1;
    42fa:	81 e0       	ldi	r24, 0x01	; 1
    42fc:	90 e0       	ldi	r25, 0x00	; 0
    42fe:	9a a3       	std	Y+34, r25	; 0x22
    4300:	89 a3       	std	Y+33, r24	; 0x21
    4302:	3f c0       	rjmp	.+126    	; 0x4382 <LCD_sendCommand+0x1de>
	else if (__tmp > 65535)
    4304:	6b a1       	ldd	r22, Y+35	; 0x23
    4306:	7c a1       	ldd	r23, Y+36	; 0x24
    4308:	8d a1       	ldd	r24, Y+37	; 0x25
    430a:	9e a1       	ldd	r25, Y+38	; 0x26
    430c:	20 e0       	ldi	r18, 0x00	; 0
    430e:	3f ef       	ldi	r19, 0xFF	; 255
    4310:	4f e7       	ldi	r20, 0x7F	; 127
    4312:	57 e4       	ldi	r21, 0x47	; 71
    4314:	0e 94 f7 11 	call	0x23ee	; 0x23ee <__gtsf2>
    4318:	18 16       	cp	r1, r24
    431a:	4c f5       	brge	.+82     	; 0x436e <LCD_sendCommand+0x1ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    431c:	6f a1       	ldd	r22, Y+39	; 0x27
    431e:	78 a5       	ldd	r23, Y+40	; 0x28
    4320:	89 a5       	ldd	r24, Y+41	; 0x29
    4322:	9a a5       	ldd	r25, Y+42	; 0x2a
    4324:	20 e0       	ldi	r18, 0x00	; 0
    4326:	30 e0       	ldi	r19, 0x00	; 0
    4328:	40 e2       	ldi	r20, 0x20	; 32
    432a:	51 e4       	ldi	r21, 0x41	; 65
    432c:	0e 94 fd 10 	call	0x21fa	; 0x21fa <__mulsf3>
    4330:	dc 01       	movw	r26, r24
    4332:	cb 01       	movw	r24, r22
    4334:	bc 01       	movw	r22, r24
    4336:	cd 01       	movw	r24, r26
    4338:	0e 94 42 02 	call	0x484	; 0x484 <__fixunssfsi>
    433c:	dc 01       	movw	r26, r24
    433e:	cb 01       	movw	r24, r22
    4340:	9a a3       	std	Y+34, r25	; 0x22
    4342:	89 a3       	std	Y+33, r24	; 0x21
    4344:	0f c0       	rjmp	.+30     	; 0x4364 <LCD_sendCommand+0x1c0>
    4346:	80 e9       	ldi	r24, 0x90	; 144
    4348:	91 e0       	ldi	r25, 0x01	; 1
    434a:	98 a3       	std	Y+32, r25	; 0x20
    434c:	8f 8f       	std	Y+31, r24	; 0x1f
    434e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4350:	98 a1       	ldd	r25, Y+32	; 0x20
    4352:	01 97       	sbiw	r24, 0x01	; 1
    4354:	f1 f7       	brne	.-4      	; 0x4352 <LCD_sendCommand+0x1ae>
    4356:	98 a3       	std	Y+32, r25	; 0x20
    4358:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    435a:	89 a1       	ldd	r24, Y+33	; 0x21
    435c:	9a a1       	ldd	r25, Y+34	; 0x22
    435e:	01 97       	sbiw	r24, 0x01	; 1
    4360:	9a a3       	std	Y+34, r25	; 0x22
    4362:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4364:	89 a1       	ldd	r24, Y+33	; 0x21
    4366:	9a a1       	ldd	r25, Y+34	; 0x22
    4368:	00 97       	sbiw	r24, 0x00	; 0
    436a:	69 f7       	brne	.-38     	; 0x4346 <LCD_sendCommand+0x1a2>
    436c:	14 c0       	rjmp	.+40     	; 0x4396 <LCD_sendCommand+0x1f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    436e:	6b a1       	ldd	r22, Y+35	; 0x23
    4370:	7c a1       	ldd	r23, Y+36	; 0x24
    4372:	8d a1       	ldd	r24, Y+37	; 0x25
    4374:	9e a1       	ldd	r25, Y+38	; 0x26
    4376:	0e 94 42 02 	call	0x484	; 0x484 <__fixunssfsi>
    437a:	dc 01       	movw	r26, r24
    437c:	cb 01       	movw	r24, r22
    437e:	9a a3       	std	Y+34, r25	; 0x22
    4380:	89 a3       	std	Y+33, r24	; 0x21
    4382:	89 a1       	ldd	r24, Y+33	; 0x21
    4384:	9a a1       	ldd	r25, Y+34	; 0x22
    4386:	9e 8f       	std	Y+30, r25	; 0x1e
    4388:	8d 8f       	std	Y+29, r24	; 0x1d
    438a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    438c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    438e:	01 97       	sbiw	r24, 0x01	; 1
    4390:	f1 f7       	brne	.-4      	; 0x438e <LCD_sendCommand+0x1ea>
    4392:	9e 8f       	std	Y+30, r25	; 0x1e
    4394:	8d 8f       	std	Y+29, r24	; 0x1d
	DIO_writePin(LCD_DATA_PORT_ID,LCD_DATA_PIN6_ID,GET_BIT(a_command,2));
	DIO_writePin(LCD_DATA_PORT_ID,LCD_DATA_PIN7_ID,GET_BIT(a_command,3));

	#elif(LCD_DATA_BIT_MODE == LCD_8_BIT_MODE)

	DIO_writePort(LCD_DATA_PORT_ID,a_command);
    4396:	83 e0       	ldi	r24, 0x03	; 3
    4398:	69 ad       	ldd	r22, Y+57	; 0x39
    439a:	0e 94 d1 1e 	call	0x3da2	; 0x3da2 <DIO_writePort>
    439e:	80 e0       	ldi	r24, 0x00	; 0
    43a0:	90 e0       	ldi	r25, 0x00	; 0
    43a2:	a0 e8       	ldi	r26, 0x80	; 128
    43a4:	bf e3       	ldi	r27, 0x3F	; 63
    43a6:	89 8f       	std	Y+25, r24	; 0x19
    43a8:	9a 8f       	std	Y+26, r25	; 0x1a
    43aa:	ab 8f       	std	Y+27, r26	; 0x1b
    43ac:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    43ae:	69 8d       	ldd	r22, Y+25	; 0x19
    43b0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    43b2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    43b4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    43b6:	20 e0       	ldi	r18, 0x00	; 0
    43b8:	30 e0       	ldi	r19, 0x00	; 0
    43ba:	4a e7       	ldi	r20, 0x7A	; 122
    43bc:	55 e4       	ldi	r21, 0x45	; 69
    43be:	0e 94 fd 10 	call	0x21fa	; 0x21fa <__mulsf3>
    43c2:	dc 01       	movw	r26, r24
    43c4:	cb 01       	movw	r24, r22
    43c6:	8d 8b       	std	Y+21, r24	; 0x15
    43c8:	9e 8b       	std	Y+22, r25	; 0x16
    43ca:	af 8b       	std	Y+23, r26	; 0x17
    43cc:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    43ce:	6d 89       	ldd	r22, Y+21	; 0x15
    43d0:	7e 89       	ldd	r23, Y+22	; 0x16
    43d2:	8f 89       	ldd	r24, Y+23	; 0x17
    43d4:	98 8d       	ldd	r25, Y+24	; 0x18
    43d6:	20 e0       	ldi	r18, 0x00	; 0
    43d8:	30 e0       	ldi	r19, 0x00	; 0
    43da:	40 e8       	ldi	r20, 0x80	; 128
    43dc:	5f e3       	ldi	r21, 0x3F	; 63
    43de:	0e 94 57 12 	call	0x24ae	; 0x24ae <__ltsf2>
    43e2:	88 23       	and	r24, r24
    43e4:	2c f4       	brge	.+10     	; 0x43f0 <LCD_sendCommand+0x24c>
		__ticks = 1;
    43e6:	81 e0       	ldi	r24, 0x01	; 1
    43e8:	90 e0       	ldi	r25, 0x00	; 0
    43ea:	9c 8b       	std	Y+20, r25	; 0x14
    43ec:	8b 8b       	std	Y+19, r24	; 0x13
    43ee:	3f c0       	rjmp	.+126    	; 0x446e <LCD_sendCommand+0x2ca>
	else if (__tmp > 65535)
    43f0:	6d 89       	ldd	r22, Y+21	; 0x15
    43f2:	7e 89       	ldd	r23, Y+22	; 0x16
    43f4:	8f 89       	ldd	r24, Y+23	; 0x17
    43f6:	98 8d       	ldd	r25, Y+24	; 0x18
    43f8:	20 e0       	ldi	r18, 0x00	; 0
    43fa:	3f ef       	ldi	r19, 0xFF	; 255
    43fc:	4f e7       	ldi	r20, 0x7F	; 127
    43fe:	57 e4       	ldi	r21, 0x47	; 71
    4400:	0e 94 f7 11 	call	0x23ee	; 0x23ee <__gtsf2>
    4404:	18 16       	cp	r1, r24
    4406:	4c f5       	brge	.+82     	; 0x445a <LCD_sendCommand+0x2b6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4408:	69 8d       	ldd	r22, Y+25	; 0x19
    440a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    440c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    440e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4410:	20 e0       	ldi	r18, 0x00	; 0
    4412:	30 e0       	ldi	r19, 0x00	; 0
    4414:	40 e2       	ldi	r20, 0x20	; 32
    4416:	51 e4       	ldi	r21, 0x41	; 65
    4418:	0e 94 fd 10 	call	0x21fa	; 0x21fa <__mulsf3>
    441c:	dc 01       	movw	r26, r24
    441e:	cb 01       	movw	r24, r22
    4420:	bc 01       	movw	r22, r24
    4422:	cd 01       	movw	r24, r26
    4424:	0e 94 42 02 	call	0x484	; 0x484 <__fixunssfsi>
    4428:	dc 01       	movw	r26, r24
    442a:	cb 01       	movw	r24, r22
    442c:	9c 8b       	std	Y+20, r25	; 0x14
    442e:	8b 8b       	std	Y+19, r24	; 0x13
    4430:	0f c0       	rjmp	.+30     	; 0x4450 <LCD_sendCommand+0x2ac>
    4432:	80 e9       	ldi	r24, 0x90	; 144
    4434:	91 e0       	ldi	r25, 0x01	; 1
    4436:	9a 8b       	std	Y+18, r25	; 0x12
    4438:	89 8b       	std	Y+17, r24	; 0x11
    443a:	89 89       	ldd	r24, Y+17	; 0x11
    443c:	9a 89       	ldd	r25, Y+18	; 0x12
    443e:	01 97       	sbiw	r24, 0x01	; 1
    4440:	f1 f7       	brne	.-4      	; 0x443e <LCD_sendCommand+0x29a>
    4442:	9a 8b       	std	Y+18, r25	; 0x12
    4444:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4446:	8b 89       	ldd	r24, Y+19	; 0x13
    4448:	9c 89       	ldd	r25, Y+20	; 0x14
    444a:	01 97       	sbiw	r24, 0x01	; 1
    444c:	9c 8b       	std	Y+20, r25	; 0x14
    444e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4450:	8b 89       	ldd	r24, Y+19	; 0x13
    4452:	9c 89       	ldd	r25, Y+20	; 0x14
    4454:	00 97       	sbiw	r24, 0x00	; 0
    4456:	69 f7       	brne	.-38     	; 0x4432 <LCD_sendCommand+0x28e>
    4458:	14 c0       	rjmp	.+40     	; 0x4482 <LCD_sendCommand+0x2de>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    445a:	6d 89       	ldd	r22, Y+21	; 0x15
    445c:	7e 89       	ldd	r23, Y+22	; 0x16
    445e:	8f 89       	ldd	r24, Y+23	; 0x17
    4460:	98 8d       	ldd	r25, Y+24	; 0x18
    4462:	0e 94 42 02 	call	0x484	; 0x484 <__fixunssfsi>
    4466:	dc 01       	movw	r26, r24
    4468:	cb 01       	movw	r24, r22
    446a:	9c 8b       	std	Y+20, r25	; 0x14
    446c:	8b 8b       	std	Y+19, r24	; 0x13
    446e:	8b 89       	ldd	r24, Y+19	; 0x13
    4470:	9c 89       	ldd	r25, Y+20	; 0x14
    4472:	98 8b       	std	Y+16, r25	; 0x10
    4474:	8f 87       	std	Y+15, r24	; 0x0f
    4476:	8f 85       	ldd	r24, Y+15	; 0x0f
    4478:	98 89       	ldd	r25, Y+16	; 0x10
    447a:	01 97       	sbiw	r24, 0x01	; 1
    447c:	f1 f7       	brne	.-4      	; 0x447a <LCD_sendCommand+0x2d6>
    447e:	98 8b       	std	Y+16, r25	; 0x10
    4480:	8f 87       	std	Y+15, r24	; 0x0f

	#endif

	_delay_ms(LCD_SETUP_TIME_DELAY);
	DIO_writePin(LCD_EN_PORT_ID,LCD_EN_PIN_ID,DIO_LOW_PIN);
    4482:	82 e0       	ldi	r24, 0x02	; 2
    4484:	61 e0       	ldi	r22, 0x01	; 1
    4486:	40 e0       	ldi	r20, 0x00	; 0
    4488:	0e 94 fe 1d 	call	0x3bfc	; 0x3bfc <DIO_writePin>
    448c:	80 e0       	ldi	r24, 0x00	; 0
    448e:	90 e0       	ldi	r25, 0x00	; 0
    4490:	a0 e8       	ldi	r26, 0x80	; 128
    4492:	bf e3       	ldi	r27, 0x3F	; 63
    4494:	8b 87       	std	Y+11, r24	; 0x0b
    4496:	9c 87       	std	Y+12, r25	; 0x0c
    4498:	ad 87       	std	Y+13, r26	; 0x0d
    449a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    449c:	6b 85       	ldd	r22, Y+11	; 0x0b
    449e:	7c 85       	ldd	r23, Y+12	; 0x0c
    44a0:	8d 85       	ldd	r24, Y+13	; 0x0d
    44a2:	9e 85       	ldd	r25, Y+14	; 0x0e
    44a4:	20 e0       	ldi	r18, 0x00	; 0
    44a6:	30 e0       	ldi	r19, 0x00	; 0
    44a8:	4a e7       	ldi	r20, 0x7A	; 122
    44aa:	55 e4       	ldi	r21, 0x45	; 69
    44ac:	0e 94 fd 10 	call	0x21fa	; 0x21fa <__mulsf3>
    44b0:	dc 01       	movw	r26, r24
    44b2:	cb 01       	movw	r24, r22
    44b4:	8f 83       	std	Y+7, r24	; 0x07
    44b6:	98 87       	std	Y+8, r25	; 0x08
    44b8:	a9 87       	std	Y+9, r26	; 0x09
    44ba:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    44bc:	6f 81       	ldd	r22, Y+7	; 0x07
    44be:	78 85       	ldd	r23, Y+8	; 0x08
    44c0:	89 85       	ldd	r24, Y+9	; 0x09
    44c2:	9a 85       	ldd	r25, Y+10	; 0x0a
    44c4:	20 e0       	ldi	r18, 0x00	; 0
    44c6:	30 e0       	ldi	r19, 0x00	; 0
    44c8:	40 e8       	ldi	r20, 0x80	; 128
    44ca:	5f e3       	ldi	r21, 0x3F	; 63
    44cc:	0e 94 57 12 	call	0x24ae	; 0x24ae <__ltsf2>
    44d0:	88 23       	and	r24, r24
    44d2:	2c f4       	brge	.+10     	; 0x44de <LCD_sendCommand+0x33a>
		__ticks = 1;
    44d4:	81 e0       	ldi	r24, 0x01	; 1
    44d6:	90 e0       	ldi	r25, 0x00	; 0
    44d8:	9e 83       	std	Y+6, r25	; 0x06
    44da:	8d 83       	std	Y+5, r24	; 0x05
    44dc:	3f c0       	rjmp	.+126    	; 0x455c <LCD_sendCommand+0x3b8>
	else if (__tmp > 65535)
    44de:	6f 81       	ldd	r22, Y+7	; 0x07
    44e0:	78 85       	ldd	r23, Y+8	; 0x08
    44e2:	89 85       	ldd	r24, Y+9	; 0x09
    44e4:	9a 85       	ldd	r25, Y+10	; 0x0a
    44e6:	20 e0       	ldi	r18, 0x00	; 0
    44e8:	3f ef       	ldi	r19, 0xFF	; 255
    44ea:	4f e7       	ldi	r20, 0x7F	; 127
    44ec:	57 e4       	ldi	r21, 0x47	; 71
    44ee:	0e 94 f7 11 	call	0x23ee	; 0x23ee <__gtsf2>
    44f2:	18 16       	cp	r1, r24
    44f4:	4c f5       	brge	.+82     	; 0x4548 <LCD_sendCommand+0x3a4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    44f6:	6b 85       	ldd	r22, Y+11	; 0x0b
    44f8:	7c 85       	ldd	r23, Y+12	; 0x0c
    44fa:	8d 85       	ldd	r24, Y+13	; 0x0d
    44fc:	9e 85       	ldd	r25, Y+14	; 0x0e
    44fe:	20 e0       	ldi	r18, 0x00	; 0
    4500:	30 e0       	ldi	r19, 0x00	; 0
    4502:	40 e2       	ldi	r20, 0x20	; 32
    4504:	51 e4       	ldi	r21, 0x41	; 65
    4506:	0e 94 fd 10 	call	0x21fa	; 0x21fa <__mulsf3>
    450a:	dc 01       	movw	r26, r24
    450c:	cb 01       	movw	r24, r22
    450e:	bc 01       	movw	r22, r24
    4510:	cd 01       	movw	r24, r26
    4512:	0e 94 42 02 	call	0x484	; 0x484 <__fixunssfsi>
    4516:	dc 01       	movw	r26, r24
    4518:	cb 01       	movw	r24, r22
    451a:	9e 83       	std	Y+6, r25	; 0x06
    451c:	8d 83       	std	Y+5, r24	; 0x05
    451e:	0f c0       	rjmp	.+30     	; 0x453e <LCD_sendCommand+0x39a>
    4520:	80 e9       	ldi	r24, 0x90	; 144
    4522:	91 e0       	ldi	r25, 0x01	; 1
    4524:	9c 83       	std	Y+4, r25	; 0x04
    4526:	8b 83       	std	Y+3, r24	; 0x03
    4528:	8b 81       	ldd	r24, Y+3	; 0x03
    452a:	9c 81       	ldd	r25, Y+4	; 0x04
    452c:	01 97       	sbiw	r24, 0x01	; 1
    452e:	f1 f7       	brne	.-4      	; 0x452c <LCD_sendCommand+0x388>
    4530:	9c 83       	std	Y+4, r25	; 0x04
    4532:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4534:	8d 81       	ldd	r24, Y+5	; 0x05
    4536:	9e 81       	ldd	r25, Y+6	; 0x06
    4538:	01 97       	sbiw	r24, 0x01	; 1
    453a:	9e 83       	std	Y+6, r25	; 0x06
    453c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    453e:	8d 81       	ldd	r24, Y+5	; 0x05
    4540:	9e 81       	ldd	r25, Y+6	; 0x06
    4542:	00 97       	sbiw	r24, 0x00	; 0
    4544:	69 f7       	brne	.-38     	; 0x4520 <LCD_sendCommand+0x37c>
    4546:	14 c0       	rjmp	.+40     	; 0x4570 <LCD_sendCommand+0x3cc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4548:	6f 81       	ldd	r22, Y+7	; 0x07
    454a:	78 85       	ldd	r23, Y+8	; 0x08
    454c:	89 85       	ldd	r24, Y+9	; 0x09
    454e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4550:	0e 94 42 02 	call	0x484	; 0x484 <__fixunssfsi>
    4554:	dc 01       	movw	r26, r24
    4556:	cb 01       	movw	r24, r22
    4558:	9e 83       	std	Y+6, r25	; 0x06
    455a:	8d 83       	std	Y+5, r24	; 0x05
    455c:	8d 81       	ldd	r24, Y+5	; 0x05
    455e:	9e 81       	ldd	r25, Y+6	; 0x06
    4560:	9a 83       	std	Y+2, r25	; 0x02
    4562:	89 83       	std	Y+1, r24	; 0x01
    4564:	89 81       	ldd	r24, Y+1	; 0x01
    4566:	9a 81       	ldd	r25, Y+2	; 0x02
    4568:	01 97       	sbiw	r24, 0x01	; 1
    456a:	f1 f7       	brne	.-4      	; 0x4568 <LCD_sendCommand+0x3c4>
    456c:	9a 83       	std	Y+2, r25	; 0x02
    456e:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(LCD_SETUP_TIME_DELAY);
}
    4570:	e9 96       	adiw	r28, 0x39	; 57
    4572:	0f b6       	in	r0, 0x3f	; 63
    4574:	f8 94       	cli
    4576:	de bf       	out	0x3e, r29	; 62
    4578:	0f be       	out	0x3f, r0	; 63
    457a:	cd bf       	out	0x3d, r28	; 61
    457c:	cf 91       	pop	r28
    457e:	df 91       	pop	r29
    4580:	08 95       	ret

00004582 <LCD_sendData>:
 * [Description]   : Display a specific data on the LCD data lines.
 * [Arguments]     : <a_data>      -> Indicates to the required data.
 * [return]        : The function returns void.
 ====================================================================================================================*/
static void LCD_sendData(uint8 a_data)
{
    4582:	df 93       	push	r29
    4584:	cf 93       	push	r28
    4586:	cd b7       	in	r28, 0x3d	; 61
    4588:	de b7       	in	r29, 0x3e	; 62
    458a:	e9 97       	sbiw	r28, 0x39	; 57
    458c:	0f b6       	in	r0, 0x3f	; 63
    458e:	f8 94       	cli
    4590:	de bf       	out	0x3e, r29	; 62
    4592:	0f be       	out	0x3f, r0	; 63
    4594:	cd bf       	out	0x3d, r28	; 61
    4596:	89 af       	std	Y+57, r24	; 0x39
	DIO_writePin(LCD_RS_PORT_ID,LCD_RS_PIN_ID,DIO_HIGH_PIN);
    4598:	82 e0       	ldi	r24, 0x02	; 2
    459a:	60 e0       	ldi	r22, 0x00	; 0
    459c:	41 e0       	ldi	r20, 0x01	; 1
    459e:	0e 94 fe 1d 	call	0x3bfc	; 0x3bfc <DIO_writePin>
    45a2:	80 e0       	ldi	r24, 0x00	; 0
    45a4:	90 e0       	ldi	r25, 0x00	; 0
    45a6:	a0 e8       	ldi	r26, 0x80	; 128
    45a8:	bf e3       	ldi	r27, 0x3F	; 63
    45aa:	8d ab       	std	Y+53, r24	; 0x35
    45ac:	9e ab       	std	Y+54, r25	; 0x36
    45ae:	af ab       	std	Y+55, r26	; 0x37
    45b0:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    45b2:	6d a9       	ldd	r22, Y+53	; 0x35
    45b4:	7e a9       	ldd	r23, Y+54	; 0x36
    45b6:	8f a9       	ldd	r24, Y+55	; 0x37
    45b8:	98 ad       	ldd	r25, Y+56	; 0x38
    45ba:	20 e0       	ldi	r18, 0x00	; 0
    45bc:	30 e0       	ldi	r19, 0x00	; 0
    45be:	4a e7       	ldi	r20, 0x7A	; 122
    45c0:	55 e4       	ldi	r21, 0x45	; 69
    45c2:	0e 94 fd 10 	call	0x21fa	; 0x21fa <__mulsf3>
    45c6:	dc 01       	movw	r26, r24
    45c8:	cb 01       	movw	r24, r22
    45ca:	89 ab       	std	Y+49, r24	; 0x31
    45cc:	9a ab       	std	Y+50, r25	; 0x32
    45ce:	ab ab       	std	Y+51, r26	; 0x33
    45d0:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    45d2:	69 a9       	ldd	r22, Y+49	; 0x31
    45d4:	7a a9       	ldd	r23, Y+50	; 0x32
    45d6:	8b a9       	ldd	r24, Y+51	; 0x33
    45d8:	9c a9       	ldd	r25, Y+52	; 0x34
    45da:	20 e0       	ldi	r18, 0x00	; 0
    45dc:	30 e0       	ldi	r19, 0x00	; 0
    45de:	40 e8       	ldi	r20, 0x80	; 128
    45e0:	5f e3       	ldi	r21, 0x3F	; 63
    45e2:	0e 94 57 12 	call	0x24ae	; 0x24ae <__ltsf2>
    45e6:	88 23       	and	r24, r24
    45e8:	2c f4       	brge	.+10     	; 0x45f4 <LCD_sendData+0x72>
		__ticks = 1;
    45ea:	81 e0       	ldi	r24, 0x01	; 1
    45ec:	90 e0       	ldi	r25, 0x00	; 0
    45ee:	98 ab       	std	Y+48, r25	; 0x30
    45f0:	8f a7       	std	Y+47, r24	; 0x2f
    45f2:	3f c0       	rjmp	.+126    	; 0x4672 <LCD_sendData+0xf0>
	else if (__tmp > 65535)
    45f4:	69 a9       	ldd	r22, Y+49	; 0x31
    45f6:	7a a9       	ldd	r23, Y+50	; 0x32
    45f8:	8b a9       	ldd	r24, Y+51	; 0x33
    45fa:	9c a9       	ldd	r25, Y+52	; 0x34
    45fc:	20 e0       	ldi	r18, 0x00	; 0
    45fe:	3f ef       	ldi	r19, 0xFF	; 255
    4600:	4f e7       	ldi	r20, 0x7F	; 127
    4602:	57 e4       	ldi	r21, 0x47	; 71
    4604:	0e 94 f7 11 	call	0x23ee	; 0x23ee <__gtsf2>
    4608:	18 16       	cp	r1, r24
    460a:	4c f5       	brge	.+82     	; 0x465e <LCD_sendData+0xdc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    460c:	6d a9       	ldd	r22, Y+53	; 0x35
    460e:	7e a9       	ldd	r23, Y+54	; 0x36
    4610:	8f a9       	ldd	r24, Y+55	; 0x37
    4612:	98 ad       	ldd	r25, Y+56	; 0x38
    4614:	20 e0       	ldi	r18, 0x00	; 0
    4616:	30 e0       	ldi	r19, 0x00	; 0
    4618:	40 e2       	ldi	r20, 0x20	; 32
    461a:	51 e4       	ldi	r21, 0x41	; 65
    461c:	0e 94 fd 10 	call	0x21fa	; 0x21fa <__mulsf3>
    4620:	dc 01       	movw	r26, r24
    4622:	cb 01       	movw	r24, r22
    4624:	bc 01       	movw	r22, r24
    4626:	cd 01       	movw	r24, r26
    4628:	0e 94 42 02 	call	0x484	; 0x484 <__fixunssfsi>
    462c:	dc 01       	movw	r26, r24
    462e:	cb 01       	movw	r24, r22
    4630:	98 ab       	std	Y+48, r25	; 0x30
    4632:	8f a7       	std	Y+47, r24	; 0x2f
    4634:	0f c0       	rjmp	.+30     	; 0x4654 <LCD_sendData+0xd2>
    4636:	80 e9       	ldi	r24, 0x90	; 144
    4638:	91 e0       	ldi	r25, 0x01	; 1
    463a:	9e a7       	std	Y+46, r25	; 0x2e
    463c:	8d a7       	std	Y+45, r24	; 0x2d
    463e:	8d a5       	ldd	r24, Y+45	; 0x2d
    4640:	9e a5       	ldd	r25, Y+46	; 0x2e
    4642:	01 97       	sbiw	r24, 0x01	; 1
    4644:	f1 f7       	brne	.-4      	; 0x4642 <LCD_sendData+0xc0>
    4646:	9e a7       	std	Y+46, r25	; 0x2e
    4648:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    464a:	8f a5       	ldd	r24, Y+47	; 0x2f
    464c:	98 a9       	ldd	r25, Y+48	; 0x30
    464e:	01 97       	sbiw	r24, 0x01	; 1
    4650:	98 ab       	std	Y+48, r25	; 0x30
    4652:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4654:	8f a5       	ldd	r24, Y+47	; 0x2f
    4656:	98 a9       	ldd	r25, Y+48	; 0x30
    4658:	00 97       	sbiw	r24, 0x00	; 0
    465a:	69 f7       	brne	.-38     	; 0x4636 <LCD_sendData+0xb4>
    465c:	14 c0       	rjmp	.+40     	; 0x4686 <LCD_sendData+0x104>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    465e:	69 a9       	ldd	r22, Y+49	; 0x31
    4660:	7a a9       	ldd	r23, Y+50	; 0x32
    4662:	8b a9       	ldd	r24, Y+51	; 0x33
    4664:	9c a9       	ldd	r25, Y+52	; 0x34
    4666:	0e 94 42 02 	call	0x484	; 0x484 <__fixunssfsi>
    466a:	dc 01       	movw	r26, r24
    466c:	cb 01       	movw	r24, r22
    466e:	98 ab       	std	Y+48, r25	; 0x30
    4670:	8f a7       	std	Y+47, r24	; 0x2f
    4672:	8f a5       	ldd	r24, Y+47	; 0x2f
    4674:	98 a9       	ldd	r25, Y+48	; 0x30
    4676:	9c a7       	std	Y+44, r25	; 0x2c
    4678:	8b a7       	std	Y+43, r24	; 0x2b
    467a:	8b a5       	ldd	r24, Y+43	; 0x2b
    467c:	9c a5       	ldd	r25, Y+44	; 0x2c
    467e:	01 97       	sbiw	r24, 0x01	; 1
    4680:	f1 f7       	brne	.-4      	; 0x467e <LCD_sendData+0xfc>
    4682:	9c a7       	std	Y+44, r25	; 0x2c
    4684:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(LCD_SETUP_TIME_DELAY);
	DIO_writePin(LCD_EN_PORT_ID,LCD_EN_PIN_ID,DIO_HIGH_PIN);
    4686:	82 e0       	ldi	r24, 0x02	; 2
    4688:	61 e0       	ldi	r22, 0x01	; 1
    468a:	41 e0       	ldi	r20, 0x01	; 1
    468c:	0e 94 fe 1d 	call	0x3bfc	; 0x3bfc <DIO_writePin>
    4690:	80 e0       	ldi	r24, 0x00	; 0
    4692:	90 e0       	ldi	r25, 0x00	; 0
    4694:	a0 e8       	ldi	r26, 0x80	; 128
    4696:	bf e3       	ldi	r27, 0x3F	; 63
    4698:	8f a3       	std	Y+39, r24	; 0x27
    469a:	98 a7       	std	Y+40, r25	; 0x28
    469c:	a9 a7       	std	Y+41, r26	; 0x29
    469e:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    46a0:	6f a1       	ldd	r22, Y+39	; 0x27
    46a2:	78 a5       	ldd	r23, Y+40	; 0x28
    46a4:	89 a5       	ldd	r24, Y+41	; 0x29
    46a6:	9a a5       	ldd	r25, Y+42	; 0x2a
    46a8:	20 e0       	ldi	r18, 0x00	; 0
    46aa:	30 e0       	ldi	r19, 0x00	; 0
    46ac:	4a e7       	ldi	r20, 0x7A	; 122
    46ae:	55 e4       	ldi	r21, 0x45	; 69
    46b0:	0e 94 fd 10 	call	0x21fa	; 0x21fa <__mulsf3>
    46b4:	dc 01       	movw	r26, r24
    46b6:	cb 01       	movw	r24, r22
    46b8:	8b a3       	std	Y+35, r24	; 0x23
    46ba:	9c a3       	std	Y+36, r25	; 0x24
    46bc:	ad a3       	std	Y+37, r26	; 0x25
    46be:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    46c0:	6b a1       	ldd	r22, Y+35	; 0x23
    46c2:	7c a1       	ldd	r23, Y+36	; 0x24
    46c4:	8d a1       	ldd	r24, Y+37	; 0x25
    46c6:	9e a1       	ldd	r25, Y+38	; 0x26
    46c8:	20 e0       	ldi	r18, 0x00	; 0
    46ca:	30 e0       	ldi	r19, 0x00	; 0
    46cc:	40 e8       	ldi	r20, 0x80	; 128
    46ce:	5f e3       	ldi	r21, 0x3F	; 63
    46d0:	0e 94 57 12 	call	0x24ae	; 0x24ae <__ltsf2>
    46d4:	88 23       	and	r24, r24
    46d6:	2c f4       	brge	.+10     	; 0x46e2 <LCD_sendData+0x160>
		__ticks = 1;
    46d8:	81 e0       	ldi	r24, 0x01	; 1
    46da:	90 e0       	ldi	r25, 0x00	; 0
    46dc:	9a a3       	std	Y+34, r25	; 0x22
    46de:	89 a3       	std	Y+33, r24	; 0x21
    46e0:	3f c0       	rjmp	.+126    	; 0x4760 <LCD_sendData+0x1de>
	else if (__tmp > 65535)
    46e2:	6b a1       	ldd	r22, Y+35	; 0x23
    46e4:	7c a1       	ldd	r23, Y+36	; 0x24
    46e6:	8d a1       	ldd	r24, Y+37	; 0x25
    46e8:	9e a1       	ldd	r25, Y+38	; 0x26
    46ea:	20 e0       	ldi	r18, 0x00	; 0
    46ec:	3f ef       	ldi	r19, 0xFF	; 255
    46ee:	4f e7       	ldi	r20, 0x7F	; 127
    46f0:	57 e4       	ldi	r21, 0x47	; 71
    46f2:	0e 94 f7 11 	call	0x23ee	; 0x23ee <__gtsf2>
    46f6:	18 16       	cp	r1, r24
    46f8:	4c f5       	brge	.+82     	; 0x474c <LCD_sendData+0x1ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    46fa:	6f a1       	ldd	r22, Y+39	; 0x27
    46fc:	78 a5       	ldd	r23, Y+40	; 0x28
    46fe:	89 a5       	ldd	r24, Y+41	; 0x29
    4700:	9a a5       	ldd	r25, Y+42	; 0x2a
    4702:	20 e0       	ldi	r18, 0x00	; 0
    4704:	30 e0       	ldi	r19, 0x00	; 0
    4706:	40 e2       	ldi	r20, 0x20	; 32
    4708:	51 e4       	ldi	r21, 0x41	; 65
    470a:	0e 94 fd 10 	call	0x21fa	; 0x21fa <__mulsf3>
    470e:	dc 01       	movw	r26, r24
    4710:	cb 01       	movw	r24, r22
    4712:	bc 01       	movw	r22, r24
    4714:	cd 01       	movw	r24, r26
    4716:	0e 94 42 02 	call	0x484	; 0x484 <__fixunssfsi>
    471a:	dc 01       	movw	r26, r24
    471c:	cb 01       	movw	r24, r22
    471e:	9a a3       	std	Y+34, r25	; 0x22
    4720:	89 a3       	std	Y+33, r24	; 0x21
    4722:	0f c0       	rjmp	.+30     	; 0x4742 <LCD_sendData+0x1c0>
    4724:	80 e9       	ldi	r24, 0x90	; 144
    4726:	91 e0       	ldi	r25, 0x01	; 1
    4728:	98 a3       	std	Y+32, r25	; 0x20
    472a:	8f 8f       	std	Y+31, r24	; 0x1f
    472c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    472e:	98 a1       	ldd	r25, Y+32	; 0x20
    4730:	01 97       	sbiw	r24, 0x01	; 1
    4732:	f1 f7       	brne	.-4      	; 0x4730 <LCD_sendData+0x1ae>
    4734:	98 a3       	std	Y+32, r25	; 0x20
    4736:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4738:	89 a1       	ldd	r24, Y+33	; 0x21
    473a:	9a a1       	ldd	r25, Y+34	; 0x22
    473c:	01 97       	sbiw	r24, 0x01	; 1
    473e:	9a a3       	std	Y+34, r25	; 0x22
    4740:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4742:	89 a1       	ldd	r24, Y+33	; 0x21
    4744:	9a a1       	ldd	r25, Y+34	; 0x22
    4746:	00 97       	sbiw	r24, 0x00	; 0
    4748:	69 f7       	brne	.-38     	; 0x4724 <LCD_sendData+0x1a2>
    474a:	14 c0       	rjmp	.+40     	; 0x4774 <LCD_sendData+0x1f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    474c:	6b a1       	ldd	r22, Y+35	; 0x23
    474e:	7c a1       	ldd	r23, Y+36	; 0x24
    4750:	8d a1       	ldd	r24, Y+37	; 0x25
    4752:	9e a1       	ldd	r25, Y+38	; 0x26
    4754:	0e 94 42 02 	call	0x484	; 0x484 <__fixunssfsi>
    4758:	dc 01       	movw	r26, r24
    475a:	cb 01       	movw	r24, r22
    475c:	9a a3       	std	Y+34, r25	; 0x22
    475e:	89 a3       	std	Y+33, r24	; 0x21
    4760:	89 a1       	ldd	r24, Y+33	; 0x21
    4762:	9a a1       	ldd	r25, Y+34	; 0x22
    4764:	9e 8f       	std	Y+30, r25	; 0x1e
    4766:	8d 8f       	std	Y+29, r24	; 0x1d
    4768:	8d 8d       	ldd	r24, Y+29	; 0x1d
    476a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    476c:	01 97       	sbiw	r24, 0x01	; 1
    476e:	f1 f7       	brne	.-4      	; 0x476c <LCD_sendData+0x1ea>
    4770:	9e 8f       	std	Y+30, r25	; 0x1e
    4772:	8d 8f       	std	Y+29, r24	; 0x1d
	DIO_writePin(LCD_DATA_PORT_ID,LCD_DATA_PIN6_ID,GET_BIT(a_data,2));
	DIO_writePin(LCD_DATA_PORT_ID,LCD_DATA_PIN7_ID,GET_BIT(a_data,3));

	#elif(LCD_DATA_BIT_MODE == LCD_8_BIT_MODE)

	DIO_writePort(LCD_DATA_PORT_ID,a_data);
    4774:	83 e0       	ldi	r24, 0x03	; 3
    4776:	69 ad       	ldd	r22, Y+57	; 0x39
    4778:	0e 94 d1 1e 	call	0x3da2	; 0x3da2 <DIO_writePort>
    477c:	80 e0       	ldi	r24, 0x00	; 0
    477e:	90 e0       	ldi	r25, 0x00	; 0
    4780:	a0 e8       	ldi	r26, 0x80	; 128
    4782:	bf e3       	ldi	r27, 0x3F	; 63
    4784:	89 8f       	std	Y+25, r24	; 0x19
    4786:	9a 8f       	std	Y+26, r25	; 0x1a
    4788:	ab 8f       	std	Y+27, r26	; 0x1b
    478a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    478c:	69 8d       	ldd	r22, Y+25	; 0x19
    478e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4790:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4792:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4794:	20 e0       	ldi	r18, 0x00	; 0
    4796:	30 e0       	ldi	r19, 0x00	; 0
    4798:	4a e7       	ldi	r20, 0x7A	; 122
    479a:	55 e4       	ldi	r21, 0x45	; 69
    479c:	0e 94 fd 10 	call	0x21fa	; 0x21fa <__mulsf3>
    47a0:	dc 01       	movw	r26, r24
    47a2:	cb 01       	movw	r24, r22
    47a4:	8d 8b       	std	Y+21, r24	; 0x15
    47a6:	9e 8b       	std	Y+22, r25	; 0x16
    47a8:	af 8b       	std	Y+23, r26	; 0x17
    47aa:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    47ac:	6d 89       	ldd	r22, Y+21	; 0x15
    47ae:	7e 89       	ldd	r23, Y+22	; 0x16
    47b0:	8f 89       	ldd	r24, Y+23	; 0x17
    47b2:	98 8d       	ldd	r25, Y+24	; 0x18
    47b4:	20 e0       	ldi	r18, 0x00	; 0
    47b6:	30 e0       	ldi	r19, 0x00	; 0
    47b8:	40 e8       	ldi	r20, 0x80	; 128
    47ba:	5f e3       	ldi	r21, 0x3F	; 63
    47bc:	0e 94 57 12 	call	0x24ae	; 0x24ae <__ltsf2>
    47c0:	88 23       	and	r24, r24
    47c2:	2c f4       	brge	.+10     	; 0x47ce <LCD_sendData+0x24c>
		__ticks = 1;
    47c4:	81 e0       	ldi	r24, 0x01	; 1
    47c6:	90 e0       	ldi	r25, 0x00	; 0
    47c8:	9c 8b       	std	Y+20, r25	; 0x14
    47ca:	8b 8b       	std	Y+19, r24	; 0x13
    47cc:	3f c0       	rjmp	.+126    	; 0x484c <LCD_sendData+0x2ca>
	else if (__tmp > 65535)
    47ce:	6d 89       	ldd	r22, Y+21	; 0x15
    47d0:	7e 89       	ldd	r23, Y+22	; 0x16
    47d2:	8f 89       	ldd	r24, Y+23	; 0x17
    47d4:	98 8d       	ldd	r25, Y+24	; 0x18
    47d6:	20 e0       	ldi	r18, 0x00	; 0
    47d8:	3f ef       	ldi	r19, 0xFF	; 255
    47da:	4f e7       	ldi	r20, 0x7F	; 127
    47dc:	57 e4       	ldi	r21, 0x47	; 71
    47de:	0e 94 f7 11 	call	0x23ee	; 0x23ee <__gtsf2>
    47e2:	18 16       	cp	r1, r24
    47e4:	4c f5       	brge	.+82     	; 0x4838 <LCD_sendData+0x2b6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    47e6:	69 8d       	ldd	r22, Y+25	; 0x19
    47e8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    47ea:	8b 8d       	ldd	r24, Y+27	; 0x1b
    47ec:	9c 8d       	ldd	r25, Y+28	; 0x1c
    47ee:	20 e0       	ldi	r18, 0x00	; 0
    47f0:	30 e0       	ldi	r19, 0x00	; 0
    47f2:	40 e2       	ldi	r20, 0x20	; 32
    47f4:	51 e4       	ldi	r21, 0x41	; 65
    47f6:	0e 94 fd 10 	call	0x21fa	; 0x21fa <__mulsf3>
    47fa:	dc 01       	movw	r26, r24
    47fc:	cb 01       	movw	r24, r22
    47fe:	bc 01       	movw	r22, r24
    4800:	cd 01       	movw	r24, r26
    4802:	0e 94 42 02 	call	0x484	; 0x484 <__fixunssfsi>
    4806:	dc 01       	movw	r26, r24
    4808:	cb 01       	movw	r24, r22
    480a:	9c 8b       	std	Y+20, r25	; 0x14
    480c:	8b 8b       	std	Y+19, r24	; 0x13
    480e:	0f c0       	rjmp	.+30     	; 0x482e <LCD_sendData+0x2ac>
    4810:	80 e9       	ldi	r24, 0x90	; 144
    4812:	91 e0       	ldi	r25, 0x01	; 1
    4814:	9a 8b       	std	Y+18, r25	; 0x12
    4816:	89 8b       	std	Y+17, r24	; 0x11
    4818:	89 89       	ldd	r24, Y+17	; 0x11
    481a:	9a 89       	ldd	r25, Y+18	; 0x12
    481c:	01 97       	sbiw	r24, 0x01	; 1
    481e:	f1 f7       	brne	.-4      	; 0x481c <LCD_sendData+0x29a>
    4820:	9a 8b       	std	Y+18, r25	; 0x12
    4822:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4824:	8b 89       	ldd	r24, Y+19	; 0x13
    4826:	9c 89       	ldd	r25, Y+20	; 0x14
    4828:	01 97       	sbiw	r24, 0x01	; 1
    482a:	9c 8b       	std	Y+20, r25	; 0x14
    482c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    482e:	8b 89       	ldd	r24, Y+19	; 0x13
    4830:	9c 89       	ldd	r25, Y+20	; 0x14
    4832:	00 97       	sbiw	r24, 0x00	; 0
    4834:	69 f7       	brne	.-38     	; 0x4810 <LCD_sendData+0x28e>
    4836:	14 c0       	rjmp	.+40     	; 0x4860 <LCD_sendData+0x2de>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4838:	6d 89       	ldd	r22, Y+21	; 0x15
    483a:	7e 89       	ldd	r23, Y+22	; 0x16
    483c:	8f 89       	ldd	r24, Y+23	; 0x17
    483e:	98 8d       	ldd	r25, Y+24	; 0x18
    4840:	0e 94 42 02 	call	0x484	; 0x484 <__fixunssfsi>
    4844:	dc 01       	movw	r26, r24
    4846:	cb 01       	movw	r24, r22
    4848:	9c 8b       	std	Y+20, r25	; 0x14
    484a:	8b 8b       	std	Y+19, r24	; 0x13
    484c:	8b 89       	ldd	r24, Y+19	; 0x13
    484e:	9c 89       	ldd	r25, Y+20	; 0x14
    4850:	98 8b       	std	Y+16, r25	; 0x10
    4852:	8f 87       	std	Y+15, r24	; 0x0f
    4854:	8f 85       	ldd	r24, Y+15	; 0x0f
    4856:	98 89       	ldd	r25, Y+16	; 0x10
    4858:	01 97       	sbiw	r24, 0x01	; 1
    485a:	f1 f7       	brne	.-4      	; 0x4858 <LCD_sendData+0x2d6>
    485c:	98 8b       	std	Y+16, r25	; 0x10
    485e:	8f 87       	std	Y+15, r24	; 0x0f

	#endif

    _delay_ms(LCD_SETUP_TIME_DELAY);
    DIO_writePin(LCD_EN_PORT_ID,LCD_EN_PIN_ID,DIO_LOW_PIN);
    4860:	82 e0       	ldi	r24, 0x02	; 2
    4862:	61 e0       	ldi	r22, 0x01	; 1
    4864:	40 e0       	ldi	r20, 0x00	; 0
    4866:	0e 94 fe 1d 	call	0x3bfc	; 0x3bfc <DIO_writePin>
    486a:	80 e0       	ldi	r24, 0x00	; 0
    486c:	90 e0       	ldi	r25, 0x00	; 0
    486e:	a0 e8       	ldi	r26, 0x80	; 128
    4870:	bf e3       	ldi	r27, 0x3F	; 63
    4872:	8b 87       	std	Y+11, r24	; 0x0b
    4874:	9c 87       	std	Y+12, r25	; 0x0c
    4876:	ad 87       	std	Y+13, r26	; 0x0d
    4878:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    487a:	6b 85       	ldd	r22, Y+11	; 0x0b
    487c:	7c 85       	ldd	r23, Y+12	; 0x0c
    487e:	8d 85       	ldd	r24, Y+13	; 0x0d
    4880:	9e 85       	ldd	r25, Y+14	; 0x0e
    4882:	20 e0       	ldi	r18, 0x00	; 0
    4884:	30 e0       	ldi	r19, 0x00	; 0
    4886:	4a e7       	ldi	r20, 0x7A	; 122
    4888:	55 e4       	ldi	r21, 0x45	; 69
    488a:	0e 94 fd 10 	call	0x21fa	; 0x21fa <__mulsf3>
    488e:	dc 01       	movw	r26, r24
    4890:	cb 01       	movw	r24, r22
    4892:	8f 83       	std	Y+7, r24	; 0x07
    4894:	98 87       	std	Y+8, r25	; 0x08
    4896:	a9 87       	std	Y+9, r26	; 0x09
    4898:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    489a:	6f 81       	ldd	r22, Y+7	; 0x07
    489c:	78 85       	ldd	r23, Y+8	; 0x08
    489e:	89 85       	ldd	r24, Y+9	; 0x09
    48a0:	9a 85       	ldd	r25, Y+10	; 0x0a
    48a2:	20 e0       	ldi	r18, 0x00	; 0
    48a4:	30 e0       	ldi	r19, 0x00	; 0
    48a6:	40 e8       	ldi	r20, 0x80	; 128
    48a8:	5f e3       	ldi	r21, 0x3F	; 63
    48aa:	0e 94 57 12 	call	0x24ae	; 0x24ae <__ltsf2>
    48ae:	88 23       	and	r24, r24
    48b0:	2c f4       	brge	.+10     	; 0x48bc <LCD_sendData+0x33a>
		__ticks = 1;
    48b2:	81 e0       	ldi	r24, 0x01	; 1
    48b4:	90 e0       	ldi	r25, 0x00	; 0
    48b6:	9e 83       	std	Y+6, r25	; 0x06
    48b8:	8d 83       	std	Y+5, r24	; 0x05
    48ba:	3f c0       	rjmp	.+126    	; 0x493a <LCD_sendData+0x3b8>
	else if (__tmp > 65535)
    48bc:	6f 81       	ldd	r22, Y+7	; 0x07
    48be:	78 85       	ldd	r23, Y+8	; 0x08
    48c0:	89 85       	ldd	r24, Y+9	; 0x09
    48c2:	9a 85       	ldd	r25, Y+10	; 0x0a
    48c4:	20 e0       	ldi	r18, 0x00	; 0
    48c6:	3f ef       	ldi	r19, 0xFF	; 255
    48c8:	4f e7       	ldi	r20, 0x7F	; 127
    48ca:	57 e4       	ldi	r21, 0x47	; 71
    48cc:	0e 94 f7 11 	call	0x23ee	; 0x23ee <__gtsf2>
    48d0:	18 16       	cp	r1, r24
    48d2:	4c f5       	brge	.+82     	; 0x4926 <LCD_sendData+0x3a4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    48d4:	6b 85       	ldd	r22, Y+11	; 0x0b
    48d6:	7c 85       	ldd	r23, Y+12	; 0x0c
    48d8:	8d 85       	ldd	r24, Y+13	; 0x0d
    48da:	9e 85       	ldd	r25, Y+14	; 0x0e
    48dc:	20 e0       	ldi	r18, 0x00	; 0
    48de:	30 e0       	ldi	r19, 0x00	; 0
    48e0:	40 e2       	ldi	r20, 0x20	; 32
    48e2:	51 e4       	ldi	r21, 0x41	; 65
    48e4:	0e 94 fd 10 	call	0x21fa	; 0x21fa <__mulsf3>
    48e8:	dc 01       	movw	r26, r24
    48ea:	cb 01       	movw	r24, r22
    48ec:	bc 01       	movw	r22, r24
    48ee:	cd 01       	movw	r24, r26
    48f0:	0e 94 42 02 	call	0x484	; 0x484 <__fixunssfsi>
    48f4:	dc 01       	movw	r26, r24
    48f6:	cb 01       	movw	r24, r22
    48f8:	9e 83       	std	Y+6, r25	; 0x06
    48fa:	8d 83       	std	Y+5, r24	; 0x05
    48fc:	0f c0       	rjmp	.+30     	; 0x491c <LCD_sendData+0x39a>
    48fe:	80 e9       	ldi	r24, 0x90	; 144
    4900:	91 e0       	ldi	r25, 0x01	; 1
    4902:	9c 83       	std	Y+4, r25	; 0x04
    4904:	8b 83       	std	Y+3, r24	; 0x03
    4906:	8b 81       	ldd	r24, Y+3	; 0x03
    4908:	9c 81       	ldd	r25, Y+4	; 0x04
    490a:	01 97       	sbiw	r24, 0x01	; 1
    490c:	f1 f7       	brne	.-4      	; 0x490a <LCD_sendData+0x388>
    490e:	9c 83       	std	Y+4, r25	; 0x04
    4910:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4912:	8d 81       	ldd	r24, Y+5	; 0x05
    4914:	9e 81       	ldd	r25, Y+6	; 0x06
    4916:	01 97       	sbiw	r24, 0x01	; 1
    4918:	9e 83       	std	Y+6, r25	; 0x06
    491a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    491c:	8d 81       	ldd	r24, Y+5	; 0x05
    491e:	9e 81       	ldd	r25, Y+6	; 0x06
    4920:	00 97       	sbiw	r24, 0x00	; 0
    4922:	69 f7       	brne	.-38     	; 0x48fe <LCD_sendData+0x37c>
    4924:	14 c0       	rjmp	.+40     	; 0x494e <LCD_sendData+0x3cc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4926:	6f 81       	ldd	r22, Y+7	; 0x07
    4928:	78 85       	ldd	r23, Y+8	; 0x08
    492a:	89 85       	ldd	r24, Y+9	; 0x09
    492c:	9a 85       	ldd	r25, Y+10	; 0x0a
    492e:	0e 94 42 02 	call	0x484	; 0x484 <__fixunssfsi>
    4932:	dc 01       	movw	r26, r24
    4934:	cb 01       	movw	r24, r22
    4936:	9e 83       	std	Y+6, r25	; 0x06
    4938:	8d 83       	std	Y+5, r24	; 0x05
    493a:	8d 81       	ldd	r24, Y+5	; 0x05
    493c:	9e 81       	ldd	r25, Y+6	; 0x06
    493e:	9a 83       	std	Y+2, r25	; 0x02
    4940:	89 83       	std	Y+1, r24	; 0x01
    4942:	89 81       	ldd	r24, Y+1	; 0x01
    4944:	9a 81       	ldd	r25, Y+2	; 0x02
    4946:	01 97       	sbiw	r24, 0x01	; 1
    4948:	f1 f7       	brne	.-4      	; 0x4946 <LCD_sendData+0x3c4>
    494a:	9a 83       	std	Y+2, r25	; 0x02
    494c:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(LCD_SETUP_TIME_DELAY);
}
    494e:	e9 96       	adiw	r28, 0x39	; 57
    4950:	0f b6       	in	r0, 0x3f	; 63
    4952:	f8 94       	cli
    4954:	de bf       	out	0x3e, r29	; 62
    4956:	0f be       	out	0x3f, r0	; 63
    4958:	cd bf       	out	0x3d, r28	; 61
    495a:	cf 91       	pop	r28
    495c:	df 91       	pop	r29
    495e:	08 95       	ret

00004960 <LCD_moveCursor>:
 * [Arguments]     : <a_row>      -> Indicates to the row number of the required position.
 *                   <a_column>   -> Indicates to the column number of the required position.
 * [return]        : The function returns void.
 ====================================================================================================================*/
void LCD_moveCursor(LCD_rowID a_row, LCD_columnID a_column)
{
    4960:	df 93       	push	r29
    4962:	cf 93       	push	r28
    4964:	00 d0       	rcall	.+0      	; 0x4966 <LCD_moveCursor+0x6>
    4966:	00 d0       	rcall	.+0      	; 0x4968 <LCD_moveCursor+0x8>
    4968:	0f 92       	push	r0
    496a:	cd b7       	in	r28, 0x3d	; 61
    496c:	de b7       	in	r29, 0x3e	; 62
    496e:	8a 83       	std	Y+2, r24	; 0x02
    4970:	6b 83       	std	Y+3, r22	; 0x03
		break;
	}

	#elif(LCD_NUM_OF_COLUMNS == LCD_20_COLUMNS)

	uint8 LOC_memoryAddress = LCD_20_COLUMNS_1ST_ROW_BASE_ADDRESS;
    4972:	19 82       	std	Y+1, r1	; 0x01

	switch (a_row)
    4974:	8a 81       	ldd	r24, Y+2	; 0x02
    4976:	28 2f       	mov	r18, r24
    4978:	30 e0       	ldi	r19, 0x00	; 0
    497a:	3d 83       	std	Y+5, r19	; 0x05
    497c:	2c 83       	std	Y+4, r18	; 0x04
    497e:	8c 81       	ldd	r24, Y+4	; 0x04
    4980:	9d 81       	ldd	r25, Y+5	; 0x05
    4982:	81 30       	cpi	r24, 0x01	; 1
    4984:	91 05       	cpc	r25, r1
    4986:	c1 f0       	breq	.+48     	; 0x49b8 <LCD_moveCursor+0x58>
    4988:	2c 81       	ldd	r18, Y+4	; 0x04
    498a:	3d 81       	ldd	r19, Y+5	; 0x05
    498c:	22 30       	cpi	r18, 0x02	; 2
    498e:	31 05       	cpc	r19, r1
    4990:	2c f4       	brge	.+10     	; 0x499c <LCD_moveCursor+0x3c>
    4992:	8c 81       	ldd	r24, Y+4	; 0x04
    4994:	9d 81       	ldd	r25, Y+5	; 0x05
    4996:	00 97       	sbiw	r24, 0x00	; 0
    4998:	61 f0       	breq	.+24     	; 0x49b2 <LCD_moveCursor+0x52>
    499a:	1a c0       	rjmp	.+52     	; 0x49d0 <LCD_moveCursor+0x70>
    499c:	2c 81       	ldd	r18, Y+4	; 0x04
    499e:	3d 81       	ldd	r19, Y+5	; 0x05
    49a0:	22 30       	cpi	r18, 0x02	; 2
    49a2:	31 05       	cpc	r19, r1
    49a4:	69 f0       	breq	.+26     	; 0x49c0 <LCD_moveCursor+0x60>
    49a6:	8c 81       	ldd	r24, Y+4	; 0x04
    49a8:	9d 81       	ldd	r25, Y+5	; 0x05
    49aa:	83 30       	cpi	r24, 0x03	; 3
    49ac:	91 05       	cpc	r25, r1
    49ae:	61 f0       	breq	.+24     	; 0x49c8 <LCD_moveCursor+0x68>
    49b0:	0f c0       	rjmp	.+30     	; 0x49d0 <LCD_moveCursor+0x70>
	{
	case LCD_ROW_1_ID:
		LOC_memoryAddress = (LCD_20_COLUMNS_1ST_ROW_BASE_ADDRESS + a_column);
    49b2:	8b 81       	ldd	r24, Y+3	; 0x03
    49b4:	89 83       	std	Y+1, r24	; 0x01
    49b6:	0d c0       	rjmp	.+26     	; 0x49d2 <LCD_moveCursor+0x72>
		break;

	case LCD_ROW_2_ID:
		LOC_memoryAddress = (LCD_20_COLUMNS_2ND_ROW_BASE_ADDRESS + a_column);
    49b8:	8b 81       	ldd	r24, Y+3	; 0x03
    49ba:	80 5c       	subi	r24, 0xC0	; 192
    49bc:	89 83       	std	Y+1, r24	; 0x01
    49be:	09 c0       	rjmp	.+18     	; 0x49d2 <LCD_moveCursor+0x72>
		break;

	case LCD_ROW_3_ID:
		LOC_memoryAddress = (LCD_20_COLUMNS_3RD_ROW_BASE_ADDRESS + a_column);
    49c0:	8b 81       	ldd	r24, Y+3	; 0x03
    49c2:	8c 5e       	subi	r24, 0xEC	; 236
    49c4:	89 83       	std	Y+1, r24	; 0x01
    49c6:	05 c0       	rjmp	.+10     	; 0x49d2 <LCD_moveCursor+0x72>
		break;

	case LCD_ROW_4_ID:
		LOC_memoryAddress = (LCD_20_COLUMNS_4TH_ROW_BASE_ADDRESS + a_column);
    49c8:	8b 81       	ldd	r24, Y+3	; 0x03
    49ca:	8c 5a       	subi	r24, 0xAC	; 172
    49cc:	89 83       	std	Y+1, r24	; 0x01
    49ce:	01 c0       	rjmp	.+2      	; 0x49d2 <LCD_moveCursor+0x72>
		break;

	default:
		LOC_memoryAddress = LCD_20_COLUMNS_1ST_ROW_BASE_ADDRESS;
    49d0:	19 82       	std	Y+1, r1	; 0x01
		break;
	}

	#endif

	LCD_sendCommand(LCD_MOVE_CURSOR_COMMAND(LOC_memoryAddress));
    49d2:	89 81       	ldd	r24, Y+1	; 0x01
    49d4:	80 68       	ori	r24, 0x80	; 128
    49d6:	0e 94 d2 20 	call	0x41a4	; 0x41a4 <LCD_sendCommand>
}
    49da:	0f 90       	pop	r0
    49dc:	0f 90       	pop	r0
    49de:	0f 90       	pop	r0
    49e0:	0f 90       	pop	r0
    49e2:	0f 90       	pop	r0
    49e4:	cf 91       	pop	r28
    49e6:	df 91       	pop	r29
    49e8:	08 95       	ret

000049ea <LCD_displayCharacter>:
 * [Description]   : Display a specific character on the LCD at the cursor position.
 * [Arguments]     : <a_charachter>      -> Indicates to the required character.
 * [return]        : The function returns void.
 ====================================================================================================================*/
void LCD_displayCharacter(uint8 a_charachter)
{
    49ea:	df 93       	push	r29
    49ec:	cf 93       	push	r28
    49ee:	0f 92       	push	r0
    49f0:	cd b7       	in	r28, 0x3d	; 61
    49f2:	de b7       	in	r29, 0x3e	; 62
    49f4:	89 83       	std	Y+1, r24	; 0x01
	LCD_sendData(a_charachter);
    49f6:	89 81       	ldd	r24, Y+1	; 0x01
    49f8:	0e 94 c1 22 	call	0x4582	; 0x4582 <LCD_sendData>
}
    49fc:	0f 90       	pop	r0
    49fe:	cf 91       	pop	r28
    4a00:	df 91       	pop	r29
    4a02:	08 95       	ret

00004a04 <LCD_displayCharacterRowColumn>:
 *                   <a_row>         -> Indicates to the row number of the required position.
 *                   <a_column>      -> Indicates to the column number of the required position.
 * [return]        : The function returns void.
 ====================================================================================================================*/
void LCD_displayCharacterRowColumn(uint8 a_charachter, uint8 a_row, uint8 a_column)
{
    4a04:	df 93       	push	r29
    4a06:	cf 93       	push	r28
    4a08:	00 d0       	rcall	.+0      	; 0x4a0a <LCD_displayCharacterRowColumn+0x6>
    4a0a:	0f 92       	push	r0
    4a0c:	cd b7       	in	r28, 0x3d	; 61
    4a0e:	de b7       	in	r29, 0x3e	; 62
    4a10:	89 83       	std	Y+1, r24	; 0x01
    4a12:	6a 83       	std	Y+2, r22	; 0x02
    4a14:	4b 83       	std	Y+3, r20	; 0x03
	LCD_moveCursor(a_row,a_column);
    4a16:	8a 81       	ldd	r24, Y+2	; 0x02
    4a18:	6b 81       	ldd	r22, Y+3	; 0x03
    4a1a:	0e 94 b0 24 	call	0x4960	; 0x4960 <LCD_moveCursor>
	LCD_sendData(a_charachter);
    4a1e:	89 81       	ldd	r24, Y+1	; 0x01
    4a20:	0e 94 c1 22 	call	0x4582	; 0x4582 <LCD_sendData>
}
    4a24:	0f 90       	pop	r0
    4a26:	0f 90       	pop	r0
    4a28:	0f 90       	pop	r0
    4a2a:	cf 91       	pop	r28
    4a2c:	df 91       	pop	r29
    4a2e:	08 95       	ret

00004a30 <LCD_displayString>:
 * [Description]   : Display a specific string on the LCD at the cursor position.
 * [Arguments]     : <a_ptr2string>      -> Pointer points to the required string.
 * [return]        : The function returns void.
 ====================================================================================================================*/
void LCD_displayString(uint8* a_ptr2string)
{
    4a30:	df 93       	push	r29
    4a32:	cf 93       	push	r28
    4a34:	00 d0       	rcall	.+0      	; 0x4a36 <LCD_displayString+0x6>
    4a36:	0f 92       	push	r0
    4a38:	cd b7       	in	r28, 0x3d	; 61
    4a3a:	de b7       	in	r29, 0x3e	; 62
    4a3c:	9b 83       	std	Y+3, r25	; 0x03
    4a3e:	8a 83       	std	Y+2, r24	; 0x02
	if(a_ptr2string != NULL_PTR)
    4a40:	8a 81       	ldd	r24, Y+2	; 0x02
    4a42:	9b 81       	ldd	r25, Y+3	; 0x03
    4a44:	00 97       	sbiw	r24, 0x00	; 0
    4a46:	d9 f0       	breq	.+54     	; 0x4a7e <LCD_displayString+0x4e>
	{
		for(uint8 counter = 0; *(a_ptr2string + counter) != '\0'; counter++)
    4a48:	19 82       	std	Y+1, r1	; 0x01
    4a4a:	0e c0       	rjmp	.+28     	; 0x4a68 <LCD_displayString+0x38>
		{
			LCD_displayCharacter(*(a_ptr2string + counter));
    4a4c:	89 81       	ldd	r24, Y+1	; 0x01
    4a4e:	28 2f       	mov	r18, r24
    4a50:	30 e0       	ldi	r19, 0x00	; 0
    4a52:	8a 81       	ldd	r24, Y+2	; 0x02
    4a54:	9b 81       	ldd	r25, Y+3	; 0x03
    4a56:	fc 01       	movw	r30, r24
    4a58:	e2 0f       	add	r30, r18
    4a5a:	f3 1f       	adc	r31, r19
    4a5c:	80 81       	ld	r24, Z
    4a5e:	0e 94 f5 24 	call	0x49ea	; 0x49ea <LCD_displayCharacter>
 ====================================================================================================================*/
void LCD_displayString(uint8* a_ptr2string)
{
	if(a_ptr2string != NULL_PTR)
	{
		for(uint8 counter = 0; *(a_ptr2string + counter) != '\0'; counter++)
    4a62:	89 81       	ldd	r24, Y+1	; 0x01
    4a64:	8f 5f       	subi	r24, 0xFF	; 255
    4a66:	89 83       	std	Y+1, r24	; 0x01
    4a68:	89 81       	ldd	r24, Y+1	; 0x01
    4a6a:	28 2f       	mov	r18, r24
    4a6c:	30 e0       	ldi	r19, 0x00	; 0
    4a6e:	8a 81       	ldd	r24, Y+2	; 0x02
    4a70:	9b 81       	ldd	r25, Y+3	; 0x03
    4a72:	fc 01       	movw	r30, r24
    4a74:	e2 0f       	add	r30, r18
    4a76:	f3 1f       	adc	r31, r19
    4a78:	80 81       	ld	r24, Z
    4a7a:	88 23       	and	r24, r24
    4a7c:	39 f7       	brne	.-50     	; 0x4a4c <LCD_displayString+0x1c>
	}
	else
	{
		/* Do Nothing. */
	}
}
    4a7e:	0f 90       	pop	r0
    4a80:	0f 90       	pop	r0
    4a82:	0f 90       	pop	r0
    4a84:	cf 91       	pop	r28
    4a86:	df 91       	pop	r29
    4a88:	08 95       	ret

00004a8a <LCD_displayStringRowColumn>:
 *                   <a_row>         -> Indicates to the row number of the required position.
 *                   <a_column>      -> Indicates to the column number of the required position.
 * [return]        : The function returns void.
 ====================================================================================================================*/
void LCD_displayStringRowColumn(uint8* a_ptr2string, uint8 a_row, uint8 a_column)
{
    4a8a:	df 93       	push	r29
    4a8c:	cf 93       	push	r28
    4a8e:	00 d0       	rcall	.+0      	; 0x4a90 <LCD_displayStringRowColumn+0x6>
    4a90:	00 d0       	rcall	.+0      	; 0x4a92 <LCD_displayStringRowColumn+0x8>
    4a92:	cd b7       	in	r28, 0x3d	; 61
    4a94:	de b7       	in	r29, 0x3e	; 62
    4a96:	9a 83       	std	Y+2, r25	; 0x02
    4a98:	89 83       	std	Y+1, r24	; 0x01
    4a9a:	6b 83       	std	Y+3, r22	; 0x03
    4a9c:	4c 83       	std	Y+4, r20	; 0x04
	LCD_moveCursor(a_row,a_column);
    4a9e:	8b 81       	ldd	r24, Y+3	; 0x03
    4aa0:	6c 81       	ldd	r22, Y+4	; 0x04
    4aa2:	0e 94 b0 24 	call	0x4960	; 0x4960 <LCD_moveCursor>
	LCD_displayString(a_ptr2string);
    4aa6:	89 81       	ldd	r24, Y+1	; 0x01
    4aa8:	9a 81       	ldd	r25, Y+2	; 0x02
    4aaa:	0e 94 18 25 	call	0x4a30	; 0x4a30 <LCD_displayString>
}
    4aae:	0f 90       	pop	r0
    4ab0:	0f 90       	pop	r0
    4ab2:	0f 90       	pop	r0
    4ab4:	0f 90       	pop	r0
    4ab6:	cf 91       	pop	r28
    4ab8:	df 91       	pop	r29
    4aba:	08 95       	ret

00004abc <LCD_displayInteger>:
 * [Description]   : Convert a specific integer value to string and display it on the LCD.
 * [Arguments]     : <a_integerNumber>      -> Indicates to the required integer number.
 * [return]        : The function returns void.
 ====================================================================================================================*/
void LCD_displayInteger(uint64 a_integerNumber)
{
    4abc:	af 92       	push	r10
    4abe:	bf 92       	push	r11
    4ac0:	cf 92       	push	r12
    4ac2:	df 92       	push	r13
    4ac4:	ef 92       	push	r14
    4ac6:	ff 92       	push	r15
    4ac8:	0f 93       	push	r16
    4aca:	1f 93       	push	r17
    4acc:	df 93       	push	r29
    4ace:	cf 93       	push	r28
    4ad0:	cd b7       	in	r28, 0x3d	; 61
    4ad2:	de b7       	in	r29, 0x3e	; 62
    4ad4:	c6 56       	subi	r28, 0x66	; 102
    4ad6:	d0 40       	sbci	r29, 0x00	; 0
    4ad8:	0f b6       	in	r0, 0x3f	; 63
    4ada:	f8 94       	cli
    4adc:	de bf       	out	0x3e, r29	; 62
    4ade:	0f be       	out	0x3f, r0	; 63
    4ae0:	cd bf       	out	0x3d, r28	; 61
    4ae2:	29 87       	std	Y+9, r18	; 0x09
    4ae4:	3a 87       	std	Y+10, r19	; 0x0a
    4ae6:	4b 87       	std	Y+11, r20	; 0x0b
    4ae8:	5c 87       	std	Y+12, r21	; 0x0c
    4aea:	6d 87       	std	Y+13, r22	; 0x0d
    4aec:	7e 87       	std	Y+14, r23	; 0x0e
    4aee:	8f 87       	std	Y+15, r24	; 0x0f
    4af0:	98 8b       	std	Y+16, r25	; 0x10
	if(a_integerNumber == 0)
    4af2:	89 85       	ldd	r24, Y+9	; 0x09
    4af4:	9a 85       	ldd	r25, Y+10	; 0x0a
    4af6:	89 2b       	or	r24, r25
    4af8:	9b 85       	ldd	r25, Y+11	; 0x0b
    4afa:	89 2b       	or	r24, r25
    4afc:	9c 85       	ldd	r25, Y+12	; 0x0c
    4afe:	89 2b       	or	r24, r25
    4b00:	9d 85       	ldd	r25, Y+13	; 0x0d
    4b02:	89 2b       	or	r24, r25
    4b04:	9e 85       	ldd	r25, Y+14	; 0x0e
    4b06:	89 2b       	or	r24, r25
    4b08:	9f 85       	ldd	r25, Y+15	; 0x0f
    4b0a:	89 2b       	or	r24, r25
    4b0c:	98 89       	ldd	r25, Y+16	; 0x10
    4b0e:	89 2b       	or	r24, r25
    4b10:	88 23       	and	r24, r24
    4b12:	21 f4       	brne	.+8      	; 0x4b1c <LCD_displayInteger+0x60>
	{
		LCD_displayCharacter('0');
    4b14:	80 e3       	ldi	r24, 0x30	; 48
    4b16:	0e 94 f5 24 	call	0x49ea	; 0x49ea <LCD_displayCharacter>
    4b1a:	f9 c3       	rjmp	.+2034   	; 0x530e <LCD_displayInteger+0x852>
	}

	else
	{
		uint64 LOC_reversedNumber = 1;
    4b1c:	81 e0       	ldi	r24, 0x01	; 1
    4b1e:	89 83       	std	Y+1, r24	; 0x01
    4b20:	1a 82       	std	Y+2, r1	; 0x02
    4b22:	1b 82       	std	Y+3, r1	; 0x03
    4b24:	1c 82       	std	Y+4, r1	; 0x04
    4b26:	1d 82       	std	Y+5, r1	; 0x05
    4b28:	1e 82       	std	Y+6, r1	; 0x06
    4b2a:	1f 82       	std	Y+7, r1	; 0x07
    4b2c:	18 86       	std	Y+8, r1	; 0x08
    4b2e:	5e c3       	rjmp	.+1724   	; 0x51ec <LCD_displayInteger+0x730>
		
		while(a_integerNumber != 0)
		{
			LOC_reversedNumber = (LOC_reversedNumber * 10) + (a_integerNumber % 10);
    4b30:	29 81       	ldd	r18, Y+1	; 0x01
    4b32:	3a 81       	ldd	r19, Y+2	; 0x02
    4b34:	4b 81       	ldd	r20, Y+3	; 0x03
    4b36:	5c 81       	ldd	r21, Y+4	; 0x04
    4b38:	6d 81       	ldd	r22, Y+5	; 0x05
    4b3a:	7e 81       	ldd	r23, Y+6	; 0x06
    4b3c:	8f 81       	ldd	r24, Y+7	; 0x07
    4b3e:	98 85       	ldd	r25, Y+8	; 0x08
    4b40:	a2 2e       	mov	r10, r18
    4b42:	b3 2e       	mov	r11, r19
    4b44:	c4 2e       	mov	r12, r20
    4b46:	d5 2e       	mov	r13, r21
    4b48:	e6 2e       	mov	r14, r22
    4b4a:	f7 2e       	mov	r15, r23
    4b4c:	08 2f       	mov	r16, r24
    4b4e:	19 2f       	mov	r17, r25
    4b50:	2a 2d       	mov	r18, r10
    4b52:	3b 2d       	mov	r19, r11
    4b54:	4c 2d       	mov	r20, r12
    4b56:	5d 2d       	mov	r21, r13
    4b58:	6e 2d       	mov	r22, r14
    4b5a:	7f 2d       	mov	r23, r15
    4b5c:	80 2f       	mov	r24, r16
    4b5e:	91 2f       	mov	r25, r17
    4b60:	01 e0       	ldi	r16, 0x01	; 1
    4b62:	0e 94 c3 01 	call	0x386	; 0x386 <__ashldi3>
    4b66:	29 a3       	std	Y+33, r18	; 0x21
    4b68:	3a a3       	std	Y+34, r19	; 0x22
    4b6a:	4b a3       	std	Y+35, r20	; 0x23
    4b6c:	5c a3       	std	Y+36, r21	; 0x24
    4b6e:	6d a3       	std	Y+37, r22	; 0x25
    4b70:	7e a3       	std	Y+38, r23	; 0x26
    4b72:	8f a3       	std	Y+39, r24	; 0x27
    4b74:	98 a7       	std	Y+40, r25	; 0x28
    4b76:	29 a1       	ldd	r18, Y+33	; 0x21
    4b78:	3a a1       	ldd	r19, Y+34	; 0x22
    4b7a:	4b a1       	ldd	r20, Y+35	; 0x23
    4b7c:	5c a1       	ldd	r21, Y+36	; 0x24
    4b7e:	6d a1       	ldd	r22, Y+37	; 0x25
    4b80:	7e a1       	ldd	r23, Y+38	; 0x26
    4b82:	8f a1       	ldd	r24, Y+39	; 0x27
    4b84:	98 a5       	ldd	r25, Y+40	; 0x28
    4b86:	02 e0       	ldi	r16, 0x02	; 2
    4b88:	0e 94 c3 01 	call	0x386	; 0x386 <__ashldi3>
    4b8c:	29 a7       	std	Y+41, r18	; 0x29
    4b8e:	3a a7       	std	Y+42, r19	; 0x2a
    4b90:	4b a7       	std	Y+43, r20	; 0x2b
    4b92:	5c a7       	std	Y+44, r21	; 0x2c
    4b94:	6d a7       	std	Y+45, r22	; 0x2d
    4b96:	7e a7       	std	Y+46, r23	; 0x2e
    4b98:	8f a7       	std	Y+47, r24	; 0x2f
    4b9a:	98 ab       	std	Y+48, r25	; 0x30
    4b9c:	89 a1       	ldd	r24, Y+33	; 0x21
    4b9e:	99 a5       	ldd	r25, Y+41	; 0x29
    4ba0:	89 0f       	add	r24, r25
    4ba2:	89 ab       	std	Y+49, r24	; 0x31
    4ba4:	81 e0       	ldi	r24, 0x01	; 1
    4ba6:	89 af       	std	Y+57, r24	; 0x39
    4ba8:	99 a9       	ldd	r25, Y+49	; 0x31
    4baa:	89 a1       	ldd	r24, Y+33	; 0x21
    4bac:	98 17       	cp	r25, r24
    4bae:	08 f0       	brcs	.+2      	; 0x4bb2 <LCD_displayInteger+0xf6>
    4bb0:	19 ae       	std	Y+57, r1	; 0x39
    4bb2:	9a a1       	ldd	r25, Y+34	; 0x22
    4bb4:	8a a5       	ldd	r24, Y+42	; 0x2a
    4bb6:	98 0f       	add	r25, r24
    4bb8:	9a ab       	std	Y+50, r25	; 0x32
    4bba:	91 e0       	ldi	r25, 0x01	; 1
    4bbc:	9a af       	std	Y+58, r25	; 0x3a
    4bbe:	8a a9       	ldd	r24, Y+50	; 0x32
    4bc0:	9a a1       	ldd	r25, Y+34	; 0x22
    4bc2:	89 17       	cp	r24, r25
    4bc4:	08 f0       	brcs	.+2      	; 0x4bc8 <LCD_displayInteger+0x10c>
    4bc6:	1a ae       	std	Y+58, r1	; 0x3a
    4bc8:	89 ad       	ldd	r24, Y+57	; 0x39
    4bca:	9a a9       	ldd	r25, Y+50	; 0x32
    4bcc:	89 0f       	add	r24, r25
    4bce:	8b af       	std	Y+59, r24	; 0x3b
    4bd0:	81 e0       	ldi	r24, 0x01	; 1
    4bd2:	8c af       	std	Y+60, r24	; 0x3c
    4bd4:	9b ad       	ldd	r25, Y+59	; 0x3b
    4bd6:	8a a9       	ldd	r24, Y+50	; 0x32
    4bd8:	98 17       	cp	r25, r24
    4bda:	08 f0       	brcs	.+2      	; 0x4bde <LCD_displayInteger+0x122>
    4bdc:	1c ae       	std	Y+60, r1	; 0x3c
    4bde:	9a ad       	ldd	r25, Y+58	; 0x3a
    4be0:	8c ad       	ldd	r24, Y+60	; 0x3c
    4be2:	98 2b       	or	r25, r24
    4be4:	9a af       	std	Y+58, r25	; 0x3a
    4be6:	9b ad       	ldd	r25, Y+59	; 0x3b
    4be8:	9a ab       	std	Y+50, r25	; 0x32
    4bea:	8b a1       	ldd	r24, Y+35	; 0x23
    4bec:	9b a5       	ldd	r25, Y+43	; 0x2b
    4bee:	89 0f       	add	r24, r25
    4bf0:	8b ab       	std	Y+51, r24	; 0x33
    4bf2:	81 e0       	ldi	r24, 0x01	; 1
    4bf4:	8d af       	std	Y+61, r24	; 0x3d
    4bf6:	9b a9       	ldd	r25, Y+51	; 0x33
    4bf8:	8b a1       	ldd	r24, Y+35	; 0x23
    4bfa:	98 17       	cp	r25, r24
    4bfc:	08 f0       	brcs	.+2      	; 0x4c00 <LCD_displayInteger+0x144>
    4bfe:	1d ae       	std	Y+61, r1	; 0x3d
    4c00:	9a ad       	ldd	r25, Y+58	; 0x3a
    4c02:	8b a9       	ldd	r24, Y+51	; 0x33
    4c04:	98 0f       	add	r25, r24
    4c06:	9e af       	std	Y+62, r25	; 0x3e
    4c08:	91 e0       	ldi	r25, 0x01	; 1
    4c0a:	9f af       	std	Y+63, r25	; 0x3f
    4c0c:	8e ad       	ldd	r24, Y+62	; 0x3e
    4c0e:	9b a9       	ldd	r25, Y+51	; 0x33
    4c10:	89 17       	cp	r24, r25
    4c12:	08 f0       	brcs	.+2      	; 0x4c16 <LCD_displayInteger+0x15a>
    4c14:	1f ae       	std	Y+63, r1	; 0x3f
    4c16:	8d ad       	ldd	r24, Y+61	; 0x3d
    4c18:	9f ad       	ldd	r25, Y+63	; 0x3f
    4c1a:	89 2b       	or	r24, r25
    4c1c:	8d af       	std	Y+61, r24	; 0x3d
    4c1e:	8e ad       	ldd	r24, Y+62	; 0x3e
    4c20:	8b ab       	std	Y+51, r24	; 0x33
    4c22:	9c a1       	ldd	r25, Y+36	; 0x24
    4c24:	8c a5       	ldd	r24, Y+44	; 0x2c
    4c26:	98 0f       	add	r25, r24
    4c28:	9c ab       	std	Y+52, r25	; 0x34
    4c2a:	91 e0       	ldi	r25, 0x01	; 1
    4c2c:	21 96       	adiw	r28, 0x01	; 1
    4c2e:	9f af       	std	Y+63, r25	; 0x3f
    4c30:	21 97       	sbiw	r28, 0x01	; 1
    4c32:	8c a9       	ldd	r24, Y+52	; 0x34
    4c34:	9c a1       	ldd	r25, Y+36	; 0x24
    4c36:	89 17       	cp	r24, r25
    4c38:	18 f0       	brcs	.+6      	; 0x4c40 <LCD_displayInteger+0x184>
    4c3a:	21 96       	adiw	r28, 0x01	; 1
    4c3c:	1f ae       	std	Y+63, r1	; 0x3f
    4c3e:	21 97       	sbiw	r28, 0x01	; 1
    4c40:	8d ad       	ldd	r24, Y+61	; 0x3d
    4c42:	9c a9       	ldd	r25, Y+52	; 0x34
    4c44:	89 0f       	add	r24, r25
    4c46:	22 96       	adiw	r28, 0x02	; 2
    4c48:	8f af       	std	Y+63, r24	; 0x3f
    4c4a:	22 97       	sbiw	r28, 0x02	; 2
    4c4c:	81 e0       	ldi	r24, 0x01	; 1
    4c4e:	23 96       	adiw	r28, 0x03	; 3
    4c50:	8f af       	std	Y+63, r24	; 0x3f
    4c52:	23 97       	sbiw	r28, 0x03	; 3
    4c54:	22 96       	adiw	r28, 0x02	; 2
    4c56:	9f ad       	ldd	r25, Y+63	; 0x3f
    4c58:	22 97       	sbiw	r28, 0x02	; 2
    4c5a:	8c a9       	ldd	r24, Y+52	; 0x34
    4c5c:	98 17       	cp	r25, r24
    4c5e:	18 f0       	brcs	.+6      	; 0x4c66 <LCD_displayInteger+0x1aa>
    4c60:	23 96       	adiw	r28, 0x03	; 3
    4c62:	1f ae       	std	Y+63, r1	; 0x3f
    4c64:	23 97       	sbiw	r28, 0x03	; 3
    4c66:	21 96       	adiw	r28, 0x01	; 1
    4c68:	9f ad       	ldd	r25, Y+63	; 0x3f
    4c6a:	21 97       	sbiw	r28, 0x01	; 1
    4c6c:	23 96       	adiw	r28, 0x03	; 3
    4c6e:	8f ad       	ldd	r24, Y+63	; 0x3f
    4c70:	23 97       	sbiw	r28, 0x03	; 3
    4c72:	98 2b       	or	r25, r24
    4c74:	21 96       	adiw	r28, 0x01	; 1
    4c76:	9f af       	std	Y+63, r25	; 0x3f
    4c78:	21 97       	sbiw	r28, 0x01	; 1
    4c7a:	22 96       	adiw	r28, 0x02	; 2
    4c7c:	9f ad       	ldd	r25, Y+63	; 0x3f
    4c7e:	22 97       	sbiw	r28, 0x02	; 2
    4c80:	9c ab       	std	Y+52, r25	; 0x34
    4c82:	8d a1       	ldd	r24, Y+37	; 0x25
    4c84:	9d a5       	ldd	r25, Y+45	; 0x2d
    4c86:	89 0f       	add	r24, r25
    4c88:	8d ab       	std	Y+53, r24	; 0x35
    4c8a:	81 e0       	ldi	r24, 0x01	; 1
    4c8c:	24 96       	adiw	r28, 0x04	; 4
    4c8e:	8f af       	std	Y+63, r24	; 0x3f
    4c90:	24 97       	sbiw	r28, 0x04	; 4
    4c92:	9d a9       	ldd	r25, Y+53	; 0x35
    4c94:	8d a1       	ldd	r24, Y+37	; 0x25
    4c96:	98 17       	cp	r25, r24
    4c98:	18 f0       	brcs	.+6      	; 0x4ca0 <LCD_displayInteger+0x1e4>
    4c9a:	24 96       	adiw	r28, 0x04	; 4
    4c9c:	1f ae       	std	Y+63, r1	; 0x3f
    4c9e:	24 97       	sbiw	r28, 0x04	; 4
    4ca0:	21 96       	adiw	r28, 0x01	; 1
    4ca2:	9f ad       	ldd	r25, Y+63	; 0x3f
    4ca4:	21 97       	sbiw	r28, 0x01	; 1
    4ca6:	8d a9       	ldd	r24, Y+53	; 0x35
    4ca8:	98 0f       	add	r25, r24
    4caa:	25 96       	adiw	r28, 0x05	; 5
    4cac:	9f af       	std	Y+63, r25	; 0x3f
    4cae:	25 97       	sbiw	r28, 0x05	; 5
    4cb0:	91 e0       	ldi	r25, 0x01	; 1
    4cb2:	26 96       	adiw	r28, 0x06	; 6
    4cb4:	9f af       	std	Y+63, r25	; 0x3f
    4cb6:	26 97       	sbiw	r28, 0x06	; 6
    4cb8:	25 96       	adiw	r28, 0x05	; 5
    4cba:	8f ad       	ldd	r24, Y+63	; 0x3f
    4cbc:	25 97       	sbiw	r28, 0x05	; 5
    4cbe:	9d a9       	ldd	r25, Y+53	; 0x35
    4cc0:	89 17       	cp	r24, r25
    4cc2:	18 f0       	brcs	.+6      	; 0x4cca <LCD_displayInteger+0x20e>
    4cc4:	26 96       	adiw	r28, 0x06	; 6
    4cc6:	1f ae       	std	Y+63, r1	; 0x3f
    4cc8:	26 97       	sbiw	r28, 0x06	; 6
    4cca:	24 96       	adiw	r28, 0x04	; 4
    4ccc:	8f ad       	ldd	r24, Y+63	; 0x3f
    4cce:	24 97       	sbiw	r28, 0x04	; 4
    4cd0:	26 96       	adiw	r28, 0x06	; 6
    4cd2:	9f ad       	ldd	r25, Y+63	; 0x3f
    4cd4:	26 97       	sbiw	r28, 0x06	; 6
    4cd6:	89 2b       	or	r24, r25
    4cd8:	24 96       	adiw	r28, 0x04	; 4
    4cda:	8f af       	std	Y+63, r24	; 0x3f
    4cdc:	24 97       	sbiw	r28, 0x04	; 4
    4cde:	25 96       	adiw	r28, 0x05	; 5
    4ce0:	8f ad       	ldd	r24, Y+63	; 0x3f
    4ce2:	25 97       	sbiw	r28, 0x05	; 5
    4ce4:	8d ab       	std	Y+53, r24	; 0x35
    4ce6:	9e a1       	ldd	r25, Y+38	; 0x26
    4ce8:	8e a5       	ldd	r24, Y+46	; 0x2e
    4cea:	98 0f       	add	r25, r24
    4cec:	9e ab       	std	Y+54, r25	; 0x36
    4cee:	91 e0       	ldi	r25, 0x01	; 1
    4cf0:	27 96       	adiw	r28, 0x07	; 7
    4cf2:	9f af       	std	Y+63, r25	; 0x3f
    4cf4:	27 97       	sbiw	r28, 0x07	; 7
    4cf6:	8e a9       	ldd	r24, Y+54	; 0x36
    4cf8:	9e a1       	ldd	r25, Y+38	; 0x26
    4cfa:	89 17       	cp	r24, r25
    4cfc:	18 f0       	brcs	.+6      	; 0x4d04 <LCD_displayInteger+0x248>
    4cfe:	27 96       	adiw	r28, 0x07	; 7
    4d00:	1f ae       	std	Y+63, r1	; 0x3f
    4d02:	27 97       	sbiw	r28, 0x07	; 7
    4d04:	24 96       	adiw	r28, 0x04	; 4
    4d06:	8f ad       	ldd	r24, Y+63	; 0x3f
    4d08:	24 97       	sbiw	r28, 0x04	; 4
    4d0a:	9e a9       	ldd	r25, Y+54	; 0x36
    4d0c:	89 0f       	add	r24, r25
    4d0e:	28 96       	adiw	r28, 0x08	; 8
    4d10:	8f af       	std	Y+63, r24	; 0x3f
    4d12:	28 97       	sbiw	r28, 0x08	; 8
    4d14:	81 e0       	ldi	r24, 0x01	; 1
    4d16:	29 96       	adiw	r28, 0x09	; 9
    4d18:	8f af       	std	Y+63, r24	; 0x3f
    4d1a:	29 97       	sbiw	r28, 0x09	; 9
    4d1c:	28 96       	adiw	r28, 0x08	; 8
    4d1e:	9f ad       	ldd	r25, Y+63	; 0x3f
    4d20:	28 97       	sbiw	r28, 0x08	; 8
    4d22:	8e a9       	ldd	r24, Y+54	; 0x36
    4d24:	98 17       	cp	r25, r24
    4d26:	18 f0       	brcs	.+6      	; 0x4d2e <LCD_displayInteger+0x272>
    4d28:	29 96       	adiw	r28, 0x09	; 9
    4d2a:	1f ae       	std	Y+63, r1	; 0x3f
    4d2c:	29 97       	sbiw	r28, 0x09	; 9
    4d2e:	27 96       	adiw	r28, 0x07	; 7
    4d30:	9f ad       	ldd	r25, Y+63	; 0x3f
    4d32:	27 97       	sbiw	r28, 0x07	; 7
    4d34:	29 96       	adiw	r28, 0x09	; 9
    4d36:	8f ad       	ldd	r24, Y+63	; 0x3f
    4d38:	29 97       	sbiw	r28, 0x09	; 9
    4d3a:	98 2b       	or	r25, r24
    4d3c:	27 96       	adiw	r28, 0x07	; 7
    4d3e:	9f af       	std	Y+63, r25	; 0x3f
    4d40:	27 97       	sbiw	r28, 0x07	; 7
    4d42:	28 96       	adiw	r28, 0x08	; 8
    4d44:	9f ad       	ldd	r25, Y+63	; 0x3f
    4d46:	28 97       	sbiw	r28, 0x08	; 8
    4d48:	9e ab       	std	Y+54, r25	; 0x36
    4d4a:	8f a1       	ldd	r24, Y+39	; 0x27
    4d4c:	9f a5       	ldd	r25, Y+47	; 0x2f
    4d4e:	89 0f       	add	r24, r25
    4d50:	8f ab       	std	Y+55, r24	; 0x37
    4d52:	81 e0       	ldi	r24, 0x01	; 1
    4d54:	2a 96       	adiw	r28, 0x0a	; 10
    4d56:	8f af       	std	Y+63, r24	; 0x3f
    4d58:	2a 97       	sbiw	r28, 0x0a	; 10
    4d5a:	9f a9       	ldd	r25, Y+55	; 0x37
    4d5c:	8f a1       	ldd	r24, Y+39	; 0x27
    4d5e:	98 17       	cp	r25, r24
    4d60:	18 f0       	brcs	.+6      	; 0x4d68 <LCD_displayInteger+0x2ac>
    4d62:	2a 96       	adiw	r28, 0x0a	; 10
    4d64:	1f ae       	std	Y+63, r1	; 0x3f
    4d66:	2a 97       	sbiw	r28, 0x0a	; 10
    4d68:	27 96       	adiw	r28, 0x07	; 7
    4d6a:	9f ad       	ldd	r25, Y+63	; 0x3f
    4d6c:	27 97       	sbiw	r28, 0x07	; 7
    4d6e:	8f a9       	ldd	r24, Y+55	; 0x37
    4d70:	98 0f       	add	r25, r24
    4d72:	2b 96       	adiw	r28, 0x0b	; 11
    4d74:	9f af       	std	Y+63, r25	; 0x3f
    4d76:	2b 97       	sbiw	r28, 0x0b	; 11
    4d78:	91 e0       	ldi	r25, 0x01	; 1
    4d7a:	2c 96       	adiw	r28, 0x0c	; 12
    4d7c:	9f af       	std	Y+63, r25	; 0x3f
    4d7e:	2c 97       	sbiw	r28, 0x0c	; 12
    4d80:	2b 96       	adiw	r28, 0x0b	; 11
    4d82:	8f ad       	ldd	r24, Y+63	; 0x3f
    4d84:	2b 97       	sbiw	r28, 0x0b	; 11
    4d86:	9f a9       	ldd	r25, Y+55	; 0x37
    4d88:	89 17       	cp	r24, r25
    4d8a:	18 f0       	brcs	.+6      	; 0x4d92 <LCD_displayInteger+0x2d6>
    4d8c:	2c 96       	adiw	r28, 0x0c	; 12
    4d8e:	1f ae       	std	Y+63, r1	; 0x3f
    4d90:	2c 97       	sbiw	r28, 0x0c	; 12
    4d92:	2a 96       	adiw	r28, 0x0a	; 10
    4d94:	8f ad       	ldd	r24, Y+63	; 0x3f
    4d96:	2a 97       	sbiw	r28, 0x0a	; 10
    4d98:	2c 96       	adiw	r28, 0x0c	; 12
    4d9a:	9f ad       	ldd	r25, Y+63	; 0x3f
    4d9c:	2c 97       	sbiw	r28, 0x0c	; 12
    4d9e:	89 2b       	or	r24, r25
    4da0:	2a 96       	adiw	r28, 0x0a	; 10
    4da2:	8f af       	std	Y+63, r24	; 0x3f
    4da4:	2a 97       	sbiw	r28, 0x0a	; 10
    4da6:	2b 96       	adiw	r28, 0x0b	; 11
    4da8:	8f ad       	ldd	r24, Y+63	; 0x3f
    4daa:	2b 97       	sbiw	r28, 0x0b	; 11
    4dac:	8f ab       	std	Y+55, r24	; 0x37
    4dae:	98 a5       	ldd	r25, Y+40	; 0x28
    4db0:	88 a9       	ldd	r24, Y+48	; 0x30
    4db2:	98 0f       	add	r25, r24
    4db4:	98 af       	std	Y+56, r25	; 0x38
    4db6:	2a 96       	adiw	r28, 0x0a	; 10
    4db8:	8f ad       	ldd	r24, Y+63	; 0x3f
    4dba:	2a 97       	sbiw	r28, 0x0a	; 10
    4dbc:	98 ad       	ldd	r25, Y+56	; 0x38
    4dbe:	89 0f       	add	r24, r25
    4dc0:	88 af       	std	Y+56, r24	; 0x38
    4dc2:	89 a9       	ldd	r24, Y+49	; 0x31
    4dc4:	89 8f       	std	Y+25, r24	; 0x19
    4dc6:	9a a9       	ldd	r25, Y+50	; 0x32
    4dc8:	9a 8f       	std	Y+26, r25	; 0x1a
    4dca:	8b a9       	ldd	r24, Y+51	; 0x33
    4dcc:	8b 8f       	std	Y+27, r24	; 0x1b
    4dce:	9c a9       	ldd	r25, Y+52	; 0x34
    4dd0:	9c 8f       	std	Y+28, r25	; 0x1c
    4dd2:	8d a9       	ldd	r24, Y+53	; 0x35
    4dd4:	8d 8f       	std	Y+29, r24	; 0x1d
    4dd6:	9e a9       	ldd	r25, Y+54	; 0x36
    4dd8:	9e 8f       	std	Y+30, r25	; 0x1e
    4dda:	8f a9       	ldd	r24, Y+55	; 0x37
    4ddc:	8f 8f       	std	Y+31, r24	; 0x1f
    4dde:	98 ad       	ldd	r25, Y+56	; 0x38
    4de0:	98 a3       	std	Y+32, r25	; 0x20
    4de2:	a9 84       	ldd	r10, Y+9	; 0x09
    4de4:	ba 84       	ldd	r11, Y+10	; 0x0a
    4de6:	cb 84       	ldd	r12, Y+11	; 0x0b
    4de8:	dc 84       	ldd	r13, Y+12	; 0x0c
    4dea:	ed 84       	ldd	r14, Y+13	; 0x0d
    4dec:	fe 84       	ldd	r15, Y+14	; 0x0e
    4dee:	0f 85       	ldd	r16, Y+15	; 0x0f
    4df0:	18 89       	ldd	r17, Y+16	; 0x10
    4df2:	2a 2d       	mov	r18, r10
    4df4:	3b 2d       	mov	r19, r11
    4df6:	4c 2d       	mov	r20, r12
    4df8:	5d 2d       	mov	r21, r13
    4dfa:	6e 2d       	mov	r22, r14
    4dfc:	7f 2d       	mov	r23, r15
    4dfe:	80 2f       	mov	r24, r16
    4e00:	91 2f       	mov	r25, r17
    4e02:	0f 2e       	mov	r0, r31
    4e04:	fa e0       	ldi	r31, 0x0A	; 10
    4e06:	af 2e       	mov	r10, r31
    4e08:	f0 2d       	mov	r31, r0
    4e0a:	bb 24       	eor	r11, r11
    4e0c:	cc 24       	eor	r12, r12
    4e0e:	dd 24       	eor	r13, r13
    4e10:	ee 24       	eor	r14, r14
    4e12:	ff 24       	eor	r15, r15
    4e14:	00 e0       	ldi	r16, 0x00	; 0
    4e16:	10 e0       	ldi	r17, 0x00	; 0
    4e18:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <__umoddi3>
    4e1c:	a2 2e       	mov	r10, r18
    4e1e:	b3 2e       	mov	r11, r19
    4e20:	c4 2e       	mov	r12, r20
    4e22:	d5 2e       	mov	r13, r21
    4e24:	e6 2e       	mov	r14, r22
    4e26:	f7 2e       	mov	r15, r23
    4e28:	08 2f       	mov	r16, r24
    4e2a:	19 2f       	mov	r17, r25
    4e2c:	a9 8a       	std	Y+17, r10	; 0x11
    4e2e:	ba 8a       	std	Y+18, r11	; 0x12
    4e30:	cb 8a       	std	Y+19, r12	; 0x13
    4e32:	dc 8a       	std	Y+20, r13	; 0x14
    4e34:	ed 8a       	std	Y+21, r14	; 0x15
    4e36:	fe 8a       	std	Y+22, r15	; 0x16
    4e38:	0f 8b       	std	Y+23, r16	; 0x17
    4e3a:	18 8f       	std	Y+24, r17	; 0x18
    4e3c:	89 8d       	ldd	r24, Y+25	; 0x19
    4e3e:	99 89       	ldd	r25, Y+17	; 0x11
    4e40:	89 0f       	add	r24, r25
    4e42:	2d 96       	adiw	r28, 0x0d	; 13
    4e44:	8f af       	std	Y+63, r24	; 0x3f
    4e46:	2d 97       	sbiw	r28, 0x0d	; 13
    4e48:	81 e0       	ldi	r24, 0x01	; 1
    4e4a:	65 96       	adiw	r28, 0x15	; 21
    4e4c:	8f af       	std	Y+63, r24	; 0x3f
    4e4e:	65 97       	sbiw	r28, 0x15	; 21
    4e50:	2d 96       	adiw	r28, 0x0d	; 13
    4e52:	9f ad       	ldd	r25, Y+63	; 0x3f
    4e54:	2d 97       	sbiw	r28, 0x0d	; 13
    4e56:	89 8d       	ldd	r24, Y+25	; 0x19
    4e58:	98 17       	cp	r25, r24
    4e5a:	18 f0       	brcs	.+6      	; 0x4e62 <LCD_displayInteger+0x3a6>
    4e5c:	65 96       	adiw	r28, 0x15	; 21
    4e5e:	1f ae       	std	Y+63, r1	; 0x3f
    4e60:	65 97       	sbiw	r28, 0x15	; 21
    4e62:	9a 8d       	ldd	r25, Y+26	; 0x1a
    4e64:	8a 89       	ldd	r24, Y+18	; 0x12
    4e66:	98 0f       	add	r25, r24
    4e68:	2e 96       	adiw	r28, 0x0e	; 14
    4e6a:	9f af       	std	Y+63, r25	; 0x3f
    4e6c:	2e 97       	sbiw	r28, 0x0e	; 14
    4e6e:	91 e0       	ldi	r25, 0x01	; 1
    4e70:	66 96       	adiw	r28, 0x16	; 22
    4e72:	9f af       	std	Y+63, r25	; 0x3f
    4e74:	66 97       	sbiw	r28, 0x16	; 22
    4e76:	2e 96       	adiw	r28, 0x0e	; 14
    4e78:	8f ad       	ldd	r24, Y+63	; 0x3f
    4e7a:	2e 97       	sbiw	r28, 0x0e	; 14
    4e7c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    4e7e:	89 17       	cp	r24, r25
    4e80:	18 f0       	brcs	.+6      	; 0x4e88 <LCD_displayInteger+0x3cc>
    4e82:	66 96       	adiw	r28, 0x16	; 22
    4e84:	1f ae       	std	Y+63, r1	; 0x3f
    4e86:	66 97       	sbiw	r28, 0x16	; 22
    4e88:	65 96       	adiw	r28, 0x15	; 21
    4e8a:	8f ad       	ldd	r24, Y+63	; 0x3f
    4e8c:	65 97       	sbiw	r28, 0x15	; 21
    4e8e:	2e 96       	adiw	r28, 0x0e	; 14
    4e90:	9f ad       	ldd	r25, Y+63	; 0x3f
    4e92:	2e 97       	sbiw	r28, 0x0e	; 14
    4e94:	89 0f       	add	r24, r25
    4e96:	67 96       	adiw	r28, 0x17	; 23
    4e98:	8f af       	std	Y+63, r24	; 0x3f
    4e9a:	67 97       	sbiw	r28, 0x17	; 23
    4e9c:	81 e0       	ldi	r24, 0x01	; 1
    4e9e:	68 96       	adiw	r28, 0x18	; 24
    4ea0:	8f af       	std	Y+63, r24	; 0x3f
    4ea2:	68 97       	sbiw	r28, 0x18	; 24
    4ea4:	67 96       	adiw	r28, 0x17	; 23
    4ea6:	9f ad       	ldd	r25, Y+63	; 0x3f
    4ea8:	67 97       	sbiw	r28, 0x17	; 23
    4eaa:	2e 96       	adiw	r28, 0x0e	; 14
    4eac:	8f ad       	ldd	r24, Y+63	; 0x3f
    4eae:	2e 97       	sbiw	r28, 0x0e	; 14
    4eb0:	98 17       	cp	r25, r24
    4eb2:	18 f0       	brcs	.+6      	; 0x4eba <LCD_displayInteger+0x3fe>
    4eb4:	68 96       	adiw	r28, 0x18	; 24
    4eb6:	1f ae       	std	Y+63, r1	; 0x3f
    4eb8:	68 97       	sbiw	r28, 0x18	; 24
    4eba:	66 96       	adiw	r28, 0x16	; 22
    4ebc:	9f ad       	ldd	r25, Y+63	; 0x3f
    4ebe:	66 97       	sbiw	r28, 0x16	; 22
    4ec0:	68 96       	adiw	r28, 0x18	; 24
    4ec2:	8f ad       	ldd	r24, Y+63	; 0x3f
    4ec4:	68 97       	sbiw	r28, 0x18	; 24
    4ec6:	98 2b       	or	r25, r24
    4ec8:	66 96       	adiw	r28, 0x16	; 22
    4eca:	9f af       	std	Y+63, r25	; 0x3f
    4ecc:	66 97       	sbiw	r28, 0x16	; 22
    4ece:	67 96       	adiw	r28, 0x17	; 23
    4ed0:	9f ad       	ldd	r25, Y+63	; 0x3f
    4ed2:	67 97       	sbiw	r28, 0x17	; 23
    4ed4:	2e 96       	adiw	r28, 0x0e	; 14
    4ed6:	9f af       	std	Y+63, r25	; 0x3f
    4ed8:	2e 97       	sbiw	r28, 0x0e	; 14
    4eda:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4edc:	9b 89       	ldd	r25, Y+19	; 0x13
    4ede:	89 0f       	add	r24, r25
    4ee0:	2f 96       	adiw	r28, 0x0f	; 15
    4ee2:	8f af       	std	Y+63, r24	; 0x3f
    4ee4:	2f 97       	sbiw	r28, 0x0f	; 15
    4ee6:	81 e0       	ldi	r24, 0x01	; 1
    4ee8:	69 96       	adiw	r28, 0x19	; 25
    4eea:	8f af       	std	Y+63, r24	; 0x3f
    4eec:	69 97       	sbiw	r28, 0x19	; 25
    4eee:	2f 96       	adiw	r28, 0x0f	; 15
    4ef0:	9f ad       	ldd	r25, Y+63	; 0x3f
    4ef2:	2f 97       	sbiw	r28, 0x0f	; 15
    4ef4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4ef6:	98 17       	cp	r25, r24
    4ef8:	18 f0       	brcs	.+6      	; 0x4f00 <LCD_displayInteger+0x444>
    4efa:	69 96       	adiw	r28, 0x19	; 25
    4efc:	1f ae       	std	Y+63, r1	; 0x3f
    4efe:	69 97       	sbiw	r28, 0x19	; 25
    4f00:	66 96       	adiw	r28, 0x16	; 22
    4f02:	9f ad       	ldd	r25, Y+63	; 0x3f
    4f04:	66 97       	sbiw	r28, 0x16	; 22
    4f06:	2f 96       	adiw	r28, 0x0f	; 15
    4f08:	8f ad       	ldd	r24, Y+63	; 0x3f
    4f0a:	2f 97       	sbiw	r28, 0x0f	; 15
    4f0c:	98 0f       	add	r25, r24
    4f0e:	6a 96       	adiw	r28, 0x1a	; 26
    4f10:	9f af       	std	Y+63, r25	; 0x3f
    4f12:	6a 97       	sbiw	r28, 0x1a	; 26
    4f14:	91 e0       	ldi	r25, 0x01	; 1
    4f16:	6b 96       	adiw	r28, 0x1b	; 27
    4f18:	9f af       	std	Y+63, r25	; 0x3f
    4f1a:	6b 97       	sbiw	r28, 0x1b	; 27
    4f1c:	6a 96       	adiw	r28, 0x1a	; 26
    4f1e:	8f ad       	ldd	r24, Y+63	; 0x3f
    4f20:	6a 97       	sbiw	r28, 0x1a	; 26
    4f22:	2f 96       	adiw	r28, 0x0f	; 15
    4f24:	9f ad       	ldd	r25, Y+63	; 0x3f
    4f26:	2f 97       	sbiw	r28, 0x0f	; 15
    4f28:	89 17       	cp	r24, r25
    4f2a:	18 f0       	brcs	.+6      	; 0x4f32 <LCD_displayInteger+0x476>
    4f2c:	6b 96       	adiw	r28, 0x1b	; 27
    4f2e:	1f ae       	std	Y+63, r1	; 0x3f
    4f30:	6b 97       	sbiw	r28, 0x1b	; 27
    4f32:	69 96       	adiw	r28, 0x19	; 25
    4f34:	8f ad       	ldd	r24, Y+63	; 0x3f
    4f36:	69 97       	sbiw	r28, 0x19	; 25
    4f38:	6b 96       	adiw	r28, 0x1b	; 27
    4f3a:	9f ad       	ldd	r25, Y+63	; 0x3f
    4f3c:	6b 97       	sbiw	r28, 0x1b	; 27
    4f3e:	89 2b       	or	r24, r25
    4f40:	69 96       	adiw	r28, 0x19	; 25
    4f42:	8f af       	std	Y+63, r24	; 0x3f
    4f44:	69 97       	sbiw	r28, 0x19	; 25
    4f46:	6a 96       	adiw	r28, 0x1a	; 26
    4f48:	8f ad       	ldd	r24, Y+63	; 0x3f
    4f4a:	6a 97       	sbiw	r28, 0x1a	; 26
    4f4c:	2f 96       	adiw	r28, 0x0f	; 15
    4f4e:	8f af       	std	Y+63, r24	; 0x3f
    4f50:	2f 97       	sbiw	r28, 0x0f	; 15
    4f52:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4f54:	8c 89       	ldd	r24, Y+20	; 0x14
    4f56:	98 0f       	add	r25, r24
    4f58:	60 96       	adiw	r28, 0x10	; 16
    4f5a:	9f af       	std	Y+63, r25	; 0x3f
    4f5c:	60 97       	sbiw	r28, 0x10	; 16
    4f5e:	91 e0       	ldi	r25, 0x01	; 1
    4f60:	6c 96       	adiw	r28, 0x1c	; 28
    4f62:	9f af       	std	Y+63, r25	; 0x3f
    4f64:	6c 97       	sbiw	r28, 0x1c	; 28
    4f66:	60 96       	adiw	r28, 0x10	; 16
    4f68:	8f ad       	ldd	r24, Y+63	; 0x3f
    4f6a:	60 97       	sbiw	r28, 0x10	; 16
    4f6c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4f6e:	89 17       	cp	r24, r25
    4f70:	18 f0       	brcs	.+6      	; 0x4f78 <LCD_displayInteger+0x4bc>
    4f72:	6c 96       	adiw	r28, 0x1c	; 28
    4f74:	1f ae       	std	Y+63, r1	; 0x3f
    4f76:	6c 97       	sbiw	r28, 0x1c	; 28
    4f78:	69 96       	adiw	r28, 0x19	; 25
    4f7a:	8f ad       	ldd	r24, Y+63	; 0x3f
    4f7c:	69 97       	sbiw	r28, 0x19	; 25
    4f7e:	60 96       	adiw	r28, 0x10	; 16
    4f80:	9f ad       	ldd	r25, Y+63	; 0x3f
    4f82:	60 97       	sbiw	r28, 0x10	; 16
    4f84:	89 0f       	add	r24, r25
    4f86:	6d 96       	adiw	r28, 0x1d	; 29
    4f88:	8f af       	std	Y+63, r24	; 0x3f
    4f8a:	6d 97       	sbiw	r28, 0x1d	; 29
    4f8c:	81 e0       	ldi	r24, 0x01	; 1
    4f8e:	6e 96       	adiw	r28, 0x1e	; 30
    4f90:	8f af       	std	Y+63, r24	; 0x3f
    4f92:	6e 97       	sbiw	r28, 0x1e	; 30
    4f94:	6d 96       	adiw	r28, 0x1d	; 29
    4f96:	9f ad       	ldd	r25, Y+63	; 0x3f
    4f98:	6d 97       	sbiw	r28, 0x1d	; 29
    4f9a:	60 96       	adiw	r28, 0x10	; 16
    4f9c:	8f ad       	ldd	r24, Y+63	; 0x3f
    4f9e:	60 97       	sbiw	r28, 0x10	; 16
    4fa0:	98 17       	cp	r25, r24
    4fa2:	18 f0       	brcs	.+6      	; 0x4faa <LCD_displayInteger+0x4ee>
    4fa4:	6e 96       	adiw	r28, 0x1e	; 30
    4fa6:	1f ae       	std	Y+63, r1	; 0x3f
    4fa8:	6e 97       	sbiw	r28, 0x1e	; 30
    4faa:	6c 96       	adiw	r28, 0x1c	; 28
    4fac:	9f ad       	ldd	r25, Y+63	; 0x3f
    4fae:	6c 97       	sbiw	r28, 0x1c	; 28
    4fb0:	6e 96       	adiw	r28, 0x1e	; 30
    4fb2:	8f ad       	ldd	r24, Y+63	; 0x3f
    4fb4:	6e 97       	sbiw	r28, 0x1e	; 30
    4fb6:	98 2b       	or	r25, r24
    4fb8:	6c 96       	adiw	r28, 0x1c	; 28
    4fba:	9f af       	std	Y+63, r25	; 0x3f
    4fbc:	6c 97       	sbiw	r28, 0x1c	; 28
    4fbe:	6d 96       	adiw	r28, 0x1d	; 29
    4fc0:	9f ad       	ldd	r25, Y+63	; 0x3f
    4fc2:	6d 97       	sbiw	r28, 0x1d	; 29
    4fc4:	60 96       	adiw	r28, 0x10	; 16
    4fc6:	9f af       	std	Y+63, r25	; 0x3f
    4fc8:	60 97       	sbiw	r28, 0x10	; 16
    4fca:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4fcc:	9d 89       	ldd	r25, Y+21	; 0x15
    4fce:	89 0f       	add	r24, r25
    4fd0:	61 96       	adiw	r28, 0x11	; 17
    4fd2:	8f af       	std	Y+63, r24	; 0x3f
    4fd4:	61 97       	sbiw	r28, 0x11	; 17
    4fd6:	81 e0       	ldi	r24, 0x01	; 1
    4fd8:	6f 96       	adiw	r28, 0x1f	; 31
    4fda:	8f af       	std	Y+63, r24	; 0x3f
    4fdc:	6f 97       	sbiw	r28, 0x1f	; 31
    4fde:	61 96       	adiw	r28, 0x11	; 17
    4fe0:	9f ad       	ldd	r25, Y+63	; 0x3f
    4fe2:	61 97       	sbiw	r28, 0x11	; 17
    4fe4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4fe6:	98 17       	cp	r25, r24
    4fe8:	18 f0       	brcs	.+6      	; 0x4ff0 <LCD_displayInteger+0x534>
    4fea:	6f 96       	adiw	r28, 0x1f	; 31
    4fec:	1f ae       	std	Y+63, r1	; 0x3f
    4fee:	6f 97       	sbiw	r28, 0x1f	; 31
    4ff0:	6c 96       	adiw	r28, 0x1c	; 28
    4ff2:	9f ad       	ldd	r25, Y+63	; 0x3f
    4ff4:	6c 97       	sbiw	r28, 0x1c	; 28
    4ff6:	61 96       	adiw	r28, 0x11	; 17
    4ff8:	8f ad       	ldd	r24, Y+63	; 0x3f
    4ffa:	61 97       	sbiw	r28, 0x11	; 17
    4ffc:	98 0f       	add	r25, r24
    4ffe:	a0 96       	adiw	r28, 0x20	; 32
    5000:	9f af       	std	Y+63, r25	; 0x3f
    5002:	a0 97       	sbiw	r28, 0x20	; 32
    5004:	91 e0       	ldi	r25, 0x01	; 1
    5006:	a1 96       	adiw	r28, 0x21	; 33
    5008:	9f af       	std	Y+63, r25	; 0x3f
    500a:	a1 97       	sbiw	r28, 0x21	; 33
    500c:	a0 96       	adiw	r28, 0x20	; 32
    500e:	8f ad       	ldd	r24, Y+63	; 0x3f
    5010:	a0 97       	sbiw	r28, 0x20	; 32
    5012:	61 96       	adiw	r28, 0x11	; 17
    5014:	9f ad       	ldd	r25, Y+63	; 0x3f
    5016:	61 97       	sbiw	r28, 0x11	; 17
    5018:	89 17       	cp	r24, r25
    501a:	18 f0       	brcs	.+6      	; 0x5022 <LCD_displayInteger+0x566>
    501c:	a1 96       	adiw	r28, 0x21	; 33
    501e:	1f ae       	std	Y+63, r1	; 0x3f
    5020:	a1 97       	sbiw	r28, 0x21	; 33
    5022:	6f 96       	adiw	r28, 0x1f	; 31
    5024:	8f ad       	ldd	r24, Y+63	; 0x3f
    5026:	6f 97       	sbiw	r28, 0x1f	; 31
    5028:	a1 96       	adiw	r28, 0x21	; 33
    502a:	9f ad       	ldd	r25, Y+63	; 0x3f
    502c:	a1 97       	sbiw	r28, 0x21	; 33
    502e:	89 2b       	or	r24, r25
    5030:	6f 96       	adiw	r28, 0x1f	; 31
    5032:	8f af       	std	Y+63, r24	; 0x3f
    5034:	6f 97       	sbiw	r28, 0x1f	; 31
    5036:	a0 96       	adiw	r28, 0x20	; 32
    5038:	8f ad       	ldd	r24, Y+63	; 0x3f
    503a:	a0 97       	sbiw	r28, 0x20	; 32
    503c:	61 96       	adiw	r28, 0x11	; 17
    503e:	8f af       	std	Y+63, r24	; 0x3f
    5040:	61 97       	sbiw	r28, 0x11	; 17
    5042:	9e 8d       	ldd	r25, Y+30	; 0x1e
    5044:	8e 89       	ldd	r24, Y+22	; 0x16
    5046:	98 0f       	add	r25, r24
    5048:	62 96       	adiw	r28, 0x12	; 18
    504a:	9f af       	std	Y+63, r25	; 0x3f
    504c:	62 97       	sbiw	r28, 0x12	; 18
    504e:	91 e0       	ldi	r25, 0x01	; 1
    5050:	a2 96       	adiw	r28, 0x22	; 34
    5052:	9f af       	std	Y+63, r25	; 0x3f
    5054:	a2 97       	sbiw	r28, 0x22	; 34
    5056:	62 96       	adiw	r28, 0x12	; 18
    5058:	8f ad       	ldd	r24, Y+63	; 0x3f
    505a:	62 97       	sbiw	r28, 0x12	; 18
    505c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    505e:	89 17       	cp	r24, r25
    5060:	18 f0       	brcs	.+6      	; 0x5068 <LCD_displayInteger+0x5ac>
    5062:	a2 96       	adiw	r28, 0x22	; 34
    5064:	1f ae       	std	Y+63, r1	; 0x3f
    5066:	a2 97       	sbiw	r28, 0x22	; 34
    5068:	6f 96       	adiw	r28, 0x1f	; 31
    506a:	8f ad       	ldd	r24, Y+63	; 0x3f
    506c:	6f 97       	sbiw	r28, 0x1f	; 31
    506e:	62 96       	adiw	r28, 0x12	; 18
    5070:	9f ad       	ldd	r25, Y+63	; 0x3f
    5072:	62 97       	sbiw	r28, 0x12	; 18
    5074:	89 0f       	add	r24, r25
    5076:	a3 96       	adiw	r28, 0x23	; 35
    5078:	8f af       	std	Y+63, r24	; 0x3f
    507a:	a3 97       	sbiw	r28, 0x23	; 35
    507c:	81 e0       	ldi	r24, 0x01	; 1
    507e:	a4 96       	adiw	r28, 0x24	; 36
    5080:	8f af       	std	Y+63, r24	; 0x3f
    5082:	a4 97       	sbiw	r28, 0x24	; 36
    5084:	a3 96       	adiw	r28, 0x23	; 35
    5086:	9f ad       	ldd	r25, Y+63	; 0x3f
    5088:	a3 97       	sbiw	r28, 0x23	; 35
    508a:	62 96       	adiw	r28, 0x12	; 18
    508c:	8f ad       	ldd	r24, Y+63	; 0x3f
    508e:	62 97       	sbiw	r28, 0x12	; 18
    5090:	98 17       	cp	r25, r24
    5092:	18 f0       	brcs	.+6      	; 0x509a <LCD_displayInteger+0x5de>
    5094:	a4 96       	adiw	r28, 0x24	; 36
    5096:	1f ae       	std	Y+63, r1	; 0x3f
    5098:	a4 97       	sbiw	r28, 0x24	; 36
    509a:	a2 96       	adiw	r28, 0x22	; 34
    509c:	9f ad       	ldd	r25, Y+63	; 0x3f
    509e:	a2 97       	sbiw	r28, 0x22	; 34
    50a0:	a4 96       	adiw	r28, 0x24	; 36
    50a2:	8f ad       	ldd	r24, Y+63	; 0x3f
    50a4:	a4 97       	sbiw	r28, 0x24	; 36
    50a6:	98 2b       	or	r25, r24
    50a8:	a2 96       	adiw	r28, 0x22	; 34
    50aa:	9f af       	std	Y+63, r25	; 0x3f
    50ac:	a2 97       	sbiw	r28, 0x22	; 34
    50ae:	a3 96       	adiw	r28, 0x23	; 35
    50b0:	9f ad       	ldd	r25, Y+63	; 0x3f
    50b2:	a3 97       	sbiw	r28, 0x23	; 35
    50b4:	62 96       	adiw	r28, 0x12	; 18
    50b6:	9f af       	std	Y+63, r25	; 0x3f
    50b8:	62 97       	sbiw	r28, 0x12	; 18
    50ba:	8f 8d       	ldd	r24, Y+31	; 0x1f
    50bc:	9f 89       	ldd	r25, Y+23	; 0x17
    50be:	89 0f       	add	r24, r25
    50c0:	63 96       	adiw	r28, 0x13	; 19
    50c2:	8f af       	std	Y+63, r24	; 0x3f
    50c4:	63 97       	sbiw	r28, 0x13	; 19
    50c6:	81 e0       	ldi	r24, 0x01	; 1
    50c8:	a5 96       	adiw	r28, 0x25	; 37
    50ca:	8f af       	std	Y+63, r24	; 0x3f
    50cc:	a5 97       	sbiw	r28, 0x25	; 37
    50ce:	63 96       	adiw	r28, 0x13	; 19
    50d0:	9f ad       	ldd	r25, Y+63	; 0x3f
    50d2:	63 97       	sbiw	r28, 0x13	; 19
    50d4:	8f 8d       	ldd	r24, Y+31	; 0x1f
    50d6:	98 17       	cp	r25, r24
    50d8:	18 f0       	brcs	.+6      	; 0x50e0 <LCD_displayInteger+0x624>
    50da:	a5 96       	adiw	r28, 0x25	; 37
    50dc:	1f ae       	std	Y+63, r1	; 0x3f
    50de:	a5 97       	sbiw	r28, 0x25	; 37
    50e0:	a2 96       	adiw	r28, 0x22	; 34
    50e2:	9f ad       	ldd	r25, Y+63	; 0x3f
    50e4:	a2 97       	sbiw	r28, 0x22	; 34
    50e6:	63 96       	adiw	r28, 0x13	; 19
    50e8:	8f ad       	ldd	r24, Y+63	; 0x3f
    50ea:	63 97       	sbiw	r28, 0x13	; 19
    50ec:	98 0f       	add	r25, r24
    50ee:	a6 96       	adiw	r28, 0x26	; 38
    50f0:	9f af       	std	Y+63, r25	; 0x3f
    50f2:	a6 97       	sbiw	r28, 0x26	; 38
    50f4:	91 e0       	ldi	r25, 0x01	; 1
    50f6:	a7 96       	adiw	r28, 0x27	; 39
    50f8:	9f af       	std	Y+63, r25	; 0x3f
    50fa:	a7 97       	sbiw	r28, 0x27	; 39
    50fc:	a6 96       	adiw	r28, 0x26	; 38
    50fe:	8f ad       	ldd	r24, Y+63	; 0x3f
    5100:	a6 97       	sbiw	r28, 0x26	; 38
    5102:	63 96       	adiw	r28, 0x13	; 19
    5104:	9f ad       	ldd	r25, Y+63	; 0x3f
    5106:	63 97       	sbiw	r28, 0x13	; 19
    5108:	89 17       	cp	r24, r25
    510a:	18 f0       	brcs	.+6      	; 0x5112 <LCD_displayInteger+0x656>
    510c:	a7 96       	adiw	r28, 0x27	; 39
    510e:	1f ae       	std	Y+63, r1	; 0x3f
    5110:	a7 97       	sbiw	r28, 0x27	; 39
    5112:	a5 96       	adiw	r28, 0x25	; 37
    5114:	8f ad       	ldd	r24, Y+63	; 0x3f
    5116:	a5 97       	sbiw	r28, 0x25	; 37
    5118:	a7 96       	adiw	r28, 0x27	; 39
    511a:	9f ad       	ldd	r25, Y+63	; 0x3f
    511c:	a7 97       	sbiw	r28, 0x27	; 39
    511e:	89 2b       	or	r24, r25
    5120:	a5 96       	adiw	r28, 0x25	; 37
    5122:	8f af       	std	Y+63, r24	; 0x3f
    5124:	a5 97       	sbiw	r28, 0x25	; 37
    5126:	a6 96       	adiw	r28, 0x26	; 38
    5128:	8f ad       	ldd	r24, Y+63	; 0x3f
    512a:	a6 97       	sbiw	r28, 0x26	; 38
    512c:	63 96       	adiw	r28, 0x13	; 19
    512e:	8f af       	std	Y+63, r24	; 0x3f
    5130:	63 97       	sbiw	r28, 0x13	; 19
    5132:	98 a1       	ldd	r25, Y+32	; 0x20
    5134:	88 8d       	ldd	r24, Y+24	; 0x18
    5136:	98 0f       	add	r25, r24
    5138:	64 96       	adiw	r28, 0x14	; 20
    513a:	9f af       	std	Y+63, r25	; 0x3f
    513c:	64 97       	sbiw	r28, 0x14	; 20
    513e:	a5 96       	adiw	r28, 0x25	; 37
    5140:	8f ad       	ldd	r24, Y+63	; 0x3f
    5142:	a5 97       	sbiw	r28, 0x25	; 37
    5144:	64 96       	adiw	r28, 0x14	; 20
    5146:	9f ad       	ldd	r25, Y+63	; 0x3f
    5148:	64 97       	sbiw	r28, 0x14	; 20
    514a:	89 0f       	add	r24, r25
    514c:	64 96       	adiw	r28, 0x14	; 20
    514e:	8f af       	std	Y+63, r24	; 0x3f
    5150:	64 97       	sbiw	r28, 0x14	; 20
    5152:	2d 96       	adiw	r28, 0x0d	; 13
    5154:	8f ad       	ldd	r24, Y+63	; 0x3f
    5156:	2d 97       	sbiw	r28, 0x0d	; 13
    5158:	89 83       	std	Y+1, r24	; 0x01
    515a:	2e 96       	adiw	r28, 0x0e	; 14
    515c:	9f ad       	ldd	r25, Y+63	; 0x3f
    515e:	2e 97       	sbiw	r28, 0x0e	; 14
    5160:	9a 83       	std	Y+2, r25	; 0x02
    5162:	2f 96       	adiw	r28, 0x0f	; 15
    5164:	8f ad       	ldd	r24, Y+63	; 0x3f
    5166:	2f 97       	sbiw	r28, 0x0f	; 15
    5168:	8b 83       	std	Y+3, r24	; 0x03
    516a:	60 96       	adiw	r28, 0x10	; 16
    516c:	9f ad       	ldd	r25, Y+63	; 0x3f
    516e:	60 97       	sbiw	r28, 0x10	; 16
    5170:	9c 83       	std	Y+4, r25	; 0x04
    5172:	61 96       	adiw	r28, 0x11	; 17
    5174:	8f ad       	ldd	r24, Y+63	; 0x3f
    5176:	61 97       	sbiw	r28, 0x11	; 17
    5178:	8d 83       	std	Y+5, r24	; 0x05
    517a:	62 96       	adiw	r28, 0x12	; 18
    517c:	9f ad       	ldd	r25, Y+63	; 0x3f
    517e:	62 97       	sbiw	r28, 0x12	; 18
    5180:	9e 83       	std	Y+6, r25	; 0x06
    5182:	63 96       	adiw	r28, 0x13	; 19
    5184:	8f ad       	ldd	r24, Y+63	; 0x3f
    5186:	63 97       	sbiw	r28, 0x13	; 19
    5188:	8f 83       	std	Y+7, r24	; 0x07
    518a:	64 96       	adiw	r28, 0x14	; 20
    518c:	9f ad       	ldd	r25, Y+63	; 0x3f
    518e:	64 97       	sbiw	r28, 0x14	; 20
    5190:	98 87       	std	Y+8, r25	; 0x08
			a_integerNumber /= 10;
    5192:	a9 84       	ldd	r10, Y+9	; 0x09
    5194:	ba 84       	ldd	r11, Y+10	; 0x0a
    5196:	cb 84       	ldd	r12, Y+11	; 0x0b
    5198:	dc 84       	ldd	r13, Y+12	; 0x0c
    519a:	ed 84       	ldd	r14, Y+13	; 0x0d
    519c:	fe 84       	ldd	r15, Y+14	; 0x0e
    519e:	0f 85       	ldd	r16, Y+15	; 0x0f
    51a0:	18 89       	ldd	r17, Y+16	; 0x10
    51a2:	2a 2d       	mov	r18, r10
    51a4:	3b 2d       	mov	r19, r11
    51a6:	4c 2d       	mov	r20, r12
    51a8:	5d 2d       	mov	r21, r13
    51aa:	6e 2d       	mov	r22, r14
    51ac:	7f 2d       	mov	r23, r15
    51ae:	80 2f       	mov	r24, r16
    51b0:	91 2f       	mov	r25, r17
    51b2:	0f 2e       	mov	r0, r31
    51b4:	fa e0       	ldi	r31, 0x0A	; 10
    51b6:	af 2e       	mov	r10, r31
    51b8:	f0 2d       	mov	r31, r0
    51ba:	bb 24       	eor	r11, r11
    51bc:	cc 24       	eor	r12, r12
    51be:	dd 24       	eor	r13, r13
    51c0:	ee 24       	eor	r14, r14
    51c2:	ff 24       	eor	r15, r15
    51c4:	00 e0       	ldi	r16, 0x00	; 0
    51c6:	10 e0       	ldi	r17, 0x00	; 0
    51c8:	0e 94 6e 02 	call	0x4dc	; 0x4dc <__udivdi3>
    51cc:	a2 2e       	mov	r10, r18
    51ce:	b3 2e       	mov	r11, r19
    51d0:	c4 2e       	mov	r12, r20
    51d2:	d5 2e       	mov	r13, r21
    51d4:	e6 2e       	mov	r14, r22
    51d6:	f7 2e       	mov	r15, r23
    51d8:	08 2f       	mov	r16, r24
    51da:	19 2f       	mov	r17, r25
    51dc:	a9 86       	std	Y+9, r10	; 0x09
    51de:	ba 86       	std	Y+10, r11	; 0x0a
    51e0:	cb 86       	std	Y+11, r12	; 0x0b
    51e2:	dc 86       	std	Y+12, r13	; 0x0c
    51e4:	ed 86       	std	Y+13, r14	; 0x0d
    51e6:	fe 86       	std	Y+14, r15	; 0x0e
    51e8:	0f 87       	std	Y+15, r16	; 0x0f
    51ea:	18 8b       	std	Y+16, r17	; 0x10

	else
	{
		uint64 LOC_reversedNumber = 1;
		
		while(a_integerNumber != 0)
    51ec:	89 85       	ldd	r24, Y+9	; 0x09
    51ee:	9a 85       	ldd	r25, Y+10	; 0x0a
    51f0:	89 2b       	or	r24, r25
    51f2:	9b 85       	ldd	r25, Y+11	; 0x0b
    51f4:	89 2b       	or	r24, r25
    51f6:	9c 85       	ldd	r25, Y+12	; 0x0c
    51f8:	89 2b       	or	r24, r25
    51fa:	9d 85       	ldd	r25, Y+13	; 0x0d
    51fc:	89 2b       	or	r24, r25
    51fe:	9e 85       	ldd	r25, Y+14	; 0x0e
    5200:	89 2b       	or	r24, r25
    5202:	9f 85       	ldd	r25, Y+15	; 0x0f
    5204:	89 2b       	or	r24, r25
    5206:	98 89       	ldd	r25, Y+16	; 0x10
    5208:	89 2b       	or	r24, r25
    520a:	88 23       	and	r24, r24
    520c:	09 f0       	breq	.+2      	; 0x5210 <LCD_displayInteger+0x754>
    520e:	90 cc       	rjmp	.-1760   	; 0x4b30 <LCD_displayInteger+0x74>
    5210:	5e c0       	rjmp	.+188    	; 0x52ce <LCD_displayInteger+0x812>
			a_integerNumber /= 10;
		}

		while(LOC_reversedNumber != 1)
		{
			LCD_displayCharacter((LOC_reversedNumber % 10) + '0');
    5212:	a9 80       	ldd	r10, Y+1	; 0x01
    5214:	ba 80       	ldd	r11, Y+2	; 0x02
    5216:	cb 80       	ldd	r12, Y+3	; 0x03
    5218:	dc 80       	ldd	r13, Y+4	; 0x04
    521a:	ed 80       	ldd	r14, Y+5	; 0x05
    521c:	fe 80       	ldd	r15, Y+6	; 0x06
    521e:	0f 81       	ldd	r16, Y+7	; 0x07
    5220:	18 85       	ldd	r17, Y+8	; 0x08
    5222:	2a 2d       	mov	r18, r10
    5224:	3b 2d       	mov	r19, r11
    5226:	4c 2d       	mov	r20, r12
    5228:	5d 2d       	mov	r21, r13
    522a:	6e 2d       	mov	r22, r14
    522c:	7f 2d       	mov	r23, r15
    522e:	80 2f       	mov	r24, r16
    5230:	91 2f       	mov	r25, r17
    5232:	0f 2e       	mov	r0, r31
    5234:	fa e0       	ldi	r31, 0x0A	; 10
    5236:	af 2e       	mov	r10, r31
    5238:	f0 2d       	mov	r31, r0
    523a:	bb 24       	eor	r11, r11
    523c:	cc 24       	eor	r12, r12
    523e:	dd 24       	eor	r13, r13
    5240:	ee 24       	eor	r14, r14
    5242:	ff 24       	eor	r15, r15
    5244:	00 e0       	ldi	r16, 0x00	; 0
    5246:	10 e0       	ldi	r17, 0x00	; 0
    5248:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <__umoddi3>
    524c:	a2 2e       	mov	r10, r18
    524e:	b3 2e       	mov	r11, r19
    5250:	c4 2e       	mov	r12, r20
    5252:	d5 2e       	mov	r13, r21
    5254:	e6 2e       	mov	r14, r22
    5256:	f7 2e       	mov	r15, r23
    5258:	08 2f       	mov	r16, r24
    525a:	19 2f       	mov	r17, r25
    525c:	2a 2d       	mov	r18, r10
    525e:	3b 2d       	mov	r19, r11
    5260:	4c 2d       	mov	r20, r12
    5262:	5d 2d       	mov	r21, r13
    5264:	6e 2d       	mov	r22, r14
    5266:	7f 2d       	mov	r23, r15
    5268:	80 2f       	mov	r24, r16
    526a:	91 2f       	mov	r25, r17
    526c:	82 2f       	mov	r24, r18
    526e:	80 5d       	subi	r24, 0xD0	; 208
    5270:	0e 94 f5 24 	call	0x49ea	; 0x49ea <LCD_displayCharacter>
			LOC_reversedNumber /= 10;
    5274:	a9 80       	ldd	r10, Y+1	; 0x01
    5276:	ba 80       	ldd	r11, Y+2	; 0x02
    5278:	cb 80       	ldd	r12, Y+3	; 0x03
    527a:	dc 80       	ldd	r13, Y+4	; 0x04
    527c:	ed 80       	ldd	r14, Y+5	; 0x05
    527e:	fe 80       	ldd	r15, Y+6	; 0x06
    5280:	0f 81       	ldd	r16, Y+7	; 0x07
    5282:	18 85       	ldd	r17, Y+8	; 0x08
    5284:	2a 2d       	mov	r18, r10
    5286:	3b 2d       	mov	r19, r11
    5288:	4c 2d       	mov	r20, r12
    528a:	5d 2d       	mov	r21, r13
    528c:	6e 2d       	mov	r22, r14
    528e:	7f 2d       	mov	r23, r15
    5290:	80 2f       	mov	r24, r16
    5292:	91 2f       	mov	r25, r17
    5294:	0f 2e       	mov	r0, r31
    5296:	fa e0       	ldi	r31, 0x0A	; 10
    5298:	af 2e       	mov	r10, r31
    529a:	f0 2d       	mov	r31, r0
    529c:	bb 24       	eor	r11, r11
    529e:	cc 24       	eor	r12, r12
    52a0:	dd 24       	eor	r13, r13
    52a2:	ee 24       	eor	r14, r14
    52a4:	ff 24       	eor	r15, r15
    52a6:	00 e0       	ldi	r16, 0x00	; 0
    52a8:	10 e0       	ldi	r17, 0x00	; 0
    52aa:	0e 94 6e 02 	call	0x4dc	; 0x4dc <__udivdi3>
    52ae:	a2 2e       	mov	r10, r18
    52b0:	b3 2e       	mov	r11, r19
    52b2:	c4 2e       	mov	r12, r20
    52b4:	d5 2e       	mov	r13, r21
    52b6:	e6 2e       	mov	r14, r22
    52b8:	f7 2e       	mov	r15, r23
    52ba:	08 2f       	mov	r16, r24
    52bc:	19 2f       	mov	r17, r25
    52be:	a9 82       	std	Y+1, r10	; 0x01
    52c0:	ba 82       	std	Y+2, r11	; 0x02
    52c2:	cb 82       	std	Y+3, r12	; 0x03
    52c4:	dc 82       	std	Y+4, r13	; 0x04
    52c6:	ed 82       	std	Y+5, r14	; 0x05
    52c8:	fe 82       	std	Y+6, r15	; 0x06
    52ca:	0f 83       	std	Y+7, r16	; 0x07
    52cc:	18 87       	std	Y+8, r17	; 0x08
		{
			LOC_reversedNumber = (LOC_reversedNumber * 10) + (a_integerNumber % 10);
			a_integerNumber /= 10;
		}

		while(LOC_reversedNumber != 1)
    52ce:	89 81       	ldd	r24, Y+1	; 0x01
    52d0:	81 30       	cpi	r24, 0x01	; 1
    52d2:	09 f0       	breq	.+2      	; 0x52d6 <LCD_displayInteger+0x81a>
    52d4:	9e cf       	rjmp	.-196    	; 0x5212 <LCD_displayInteger+0x756>
    52d6:	8a 81       	ldd	r24, Y+2	; 0x02
    52d8:	88 23       	and	r24, r24
    52da:	09 f0       	breq	.+2      	; 0x52de <LCD_displayInteger+0x822>
    52dc:	9a cf       	rjmp	.-204    	; 0x5212 <LCD_displayInteger+0x756>
    52de:	8b 81       	ldd	r24, Y+3	; 0x03
    52e0:	88 23       	and	r24, r24
    52e2:	09 f0       	breq	.+2      	; 0x52e6 <LCD_displayInteger+0x82a>
    52e4:	96 cf       	rjmp	.-212    	; 0x5212 <LCD_displayInteger+0x756>
    52e6:	8c 81       	ldd	r24, Y+4	; 0x04
    52e8:	88 23       	and	r24, r24
    52ea:	09 f0       	breq	.+2      	; 0x52ee <LCD_displayInteger+0x832>
    52ec:	92 cf       	rjmp	.-220    	; 0x5212 <LCD_displayInteger+0x756>
    52ee:	8d 81       	ldd	r24, Y+5	; 0x05
    52f0:	88 23       	and	r24, r24
    52f2:	09 f0       	breq	.+2      	; 0x52f6 <LCD_displayInteger+0x83a>
    52f4:	8e cf       	rjmp	.-228    	; 0x5212 <LCD_displayInteger+0x756>
    52f6:	8e 81       	ldd	r24, Y+6	; 0x06
    52f8:	88 23       	and	r24, r24
    52fa:	09 f0       	breq	.+2      	; 0x52fe <LCD_displayInteger+0x842>
    52fc:	8a cf       	rjmp	.-236    	; 0x5212 <LCD_displayInteger+0x756>
    52fe:	8f 81       	ldd	r24, Y+7	; 0x07
    5300:	88 23       	and	r24, r24
    5302:	09 f0       	breq	.+2      	; 0x5306 <LCD_displayInteger+0x84a>
    5304:	86 cf       	rjmp	.-244    	; 0x5212 <LCD_displayInteger+0x756>
    5306:	88 85       	ldd	r24, Y+8	; 0x08
    5308:	88 23       	and	r24, r24
    530a:	09 f0       	breq	.+2      	; 0x530e <LCD_displayInteger+0x852>
    530c:	82 cf       	rjmp	.-252    	; 0x5212 <LCD_displayInteger+0x756>
		{
			LCD_displayCharacter((LOC_reversedNumber % 10) + '0');
			LOC_reversedNumber /= 10;
		}
	}
}
    530e:	ca 59       	subi	r28, 0x9A	; 154
    5310:	df 4f       	sbci	r29, 0xFF	; 255
    5312:	0f b6       	in	r0, 0x3f	; 63
    5314:	f8 94       	cli
    5316:	de bf       	out	0x3e, r29	; 62
    5318:	0f be       	out	0x3f, r0	; 63
    531a:	cd bf       	out	0x3d, r28	; 61
    531c:	cf 91       	pop	r28
    531e:	df 91       	pop	r29
    5320:	1f 91       	pop	r17
    5322:	0f 91       	pop	r16
    5324:	ff 90       	pop	r15
    5326:	ef 90       	pop	r14
    5328:	df 90       	pop	r13
    532a:	cf 90       	pop	r12
    532c:	bf 90       	pop	r11
    532e:	af 90       	pop	r10
    5330:	08 95       	ret

00005332 <LCD_displayHEX>:
 * [Description]   : Convert a specific decimal byte to HEX and display this HEX on the LCD.
 * [Arguments]     : <a_decimalNumber>      -> Indicates to the decimal byte.
 * [return]        : The function returns void.
 ====================================================================================================================*/
void LCD_displayHEX(uint8 a_decimalNumber)
{
    5332:	df 93       	push	r29
    5334:	cf 93       	push	r28
    5336:	00 d0       	rcall	.+0      	; 0x5338 <LCD_displayHEX+0x6>
    5338:	cd b7       	in	r28, 0x3d	; 61
    533a:	de b7       	in	r29, 0x3e	; 62
    533c:	8a 83       	std	Y+2, r24	; 0x02
	uint8 LOC_byteNIB = GET_H_NIB(a_decimalNumber);
    533e:	8a 81       	ldd	r24, Y+2	; 0x02
    5340:	82 95       	swap	r24
    5342:	8f 70       	andi	r24, 0x0F	; 15
    5344:	89 83       	std	Y+1, r24	; 0x01

	if(LOC_byteNIB > 9)
    5346:	89 81       	ldd	r24, Y+1	; 0x01
    5348:	8a 30       	cpi	r24, 0x0A	; 10
    534a:	50 f0       	brcs	.+20     	; 0x5360 <LCD_displayHEX+0x2e>
	{
		LCD_displayCharacter('A' + (LOC_byteNIB % 10));
    534c:	89 81       	ldd	r24, Y+1	; 0x01
    534e:	9a e0       	ldi	r25, 0x0A	; 10
    5350:	69 2f       	mov	r22, r25
    5352:	0e 94 b7 2b 	call	0x576e	; 0x576e <__udivmodqi4>
    5356:	89 2f       	mov	r24, r25
    5358:	8f 5b       	subi	r24, 0xBF	; 191
    535a:	0e 94 f5 24 	call	0x49ea	; 0x49ea <LCD_displayCharacter>
    535e:	04 c0       	rjmp	.+8      	; 0x5368 <LCD_displayHEX+0x36>
	}

	else
	{
		LCD_displayCharacter('0' + LOC_byteNIB);
    5360:	89 81       	ldd	r24, Y+1	; 0x01
    5362:	80 5d       	subi	r24, 0xD0	; 208
    5364:	0e 94 f5 24 	call	0x49ea	; 0x49ea <LCD_displayCharacter>
	}

	LOC_byteNIB = GET_L_NIB(a_decimalNumber);
    5368:	8a 81       	ldd	r24, Y+2	; 0x02
    536a:	8f 70       	andi	r24, 0x0F	; 15
    536c:	89 83       	std	Y+1, r24	; 0x01

	if(LOC_byteNIB > 9)
    536e:	89 81       	ldd	r24, Y+1	; 0x01
    5370:	8a 30       	cpi	r24, 0x0A	; 10
    5372:	50 f0       	brcs	.+20     	; 0x5388 <LCD_displayHEX+0x56>
	{
		LCD_displayCharacter('A' + (LOC_byteNIB % 10));
    5374:	89 81       	ldd	r24, Y+1	; 0x01
    5376:	9a e0       	ldi	r25, 0x0A	; 10
    5378:	69 2f       	mov	r22, r25
    537a:	0e 94 b7 2b 	call	0x576e	; 0x576e <__udivmodqi4>
    537e:	89 2f       	mov	r24, r25
    5380:	8f 5b       	subi	r24, 0xBF	; 191
    5382:	0e 94 f5 24 	call	0x49ea	; 0x49ea <LCD_displayCharacter>
    5386:	04 c0       	rjmp	.+8      	; 0x5390 <LCD_displayHEX+0x5e>
	}

	else
	{
		LCD_displayCharacter('0' + LOC_byteNIB);
    5388:	89 81       	ldd	r24, Y+1	; 0x01
    538a:	80 5d       	subi	r24, 0xD0	; 208
    538c:	0e 94 f5 24 	call	0x49ea	; 0x49ea <LCD_displayCharacter>
	}
}
    5390:	0f 90       	pop	r0
    5392:	0f 90       	pop	r0
    5394:	cf 91       	pop	r28
    5396:	df 91       	pop	r29
    5398:	08 95       	ret

0000539a <LCD_createCustomCharacter>:
 * [Arguments]     : <a_ptr2map>      -> Pointer to the array that holds the character map.
 *                   <a_index>        -> Indicates to the index number in the CGRAM to store the character in.
 * [return]        : The function returns void.
 ====================================================================================================================*/
void LCD_createCustomCharacter(uint8* a_ptr2map, uint8 a_index)
{
    539a:	df 93       	push	r29
    539c:	cf 93       	push	r28
    539e:	00 d0       	rcall	.+0      	; 0x53a0 <LCD_createCustomCharacter+0x6>
    53a0:	00 d0       	rcall	.+0      	; 0x53a2 <LCD_createCustomCharacter+0x8>
    53a2:	0f 92       	push	r0
    53a4:	cd b7       	in	r28, 0x3d	; 61
    53a6:	de b7       	in	r29, 0x3e	; 62
    53a8:	9c 83       	std	Y+4, r25	; 0x04
    53aa:	8b 83       	std	Y+3, r24	; 0x03
    53ac:	6d 83       	std	Y+5, r22	; 0x05
	uint8 LOC_addressCGRAM = (LCD_CGRAM_BASE_ADDRESS + (a_index * LCD_SPECIAL_PATTERN_NUM_OF_ROWS));
    53ae:	8d 81       	ldd	r24, Y+5	; 0x05
    53b0:	88 2f       	mov	r24, r24
    53b2:	90 e0       	ldi	r25, 0x00	; 0
    53b4:	08 96       	adiw	r24, 0x08	; 8
    53b6:	88 0f       	add	r24, r24
    53b8:	99 1f       	adc	r25, r25
    53ba:	88 0f       	add	r24, r24
    53bc:	99 1f       	adc	r25, r25
    53be:	88 0f       	add	r24, r24
    53c0:	99 1f       	adc	r25, r25
    53c2:	8a 83       	std	Y+2, r24	; 0x02

	LCD_sendCommand(LOC_addressCGRAM);
    53c4:	8a 81       	ldd	r24, Y+2	; 0x02
    53c6:	0e 94 d2 20 	call	0x41a4	; 0x41a4 <LCD_sendCommand>

	for(uint8 iterator = 0; iterator < LCD_SPECIAL_PATTERN_NUM_OF_ROWS; iterator++)
    53ca:	19 82       	std	Y+1, r1	; 0x01
    53cc:	0e c0       	rjmp	.+28     	; 0x53ea <LCD_createCustomCharacter+0x50>
	{
		LCD_sendData(*(a_ptr2map + iterator));
    53ce:	89 81       	ldd	r24, Y+1	; 0x01
    53d0:	28 2f       	mov	r18, r24
    53d2:	30 e0       	ldi	r19, 0x00	; 0
    53d4:	8b 81       	ldd	r24, Y+3	; 0x03
    53d6:	9c 81       	ldd	r25, Y+4	; 0x04
    53d8:	fc 01       	movw	r30, r24
    53da:	e2 0f       	add	r30, r18
    53dc:	f3 1f       	adc	r31, r19
    53de:	80 81       	ld	r24, Z
    53e0:	0e 94 c1 22 	call	0x4582	; 0x4582 <LCD_sendData>
{
	uint8 LOC_addressCGRAM = (LCD_CGRAM_BASE_ADDRESS + (a_index * LCD_SPECIAL_PATTERN_NUM_OF_ROWS));

	LCD_sendCommand(LOC_addressCGRAM);

	for(uint8 iterator = 0; iterator < LCD_SPECIAL_PATTERN_NUM_OF_ROWS; iterator++)
    53e4:	89 81       	ldd	r24, Y+1	; 0x01
    53e6:	8f 5f       	subi	r24, 0xFF	; 255
    53e8:	89 83       	std	Y+1, r24	; 0x01
    53ea:	89 81       	ldd	r24, Y+1	; 0x01
    53ec:	88 30       	cpi	r24, 0x08	; 8
    53ee:	78 f3       	brcs	.-34     	; 0x53ce <LCD_createCustomCharacter+0x34>
	{
		LCD_sendData(*(a_ptr2map + iterator));
	}

	LCD_sendCommand(LCD_DDRAM_BASE_ADDRESS);
    53f0:	80 e8       	ldi	r24, 0x80	; 128
    53f2:	0e 94 d2 20 	call	0x41a4	; 0x41a4 <LCD_sendCommand>
}
    53f6:	0f 90       	pop	r0
    53f8:	0f 90       	pop	r0
    53fa:	0f 90       	pop	r0
    53fc:	0f 90       	pop	r0
    53fe:	0f 90       	pop	r0
    5400:	cf 91       	pop	r28
    5402:	df 91       	pop	r29
    5404:	08 95       	ret

00005406 <LCD_clearScreen>:
 * [Description]   : Clear the LCD screen.
 * [Arguments]     : The function takes no arguments.
 * [return]        : The function returns void.
 ====================================================================================================================*/
void LCD_clearScreen(void)
{
    5406:	df 93       	push	r29
    5408:	cf 93       	push	r28
    540a:	cd b7       	in	r28, 0x3d	; 61
    540c:	de b7       	in	r29, 0x3e	; 62
	LCD_sendCommand(LCD_CLEAR_SCREEN_COMMAND);
    540e:	81 e0       	ldi	r24, 0x01	; 1
    5410:	0e 94 d2 20 	call	0x41a4	; 0x41a4 <LCD_sendCommand>
}
    5414:	cf 91       	pop	r28
    5416:	df 91       	pop	r29
    5418:	08 95       	ret

0000541a <LCD_returnHome>:
 * [Description]   : Return to the first column in the first row on the LCD screen.
 * [Arguments]     : The function takes no arguments.
 * [return]        : The function returns void.
 ====================================================================================================================*/
void LCD_returnHome(void)
{
    541a:	df 93       	push	r29
    541c:	cf 93       	push	r28
    541e:	cd b7       	in	r28, 0x3d	; 61
    5420:	de b7       	in	r29, 0x3e	; 62
	LCD_sendCommand(LCD_RETURN_HOME_COMMAND);
    5422:	82 e0       	ldi	r24, 0x02	; 2
    5424:	0e 94 d2 20 	call	0x41a4	; 0x41a4 <LCD_sendCommand>
}
    5428:	cf 91       	pop	r28
    542a:	df 91       	pop	r29
    542c:	08 95       	ret

0000542e <KEYPAD_getPressedKey>:
 * [Description]   : Scan the keypad matrix and return the pressed key value.
 * [Arguments]     : <a_ptr2keyValue>      -> Pointer to variable to store the pressed key value.
 * [return]        : The function returns void.
 ====================================================================================================================*/
void KEYPAD_getPressedKey(uint8* a_ptr2keyValue)
{
    542e:	df 93       	push	r29
    5430:	cf 93       	push	r28
    5432:	00 d0       	rcall	.+0      	; 0x5434 <KEYPAD_getPressedKey+0x6>
    5434:	00 d0       	rcall	.+0      	; 0x5436 <KEYPAD_getPressedKey+0x8>
    5436:	0f 92       	push	r0
    5438:	cd b7       	in	r28, 0x3d	; 61
    543a:	de b7       	in	r29, 0x3e	; 62
    543c:	9d 83       	std	Y+5, r25	; 0x05
    543e:	8c 83       	std	Y+4, r24	; 0x04
    *a_ptr2keyValue = '\0';
    5440:	ec 81       	ldd	r30, Y+4	; 0x04
    5442:	fd 81       	ldd	r31, Y+5	; 0x05
    5444:	10 82       	st	Z, r1
    KEYPAD_buttonStatus LOC_ButtonState = KEYPAD_NOT_PRESSED;
    5446:	81 e0       	ldi	r24, 0x01	; 1
    5448:	8b 83       	std	Y+3, r24	; 0x03

    for(uint8 rows_iterator = 0; rows_iterator < KEYPAD_NUM_OF_ROWS; rows_iterator++)
    544a:	1a 82       	std	Y+2, r1	; 0x02
    544c:	4b c0       	rjmp	.+150    	; 0x54e4 <KEYPAD_getPressedKey+0xb6>
    {
    	KEYPAD_writeRowsPattern(rows_iterator);
    544e:	8a 81       	ldd	r24, Y+2	; 0x02
    5450:	0e 94 7e 2a 	call	0x54fc	; 0x54fc <KEYPAD_writeRowsPattern>

    	for(uint8 columns_iterator = 0; columns_iterator < KEYPAD_NUM_OF_COLUMNS; columns_iterator++)
    5454:	19 82       	std	Y+1, r1	; 0x01
    5456:	3f c0       	rjmp	.+126    	; 0x54d6 <KEYPAD_getPressedKey+0xa8>
    	{
    		DIO_readPin(KEYPAD_COLS_PORT_ID,*(LOC_columnsPinsID + columns_iterator),(DIO_pinStatus*)&LOC_ButtonState);
    5458:	89 81       	ldd	r24, Y+1	; 0x01
    545a:	88 2f       	mov	r24, r24
    545c:	90 e0       	ldi	r25, 0x00	; 0
    545e:	fc 01       	movw	r30, r24
    5460:	e5 57       	subi	r30, 0x75	; 117
    5462:	fe 4f       	sbci	r31, 0xFE	; 254
    5464:	90 81       	ld	r25, Z
    5466:	9e 01       	movw	r18, r28
    5468:	2d 5f       	subi	r18, 0xFD	; 253
    546a:	3f 4f       	sbci	r19, 0xFF	; 255
    546c:	80 e0       	ldi	r24, 0x00	; 0
    546e:	69 2f       	mov	r22, r25
    5470:	a9 01       	movw	r20, r18
    5472:	0e 94 1c 1f 	call	0x3e38	; 0x3e38 <DIO_readPin>

    		if(LOC_ButtonState == KEYPAD_PRESSED)
    5476:	8b 81       	ldd	r24, Y+3	; 0x03
    5478:	88 23       	and	r24, r24
    547a:	51 f5       	brne	.+84     	; 0x54d0 <KEYPAD_getPressedKey+0xa2>
    547c:	0f c0       	rjmp	.+30     	; 0x549c <KEYPAD_getPressedKey+0x6e>
    		{
    			while(LOC_ButtonState == KEYPAD_PRESSED)
    			{
    				DIO_readPin(KEYPAD_COLS_PORT_ID,*(LOC_columnsPinsID + columns_iterator),(DIO_pinStatus*)&LOC_ButtonState);
    547e:	89 81       	ldd	r24, Y+1	; 0x01
    5480:	88 2f       	mov	r24, r24
    5482:	90 e0       	ldi	r25, 0x00	; 0
    5484:	fc 01       	movw	r30, r24
    5486:	e5 57       	subi	r30, 0x75	; 117
    5488:	fe 4f       	sbci	r31, 0xFE	; 254
    548a:	90 81       	ld	r25, Z
    548c:	9e 01       	movw	r18, r28
    548e:	2d 5f       	subi	r18, 0xFD	; 253
    5490:	3f 4f       	sbci	r19, 0xFF	; 255
    5492:	80 e0       	ldi	r24, 0x00	; 0
    5494:	69 2f       	mov	r22, r25
    5496:	a9 01       	movw	r20, r18
    5498:	0e 94 1c 1f 	call	0x3e38	; 0x3e38 <DIO_readPin>
    	{
    		DIO_readPin(KEYPAD_COLS_PORT_ID,*(LOC_columnsPinsID + columns_iterator),(DIO_pinStatus*)&LOC_ButtonState);

    		if(LOC_ButtonState == KEYPAD_PRESSED)
    		{
    			while(LOC_ButtonState == KEYPAD_PRESSED)
    549c:	8b 81       	ldd	r24, Y+3	; 0x03
    549e:	88 23       	and	r24, r24
    54a0:	71 f3       	breq	.-36     	; 0x547e <KEYPAD_getPressedKey+0x50>
    			{
    				DIO_readPin(KEYPAD_COLS_PORT_ID,*(LOC_columnsPinsID + columns_iterator),(DIO_pinStatus*)&LOC_ButtonState);
    			}

    			*a_ptr2keyValue = *(*(g_keypad_sympols + rows_iterator) + columns_iterator);
    54a2:	4f e8       	ldi	r20, 0x8F	; 143
    54a4:	51 e0       	ldi	r21, 0x01	; 1
    54a6:	8a 81       	ldd	r24, Y+2	; 0x02
    54a8:	88 2f       	mov	r24, r24
    54aa:	90 e0       	ldi	r25, 0x00	; 0
    54ac:	9c 01       	movw	r18, r24
    54ae:	22 0f       	add	r18, r18
    54b0:	33 1f       	adc	r19, r19
    54b2:	22 0f       	add	r18, r18
    54b4:	33 1f       	adc	r19, r19
    54b6:	89 81       	ldd	r24, Y+1	; 0x01
    54b8:	88 2f       	mov	r24, r24
    54ba:	90 e0       	ldi	r25, 0x00	; 0
    54bc:	82 0f       	add	r24, r18
    54be:	93 1f       	adc	r25, r19
    54c0:	fa 01       	movw	r30, r20
    54c2:	e8 0f       	add	r30, r24
    54c4:	f9 1f       	adc	r31, r25
    54c6:	80 81       	ld	r24, Z
    54c8:	ec 81       	ldd	r30, Y+4	; 0x04
    54ca:	fd 81       	ldd	r31, Y+5	; 0x05
    54cc:	80 83       	st	Z, r24
    54ce:	0e c0       	rjmp	.+28     	; 0x54ec <KEYPAD_getPressedKey+0xbe>

    for(uint8 rows_iterator = 0; rows_iterator < KEYPAD_NUM_OF_ROWS; rows_iterator++)
    {
    	KEYPAD_writeRowsPattern(rows_iterator);

    	for(uint8 columns_iterator = 0; columns_iterator < KEYPAD_NUM_OF_COLUMNS; columns_iterator++)
    54d0:	89 81       	ldd	r24, Y+1	; 0x01
    54d2:	8f 5f       	subi	r24, 0xFF	; 255
    54d4:	89 83       	std	Y+1, r24	; 0x01
    54d6:	89 81       	ldd	r24, Y+1	; 0x01
    54d8:	84 30       	cpi	r24, 0x04	; 4
    54da:	08 f4       	brcc	.+2      	; 0x54de <KEYPAD_getPressedKey+0xb0>
    54dc:	bd cf       	rjmp	.-134    	; 0x5458 <KEYPAD_getPressedKey+0x2a>
void KEYPAD_getPressedKey(uint8* a_ptr2keyValue)
{
    *a_ptr2keyValue = '\0';
    KEYPAD_buttonStatus LOC_ButtonState = KEYPAD_NOT_PRESSED;

    for(uint8 rows_iterator = 0; rows_iterator < KEYPAD_NUM_OF_ROWS; rows_iterator++)
    54de:	8a 81       	ldd	r24, Y+2	; 0x02
    54e0:	8f 5f       	subi	r24, 0xFF	; 255
    54e2:	8a 83       	std	Y+2, r24	; 0x02
    54e4:	8a 81       	ldd	r24, Y+2	; 0x02
    54e6:	84 30       	cpi	r24, 0x04	; 4
    54e8:	08 f4       	brcc	.+2      	; 0x54ec <KEYPAD_getPressedKey+0xbe>
    54ea:	b1 cf       	rjmp	.-158    	; 0x544e <KEYPAD_getPressedKey+0x20>
    		{
    			/* Do Nothing. */
    		}
    	}
    }
}
    54ec:	0f 90       	pop	r0
    54ee:	0f 90       	pop	r0
    54f0:	0f 90       	pop	r0
    54f2:	0f 90       	pop	r0
    54f4:	0f 90       	pop	r0
    54f6:	cf 91       	pop	r28
    54f8:	df 91       	pop	r29
    54fa:	08 95       	ret

000054fc <KEYPAD_writeRowsPattern>:

static void KEYPAD_writeRowsPattern(uint8 a_index)
{
    54fc:	df 93       	push	r29
    54fe:	cf 93       	push	r28
    5500:	00 d0       	rcall	.+0      	; 0x5502 <KEYPAD_writeRowsPattern+0x6>
    5502:	00 d0       	rcall	.+0      	; 0x5504 <KEYPAD_writeRowsPattern+0x8>
    5504:	00 d0       	rcall	.+0      	; 0x5506 <KEYPAD_writeRowsPattern+0xa>
    5506:	cd b7       	in	r28, 0x3d	; 61
    5508:	de b7       	in	r29, 0x3e	; 62
    550a:	8a 83       	std	Y+2, r24	; 0x02
    #if(KEYPAD_CONNECTION_TYPE == KEYPAD_PULLUP_CONNECTION)

    uint8 LOC_rowsPattern = KEYPAD_CREATE_PATTERN_PULLUP(a_index);
    550c:	8a 81       	ldd	r24, Y+2	; 0x02
    550e:	28 2f       	mov	r18, r24
    5510:	30 e0       	ldi	r19, 0x00	; 0
    5512:	81 e0       	ldi	r24, 0x01	; 1
    5514:	90 e0       	ldi	r25, 0x00	; 0
    5516:	02 2e       	mov	r0, r18
    5518:	02 c0       	rjmp	.+4      	; 0x551e <KEYPAD_writeRowsPattern+0x22>
    551a:	88 0f       	add	r24, r24
    551c:	99 1f       	adc	r25, r25
    551e:	0a 94       	dec	r0
    5520:	e2 f7       	brpl	.-8      	; 0x551a <KEYPAD_writeRowsPattern+0x1e>
    5522:	80 95       	com	r24
    5524:	89 83       	std	Y+1, r24	; 0x01

    uint8 LOC_rowsPattern = KEYPAD_CREATE_PATTERN_PULLDOWN(a_index);

    #endif

    DIO_writePin(KEYPAD_ROWS_PORT_ID,KEYPAD_ROW0_PIN_ID,GET_BIT(LOC_rowsPattern,0));
    5526:	89 81       	ldd	r24, Y+1	; 0x01
    5528:	88 2f       	mov	r24, r24
    552a:	90 e0       	ldi	r25, 0x00	; 0
    552c:	81 70       	andi	r24, 0x01	; 1
    552e:	90 70       	andi	r25, 0x00	; 0
    5530:	88 23       	and	r24, r24
    5532:	19 f0       	breq	.+6      	; 0x553a <KEYPAD_writeRowsPattern+0x3e>
    5534:	81 e0       	ldi	r24, 0x01	; 1
    5536:	8e 83       	std	Y+6, r24	; 0x06
    5538:	01 c0       	rjmp	.+2      	; 0x553c <KEYPAD_writeRowsPattern+0x40>
    553a:	1e 82       	std	Y+6, r1	; 0x06
    553c:	80 e0       	ldi	r24, 0x00	; 0
    553e:	60 e0       	ldi	r22, 0x00	; 0
    5540:	4e 81       	ldd	r20, Y+6	; 0x06
    5542:	0e 94 fe 1d 	call	0x3bfc	; 0x3bfc <DIO_writePin>
    DIO_writePin(KEYPAD_ROWS_PORT_ID,KEYPAD_ROW1_PIN_ID,GET_BIT(LOC_rowsPattern,1));
    5546:	89 81       	ldd	r24, Y+1	; 0x01
    5548:	88 2f       	mov	r24, r24
    554a:	90 e0       	ldi	r25, 0x00	; 0
    554c:	82 70       	andi	r24, 0x02	; 2
    554e:	90 70       	andi	r25, 0x00	; 0
    5550:	00 97       	sbiw	r24, 0x00	; 0
    5552:	19 f0       	breq	.+6      	; 0x555a <KEYPAD_writeRowsPattern+0x5e>
    5554:	81 e0       	ldi	r24, 0x01	; 1
    5556:	8d 83       	std	Y+5, r24	; 0x05
    5558:	01 c0       	rjmp	.+2      	; 0x555c <KEYPAD_writeRowsPattern+0x60>
    555a:	1d 82       	std	Y+5, r1	; 0x05
    555c:	80 e0       	ldi	r24, 0x00	; 0
    555e:	61 e0       	ldi	r22, 0x01	; 1
    5560:	4d 81       	ldd	r20, Y+5	; 0x05
    5562:	0e 94 fe 1d 	call	0x3bfc	; 0x3bfc <DIO_writePin>
    DIO_writePin(KEYPAD_ROWS_PORT_ID,KEYPAD_ROW2_PIN_ID,GET_BIT(LOC_rowsPattern,2));
    5566:	89 81       	ldd	r24, Y+1	; 0x01
    5568:	88 2f       	mov	r24, r24
    556a:	90 e0       	ldi	r25, 0x00	; 0
    556c:	84 70       	andi	r24, 0x04	; 4
    556e:	90 70       	andi	r25, 0x00	; 0
    5570:	00 97       	sbiw	r24, 0x00	; 0
    5572:	19 f0       	breq	.+6      	; 0x557a <KEYPAD_writeRowsPattern+0x7e>
    5574:	81 e0       	ldi	r24, 0x01	; 1
    5576:	8c 83       	std	Y+4, r24	; 0x04
    5578:	01 c0       	rjmp	.+2      	; 0x557c <KEYPAD_writeRowsPattern+0x80>
    557a:	1c 82       	std	Y+4, r1	; 0x04
    557c:	80 e0       	ldi	r24, 0x00	; 0
    557e:	62 e0       	ldi	r22, 0x02	; 2
    5580:	4c 81       	ldd	r20, Y+4	; 0x04
    5582:	0e 94 fe 1d 	call	0x3bfc	; 0x3bfc <DIO_writePin>
    DIO_writePin(KEYPAD_ROWS_PORT_ID,KEYPAD_ROW3_PIN_ID,GET_BIT(LOC_rowsPattern,3));
    5586:	89 81       	ldd	r24, Y+1	; 0x01
    5588:	88 2f       	mov	r24, r24
    558a:	90 e0       	ldi	r25, 0x00	; 0
    558c:	88 70       	andi	r24, 0x08	; 8
    558e:	90 70       	andi	r25, 0x00	; 0
    5590:	00 97       	sbiw	r24, 0x00	; 0
    5592:	19 f0       	breq	.+6      	; 0x559a <KEYPAD_writeRowsPattern+0x9e>
    5594:	81 e0       	ldi	r24, 0x01	; 1
    5596:	8b 83       	std	Y+3, r24	; 0x03
    5598:	01 c0       	rjmp	.+2      	; 0x559c <KEYPAD_writeRowsPattern+0xa0>
    559a:	1b 82       	std	Y+3, r1	; 0x03
    559c:	80 e0       	ldi	r24, 0x00	; 0
    559e:	63 e0       	ldi	r22, 0x03	; 3
    55a0:	4b 81       	ldd	r20, Y+3	; 0x03
    55a2:	0e 94 fe 1d 	call	0x3bfc	; 0x3bfc <DIO_writePin>
}
    55a6:	26 96       	adiw	r28, 0x06	; 6
    55a8:	0f b6       	in	r0, 0x3f	; 63
    55aa:	f8 94       	cli
    55ac:	de bf       	out	0x3e, r29	; 62
    55ae:	0f be       	out	0x3f, r0	; 63
    55b0:	cd bf       	out	0x3d, r28	; 61
    55b2:	cf 91       	pop	r28
    55b4:	df 91       	pop	r29
    55b6:	08 95       	ret

000055b8 <BuzzerOn>:
#define ENTER_BUTTON 'D'

volatile uint8 g_counting_flag = 0;

void BuzzerOn(void)
{
    55b8:	df 93       	push	r29
    55ba:	cf 93       	push	r28
    55bc:	cd b7       	in	r28, 0x3d	; 61
    55be:	de b7       	in	r29, 0x3e	; 62
	DIO_writePin(DIO_PORTB_ID,DIO_PIN0_ID,DIO_HIGH_PIN);
    55c0:	81 e0       	ldi	r24, 0x01	; 1
    55c2:	60 e0       	ldi	r22, 0x00	; 0
    55c4:	41 e0       	ldi	r20, 0x01	; 1
    55c6:	0e 94 fe 1d 	call	0x3bfc	; 0x3bfc <DIO_writePin>
	LCD_displayStringRowColumn("Done    ",LCD_ROW_4_ID,LCD_COLUMN_01_ID);
    55ca:	80 e6       	ldi	r24, 0x60	; 96
    55cc:	90 e0       	ldi	r25, 0x00	; 0
    55ce:	63 e0       	ldi	r22, 0x03	; 3
    55d0:	40 e0       	ldi	r20, 0x00	; 0
    55d2:	0e 94 45 25 	call	0x4a8a	; 0x4a8a <LCD_displayStringRowColumn>
	GIE_setInterruptStatus(GIE_DISABLE); /* Until create a Timer Disable function. */
    55d6:	80 e0       	ldi	r24, 0x00	; 0
    55d8:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <GIE_setInterruptStatus>
	g_counting_flag = 0;
    55dc:	10 92 c0 01 	sts	0x01C0, r1
}
    55e0:	cf 91       	pop	r28
    55e2:	df 91       	pop	r29
    55e4:	08 95       	ret

000055e6 <InitSystem>:

void InitSystem(void)
{
    55e6:	df 93       	push	r29
    55e8:	cf 93       	push	r28
    55ea:	cd b7       	in	r28, 0x3d	; 61
    55ec:	de b7       	in	r29, 0x3e	; 62
	PORT_init();
    55ee:	0e 94 e0 1c 	call	0x39c0	; 0x39c0 <PORT_init>
	LCD_init();
    55f2:	0e 94 c2 20 	call	0x4184	; 0x4184 <LCD_init>
	TIMER1_setCallBackFunction(TIMER1_COMPARE_MATCH_MODE,BuzzerOn);
    55f6:	2c ed       	ldi	r18, 0xDC	; 220
    55f8:	3a e2       	ldi	r19, 0x2A	; 42
    55fa:	84 e0       	ldi	r24, 0x04	; 4
    55fc:	b9 01       	movw	r22, r18
    55fe:	0e 94 46 17 	call	0x2e8c	; 0x2e8c <TIMER1_setCallBackFunction>
	GIE_setInterruptStatus(GIE_ENABLE);
    5602:	81 e0       	ldi	r24, 0x01	; 1
    5604:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <GIE_setInterruptStatus>
}
    5608:	cf 91       	pop	r28
    560a:	df 91       	pop	r29
    560c:	08 95       	ret

0000560e <ReadTimeValue>:

uint32 ReadTimeValue(void)
{
    560e:	df 93       	push	r29
    5610:	cf 93       	push	r28
    5612:	00 d0       	rcall	.+0      	; 0x5614 <ReadTimeValue+0x6>
    5614:	00 d0       	rcall	.+0      	; 0x5616 <ReadTimeValue+0x8>
    5616:	0f 92       	push	r0
    5618:	cd b7       	in	r28, 0x3d	; 61
    561a:	de b7       	in	r29, 0x3e	; 62
	uint32 LOC_timeValue = 0;
    561c:	19 82       	std	Y+1, r1	; 0x01
    561e:	1a 82       	std	Y+2, r1	; 0x02
    5620:	1b 82       	std	Y+3, r1	; 0x03
    5622:	1c 82       	std	Y+4, r1	; 0x04
	uint8 LOC_pressedKey = '\0';
    5624:	1d 82       	std	Y+5, r1	; 0x05

	LCD_moveCursor(LCD_ROW_2_ID,LCD_COLUMN_01_ID);
    5626:	81 e0       	ldi	r24, 0x01	; 1
    5628:	60 e0       	ldi	r22, 0x00	; 0
    562a:	0e 94 b0 24 	call	0x4960	; 0x4960 <LCD_moveCursor>

	do
	{
		KEYPAD_getPressedKey(&LOC_pressedKey);
    562e:	ce 01       	movw	r24, r28
    5630:	05 96       	adiw	r24, 0x05	; 5
    5632:	0e 94 17 2a 	call	0x542e	; 0x542e <KEYPAD_getPressedKey>

		if((LOC_pressedKey != '\0') && (LOC_pressedKey != ENTER_BUTTON))
    5636:	8d 81       	ldd	r24, Y+5	; 0x05
    5638:	88 23       	and	r24, r24
    563a:	21 f1       	breq	.+72     	; 0x5684 <ReadTimeValue+0x76>
    563c:	8d 81       	ldd	r24, Y+5	; 0x05
    563e:	84 34       	cpi	r24, 0x44	; 68
    5640:	09 f1       	breq	.+66     	; 0x5684 <ReadTimeValue+0x76>
		{
			LCD_displayCharacter(LOC_pressedKey);
    5642:	8d 81       	ldd	r24, Y+5	; 0x05
    5644:	0e 94 f5 24 	call	0x49ea	; 0x49ea <LCD_displayCharacter>
			LOC_timeValue = ((LOC_timeValue * 10) + (LOC_pressedKey - '0'));
    5648:	89 81       	ldd	r24, Y+1	; 0x01
    564a:	9a 81       	ldd	r25, Y+2	; 0x02
    564c:	ab 81       	ldd	r26, Y+3	; 0x03
    564e:	bc 81       	ldd	r27, Y+4	; 0x04
    5650:	2a e0       	ldi	r18, 0x0A	; 10
    5652:	30 e0       	ldi	r19, 0x00	; 0
    5654:	40 e0       	ldi	r20, 0x00	; 0
    5656:	50 e0       	ldi	r21, 0x00	; 0
    5658:	bc 01       	movw	r22, r24
    565a:	cd 01       	movw	r24, r26
    565c:	0e 94 98 2b 	call	0x5730	; 0x5730 <__mulsi3>
    5660:	9b 01       	movw	r18, r22
    5662:	ac 01       	movw	r20, r24
    5664:	8d 81       	ldd	r24, Y+5	; 0x05
    5666:	88 2f       	mov	r24, r24
    5668:	90 e0       	ldi	r25, 0x00	; 0
    566a:	c0 97       	sbiw	r24, 0x30	; 48
    566c:	aa 27       	eor	r26, r26
    566e:	97 fd       	sbrc	r25, 7
    5670:	a0 95       	com	r26
    5672:	ba 2f       	mov	r27, r26
    5674:	82 0f       	add	r24, r18
    5676:	93 1f       	adc	r25, r19
    5678:	a4 1f       	adc	r26, r20
    567a:	b5 1f       	adc	r27, r21
    567c:	89 83       	std	Y+1, r24	; 0x01
    567e:	9a 83       	std	Y+2, r25	; 0x02
    5680:	ab 83       	std	Y+3, r26	; 0x03
    5682:	bc 83       	std	Y+4, r27	; 0x04
		}

	}while(LOC_pressedKey != ENTER_BUTTON);
    5684:	8d 81       	ldd	r24, Y+5	; 0x05
    5686:	84 34       	cpi	r24, 0x44	; 68
    5688:	91 f6       	brne	.-92     	; 0x562e <ReadTimeValue+0x20>

	return LOC_timeValue;
    568a:	89 81       	ldd	r24, Y+1	; 0x01
    568c:	9a 81       	ldd	r25, Y+2	; 0x02
    568e:	ab 81       	ldd	r26, Y+3	; 0x03
    5690:	bc 81       	ldd	r27, Y+4	; 0x04
}
    5692:	bc 01       	movw	r22, r24
    5694:	cd 01       	movw	r24, r26
    5696:	0f 90       	pop	r0
    5698:	0f 90       	pop	r0
    569a:	0f 90       	pop	r0
    569c:	0f 90       	pop	r0
    569e:	0f 90       	pop	r0
    56a0:	cf 91       	pop	r28
    56a2:	df 91       	pop	r29
    56a4:	08 95       	ret

000056a6 <InitCounter>:

void InitCounter(uint32 a_timeValue)
{
    56a6:	df 93       	push	r29
    56a8:	cf 93       	push	r28
    56aa:	cd b7       	in	r28, 0x3d	; 61
    56ac:	de b7       	in	r29, 0x3e	; 62
    56ae:	2c 97       	sbiw	r28, 0x0c	; 12
    56b0:	0f b6       	in	r0, 0x3f	; 63
    56b2:	f8 94       	cli
    56b4:	de bf       	out	0x3e, r29	; 62
    56b6:	0f be       	out	0x3f, r0	; 63
    56b8:	cd bf       	out	0x3d, r28	; 61
    56ba:	69 87       	std	Y+9, r22	; 0x09
    56bc:	7a 87       	std	Y+10, r23	; 0x0a
    56be:	8b 87       	std	Y+11, r24	; 0x0b
    56c0:	9c 87       	std	Y+12, r25	; 0x0c
	TIMER1_configurations g_TIMER1_configurations = {a_timeValue,TIMER1_COMPARE_MATCH_MODE,TIMER1_PRESCALER_1,TIMER1_NON_PWM_NO_OUTPUT,TIMER1_NON_PWM_NO_OUTPUT};
    56c2:	89 85       	ldd	r24, Y+9	; 0x09
    56c4:	9a 85       	ldd	r25, Y+10	; 0x0a
    56c6:	ab 85       	ldd	r26, Y+11	; 0x0b
    56c8:	bc 85       	ldd	r27, Y+12	; 0x0c
    56ca:	89 83       	std	Y+1, r24	; 0x01
    56cc:	9a 83       	std	Y+2, r25	; 0x02
    56ce:	ab 83       	std	Y+3, r26	; 0x03
    56d0:	bc 83       	std	Y+4, r27	; 0x04
    56d2:	84 e0       	ldi	r24, 0x04	; 4
    56d4:	8d 83       	std	Y+5, r24	; 0x05
    56d6:	81 e0       	ldi	r24, 0x01	; 1
    56d8:	8e 83       	std	Y+6, r24	; 0x06
    56da:	1f 82       	std	Y+7, r1	; 0x07
    56dc:	18 86       	std	Y+8, r1	; 0x08
    TIMER1_init(&g_TIMER1_configurations);
    56de:	ce 01       	movw	r24, r28
    56e0:	01 96       	adiw	r24, 0x01	; 1
    56e2:	0e 94 81 14 	call	0x2902	; 0x2902 <TIMER1_init>
    g_counting_flag = 1;
    56e6:	81 e0       	ldi	r24, 0x01	; 1
    56e8:	80 93 c0 01 	sts	0x01C0, r24
}
    56ec:	2c 96       	adiw	r28, 0x0c	; 12
    56ee:	0f b6       	in	r0, 0x3f	; 63
    56f0:	f8 94       	cli
    56f2:	de bf       	out	0x3e, r29	; 62
    56f4:	0f be       	out	0x3f, r0	; 63
    56f6:	cd bf       	out	0x3d, r28	; 61
    56f8:	cf 91       	pop	r28
    56fa:	df 91       	pop	r29
    56fc:	08 95       	ret

000056fe <main>:

int main(void)
{
    56fe:	df 93       	push	r29
    5700:	cf 93       	push	r28
    5702:	cd b7       	in	r28, 0x3d	; 61
    5704:	de b7       	in	r29, 0x3e	; 62
	InitSystem();
    5706:	0e 94 f3 2a 	call	0x55e6	; 0x55e6 <InitSystem>
	LCD_displayString("Time Value (ms): ");
    570a:	89 e6       	ldi	r24, 0x69	; 105
    570c:	90 e0       	ldi	r25, 0x00	; 0
    570e:	0e 94 18 25 	call	0x4a30	; 0x4a30 <LCD_displayString>

	InitCounter(ReadTimeValue());
    5712:	0e 94 07 2b 	call	0x560e	; 0x560e <ReadTimeValue>
    5716:	dc 01       	movw	r26, r24
    5718:	cb 01       	movw	r24, r22
    571a:	bc 01       	movw	r22, r24
    571c:	cd 01       	movw	r24, r26
    571e:	0e 94 53 2b 	call	0x56a6	; 0x56a6 <InitCounter>
	LCD_displayStringRowColumn("Wait...",LCD_ROW_4_ID,LCD_COLUMN_01_ID);
    5722:	8b e7       	ldi	r24, 0x7B	; 123
    5724:	90 e0       	ldi	r25, 0x00	; 0
    5726:	63 e0       	ldi	r22, 0x03	; 3
    5728:	40 e0       	ldi	r20, 0x00	; 0
    572a:	0e 94 45 25 	call	0x4a8a	; 0x4a8a <LCD_displayStringRowColumn>
    572e:	ff cf       	rjmp	.-2      	; 0x572e <main+0x30>

00005730 <__mulsi3>:
    5730:	62 9f       	mul	r22, r18
    5732:	d0 01       	movw	r26, r0
    5734:	73 9f       	mul	r23, r19
    5736:	f0 01       	movw	r30, r0
    5738:	82 9f       	mul	r24, r18
    573a:	e0 0d       	add	r30, r0
    573c:	f1 1d       	adc	r31, r1
    573e:	64 9f       	mul	r22, r20
    5740:	e0 0d       	add	r30, r0
    5742:	f1 1d       	adc	r31, r1
    5744:	92 9f       	mul	r25, r18
    5746:	f0 0d       	add	r31, r0
    5748:	83 9f       	mul	r24, r19
    574a:	f0 0d       	add	r31, r0
    574c:	74 9f       	mul	r23, r20
    574e:	f0 0d       	add	r31, r0
    5750:	65 9f       	mul	r22, r21
    5752:	f0 0d       	add	r31, r0
    5754:	99 27       	eor	r25, r25
    5756:	72 9f       	mul	r23, r18
    5758:	b0 0d       	add	r27, r0
    575a:	e1 1d       	adc	r30, r1
    575c:	f9 1f       	adc	r31, r25
    575e:	63 9f       	mul	r22, r19
    5760:	b0 0d       	add	r27, r0
    5762:	e1 1d       	adc	r30, r1
    5764:	f9 1f       	adc	r31, r25
    5766:	bd 01       	movw	r22, r26
    5768:	cf 01       	movw	r24, r30
    576a:	11 24       	eor	r1, r1
    576c:	08 95       	ret

0000576e <__udivmodqi4>:
    576e:	99 1b       	sub	r25, r25
    5770:	79 e0       	ldi	r23, 0x09	; 9
    5772:	04 c0       	rjmp	.+8      	; 0x577c <__udivmodqi4_ep>

00005774 <__udivmodqi4_loop>:
    5774:	99 1f       	adc	r25, r25
    5776:	96 17       	cp	r25, r22
    5778:	08 f0       	brcs	.+2      	; 0x577c <__udivmodqi4_ep>
    577a:	96 1b       	sub	r25, r22

0000577c <__udivmodqi4_ep>:
    577c:	88 1f       	adc	r24, r24
    577e:	7a 95       	dec	r23
    5780:	c9 f7       	brne	.-14     	; 0x5774 <__udivmodqi4_loop>
    5782:	80 95       	com	r24
    5784:	08 95       	ret

00005786 <__udivmodsi4>:
    5786:	a1 e2       	ldi	r26, 0x21	; 33
    5788:	1a 2e       	mov	r1, r26
    578a:	aa 1b       	sub	r26, r26
    578c:	bb 1b       	sub	r27, r27
    578e:	fd 01       	movw	r30, r26
    5790:	0d c0       	rjmp	.+26     	; 0x57ac <__udivmodsi4_ep>

00005792 <__udivmodsi4_loop>:
    5792:	aa 1f       	adc	r26, r26
    5794:	bb 1f       	adc	r27, r27
    5796:	ee 1f       	adc	r30, r30
    5798:	ff 1f       	adc	r31, r31
    579a:	a2 17       	cp	r26, r18
    579c:	b3 07       	cpc	r27, r19
    579e:	e4 07       	cpc	r30, r20
    57a0:	f5 07       	cpc	r31, r21
    57a2:	20 f0       	brcs	.+8      	; 0x57ac <__udivmodsi4_ep>
    57a4:	a2 1b       	sub	r26, r18
    57a6:	b3 0b       	sbc	r27, r19
    57a8:	e4 0b       	sbc	r30, r20
    57aa:	f5 0b       	sbc	r31, r21

000057ac <__udivmodsi4_ep>:
    57ac:	66 1f       	adc	r22, r22
    57ae:	77 1f       	adc	r23, r23
    57b0:	88 1f       	adc	r24, r24
    57b2:	99 1f       	adc	r25, r25
    57b4:	1a 94       	dec	r1
    57b6:	69 f7       	brne	.-38     	; 0x5792 <__udivmodsi4_loop>
    57b8:	60 95       	com	r22
    57ba:	70 95       	com	r23
    57bc:	80 95       	com	r24
    57be:	90 95       	com	r25
    57c0:	9b 01       	movw	r18, r22
    57c2:	ac 01       	movw	r20, r24
    57c4:	bd 01       	movw	r22, r26
    57c6:	cf 01       	movw	r24, r30
    57c8:	08 95       	ret

000057ca <__prologue_saves__>:
    57ca:	2f 92       	push	r2
    57cc:	3f 92       	push	r3
    57ce:	4f 92       	push	r4
    57d0:	5f 92       	push	r5
    57d2:	6f 92       	push	r6
    57d4:	7f 92       	push	r7
    57d6:	8f 92       	push	r8
    57d8:	9f 92       	push	r9
    57da:	af 92       	push	r10
    57dc:	bf 92       	push	r11
    57de:	cf 92       	push	r12
    57e0:	df 92       	push	r13
    57e2:	ef 92       	push	r14
    57e4:	ff 92       	push	r15
    57e6:	0f 93       	push	r16
    57e8:	1f 93       	push	r17
    57ea:	cf 93       	push	r28
    57ec:	df 93       	push	r29
    57ee:	cd b7       	in	r28, 0x3d	; 61
    57f0:	de b7       	in	r29, 0x3e	; 62
    57f2:	ca 1b       	sub	r28, r26
    57f4:	db 0b       	sbc	r29, r27
    57f6:	0f b6       	in	r0, 0x3f	; 63
    57f8:	f8 94       	cli
    57fa:	de bf       	out	0x3e, r29	; 62
    57fc:	0f be       	out	0x3f, r0	; 63
    57fe:	cd bf       	out	0x3d, r28	; 61
    5800:	09 94       	ijmp

00005802 <__epilogue_restores__>:
    5802:	2a 88       	ldd	r2, Y+18	; 0x12
    5804:	39 88       	ldd	r3, Y+17	; 0x11
    5806:	48 88       	ldd	r4, Y+16	; 0x10
    5808:	5f 84       	ldd	r5, Y+15	; 0x0f
    580a:	6e 84       	ldd	r6, Y+14	; 0x0e
    580c:	7d 84       	ldd	r7, Y+13	; 0x0d
    580e:	8c 84       	ldd	r8, Y+12	; 0x0c
    5810:	9b 84       	ldd	r9, Y+11	; 0x0b
    5812:	aa 84       	ldd	r10, Y+10	; 0x0a
    5814:	b9 84       	ldd	r11, Y+9	; 0x09
    5816:	c8 84       	ldd	r12, Y+8	; 0x08
    5818:	df 80       	ldd	r13, Y+7	; 0x07
    581a:	ee 80       	ldd	r14, Y+6	; 0x06
    581c:	fd 80       	ldd	r15, Y+5	; 0x05
    581e:	0c 81       	ldd	r16, Y+4	; 0x04
    5820:	1b 81       	ldd	r17, Y+3	; 0x03
    5822:	aa 81       	ldd	r26, Y+2	; 0x02
    5824:	b9 81       	ldd	r27, Y+1	; 0x01
    5826:	ce 0f       	add	r28, r30
    5828:	d1 1d       	adc	r29, r1
    582a:	0f b6       	in	r0, 0x3f	; 63
    582c:	f8 94       	cli
    582e:	de bf       	out	0x3e, r29	; 62
    5830:	0f be       	out	0x3f, r0	; 63
    5832:	cd bf       	out	0x3d, r28	; 61
    5834:	ed 01       	movw	r28, r26
    5836:	08 95       	ret

00005838 <_exit>:
    5838:	f8 94       	cli

0000583a <__stop_program>:
    583a:	ff cf       	rjmp	.-2      	; 0x583a <__stop_program>
