
RunningBoy.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a5e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000002a  00800060  00000a5e  00000ad2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000afc  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000b2c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000110  00000000  00000000  00000b68  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000024cc  00000000  00000000  00000c78  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000996  00000000  00000000  00003144  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000011c6  00000000  00000000  00003ada  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000274  00000000  00000000  00004ca0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000704  00000000  00000000  00004f14  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001b6f  00000000  00000000  00005618  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000250  00000000  00000000  00007187  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee e5       	ldi	r30, 0x5E	; 94
  68:	fa e0       	ldi	r31, 0x0A	; 10
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 38       	cpi	r26, 0x8A	; 138
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 fc 04 	call	0x9f8	; 0x9f8 <main>
  7a:	0c 94 2d 05 	jmp	0xa5a	; 0xa5a <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <DIO_enuWriteChannel>:



DIO_tenuErrorStatus DIO_enuWriteChannel(u8 Copy_u8ChannelId , u8 Copy_u8Level){
    DIO_tenuErrorStatus Local_u8Status = DIO_OK;
    if((Copy_u8ChannelId>31)||(Copy_u8ChannelId<0)){
  82:	80 32       	cpi	r24, 0x20	; 32
  84:	08 f0       	brcs	.+2      	; 0x88 <DIO_enuWriteChannel+0x6>
  86:	8e c0       	rjmp	.+284    	; 0x1a4 <DIO_enuWriteChannel+0x122>
        Local_u8Status = DIO_WRONGCHANNEL;
    }
    else if((Copy_u8Level>1)||(Copy_u8Level<0))
  88:	62 30       	cpi	r22, 0x02	; 2
  8a:	08 f0       	brcs	.+2      	; 0x8e <DIO_enuWriteChannel+0xc>
  8c:	8d c0       	rjmp	.+282    	; 0x1a8 <DIO_enuWriteChannel+0x126>
    {
        Local_u8Status = DIO_WRONGDIR;
	}
    else{
        u8 Local_u8Port = Copy_u8ChannelId/8;
  8e:	98 2f       	mov	r25, r24
  90:	96 95       	lsr	r25
  92:	96 95       	lsr	r25
  94:	96 95       	lsr	r25
        u8 Local_u8Pin = Copy_u8ChannelId%8;
  96:	87 70       	andi	r24, 0x07	; 7
        switch(Local_u8Port)
  98:	91 30       	cpi	r25, 0x01	; 1
  9a:	39 f1       	breq	.+78     	; 0xea <DIO_enuWriteChannel+0x68>
  9c:	38 f0       	brcs	.+14     	; 0xac <DIO_enuWriteChannel+0x2a>
  9e:	92 30       	cpi	r25, 0x02	; 2
  a0:	09 f4       	brne	.+2      	; 0xa4 <DIO_enuWriteChannel+0x22>
  a2:	42 c0       	rjmp	.+132    	; 0x128 <DIO_enuWriteChannel+0xa6>
  a4:	93 30       	cpi	r25, 0x03	; 3
  a6:	09 f4       	brne	.+2      	; 0xaa <DIO_enuWriteChannel+0x28>
  a8:	5e c0       	rjmp	.+188    	; 0x166 <DIO_enuWriteChannel+0xe4>
  aa:	80 c0       	rjmp	.+256    	; 0x1ac <DIO_enuWriteChannel+0x12a>
        {
            case DIO_PORTA:
                if(Copy_u8Level==DIO_CHANNEL_LOW)
  ac:	61 11       	cpse	r22, r1
  ae:	0f c0       	rjmp	.+30     	; 0xce <DIO_enuWriteChannel+0x4c>
                {
                    CLR_BIT(DIO_PORTA_Reg,Local_u8Pin);
  b0:	4b b3       	in	r20, 0x1b	; 27
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	30 e0       	ldi	r19, 0x00	; 0
  b6:	b9 01       	movw	r22, r18
  b8:	02 c0       	rjmp	.+4      	; 0xbe <DIO_enuWriteChannel+0x3c>
  ba:	66 0f       	add	r22, r22
  bc:	77 1f       	adc	r23, r23
  be:	8a 95       	dec	r24
  c0:	e2 f7       	brpl	.-8      	; 0xba <DIO_enuWriteChannel+0x38>
  c2:	cb 01       	movw	r24, r22
  c4:	80 95       	com	r24
  c6:	84 23       	and	r24, r20
  c8:	8b bb       	out	0x1b, r24	; 27
#include "DIO_prv.h"



DIO_tenuErrorStatus DIO_enuWriteChannel(u8 Copy_u8ChannelId , u8 Copy_u8Level){
    DIO_tenuErrorStatus Local_u8Status = DIO_OK;
  ca:	84 e0       	ldi	r24, 0x04	; 4
  cc:	08 95       	ret
                {
                    CLR_BIT(DIO_PORTA_Reg,Local_u8Pin);
                }
                else
                {
                    SET_BIT(DIO_PORTA_Reg,Local_u8Pin);
  ce:	4b b3       	in	r20, 0x1b	; 27
  d0:	21 e0       	ldi	r18, 0x01	; 1
  d2:	30 e0       	ldi	r19, 0x00	; 0
  d4:	b9 01       	movw	r22, r18
  d6:	02 c0       	rjmp	.+4      	; 0xdc <DIO_enuWriteChannel+0x5a>
  d8:	66 0f       	add	r22, r22
  da:	77 1f       	adc	r23, r23
  dc:	8a 95       	dec	r24
  de:	e2 f7       	brpl	.-8      	; 0xd8 <DIO_enuWriteChannel+0x56>
  e0:	cb 01       	movw	r24, r22
  e2:	84 2b       	or	r24, r20
  e4:	8b bb       	out	0x1b, r24	; 27
#include "DIO_prv.h"



DIO_tenuErrorStatus DIO_enuWriteChannel(u8 Copy_u8ChannelId , u8 Copy_u8Level){
    DIO_tenuErrorStatus Local_u8Status = DIO_OK;
  e6:	84 e0       	ldi	r24, 0x04	; 4
  e8:	08 95       	ret
                {
                    SET_BIT(DIO_PORTA_Reg,Local_u8Pin);
                }   
            break;
            case DIO_PORTB:
                if(Copy_u8Level==DIO_CHANNEL_LOW)
  ea:	61 11       	cpse	r22, r1
  ec:	0f c0       	rjmp	.+30     	; 0x10c <DIO_enuWriteChannel+0x8a>
                {
                    CLR_BIT(DIO_PORTB_Reg,Local_u8Pin);
  ee:	48 b3       	in	r20, 0x18	; 24
  f0:	21 e0       	ldi	r18, 0x01	; 1
  f2:	30 e0       	ldi	r19, 0x00	; 0
  f4:	b9 01       	movw	r22, r18
  f6:	02 c0       	rjmp	.+4      	; 0xfc <DIO_enuWriteChannel+0x7a>
  f8:	66 0f       	add	r22, r22
  fa:	77 1f       	adc	r23, r23
  fc:	8a 95       	dec	r24
  fe:	e2 f7       	brpl	.-8      	; 0xf8 <DIO_enuWriteChannel+0x76>
 100:	cb 01       	movw	r24, r22
 102:	80 95       	com	r24
 104:	84 23       	and	r24, r20
 106:	88 bb       	out	0x18, r24	; 24
#include "DIO_prv.h"



DIO_tenuErrorStatus DIO_enuWriteChannel(u8 Copy_u8ChannelId , u8 Copy_u8Level){
    DIO_tenuErrorStatus Local_u8Status = DIO_OK;
 108:	84 e0       	ldi	r24, 0x04	; 4
 10a:	08 95       	ret
                {
                    CLR_BIT(DIO_PORTB_Reg,Local_u8Pin);
                }
                else
                {
                    SET_BIT(DIO_PORTB_Reg,Local_u8Pin);
 10c:	48 b3       	in	r20, 0x18	; 24
 10e:	21 e0       	ldi	r18, 0x01	; 1
 110:	30 e0       	ldi	r19, 0x00	; 0
 112:	b9 01       	movw	r22, r18
 114:	02 c0       	rjmp	.+4      	; 0x11a <DIO_enuWriteChannel+0x98>
 116:	66 0f       	add	r22, r22
 118:	77 1f       	adc	r23, r23
 11a:	8a 95       	dec	r24
 11c:	e2 f7       	brpl	.-8      	; 0x116 <DIO_enuWriteChannel+0x94>
 11e:	cb 01       	movw	r24, r22
 120:	84 2b       	or	r24, r20
 122:	88 bb       	out	0x18, r24	; 24
#include "DIO_prv.h"



DIO_tenuErrorStatus DIO_enuWriteChannel(u8 Copy_u8ChannelId , u8 Copy_u8Level){
    DIO_tenuErrorStatus Local_u8Status = DIO_OK;
 124:	84 e0       	ldi	r24, 0x04	; 4
 126:	08 95       	ret
                {
                    SET_BIT(DIO_PORTB_Reg,Local_u8Pin);
                }                          
            break;
            case DIO_PORTC:
                if(Copy_u8Level==DIO_CHANNEL_LOW)
 128:	61 11       	cpse	r22, r1
 12a:	0f c0       	rjmp	.+30     	; 0x14a <DIO_enuWriteChannel+0xc8>
                {
                    CLR_BIT(DIO_PORTC_Reg,Local_u8Pin);
 12c:	45 b3       	in	r20, 0x15	; 21
 12e:	21 e0       	ldi	r18, 0x01	; 1
 130:	30 e0       	ldi	r19, 0x00	; 0
 132:	b9 01       	movw	r22, r18
 134:	02 c0       	rjmp	.+4      	; 0x13a <DIO_enuWriteChannel+0xb8>
 136:	66 0f       	add	r22, r22
 138:	77 1f       	adc	r23, r23
 13a:	8a 95       	dec	r24
 13c:	e2 f7       	brpl	.-8      	; 0x136 <DIO_enuWriteChannel+0xb4>
 13e:	cb 01       	movw	r24, r22
 140:	80 95       	com	r24
 142:	84 23       	and	r24, r20
 144:	85 bb       	out	0x15, r24	; 21
#include "DIO_prv.h"



DIO_tenuErrorStatus DIO_enuWriteChannel(u8 Copy_u8ChannelId , u8 Copy_u8Level){
    DIO_tenuErrorStatus Local_u8Status = DIO_OK;
 146:	84 e0       	ldi	r24, 0x04	; 4
 148:	08 95       	ret
                {
                    CLR_BIT(DIO_PORTC_Reg,Local_u8Pin);
                }
                else
                {
                    SET_BIT(DIO_PORTC_Reg,Local_u8Pin);
 14a:	45 b3       	in	r20, 0x15	; 21
 14c:	21 e0       	ldi	r18, 0x01	; 1
 14e:	30 e0       	ldi	r19, 0x00	; 0
 150:	b9 01       	movw	r22, r18
 152:	02 c0       	rjmp	.+4      	; 0x158 <DIO_enuWriteChannel+0xd6>
 154:	66 0f       	add	r22, r22
 156:	77 1f       	adc	r23, r23
 158:	8a 95       	dec	r24
 15a:	e2 f7       	brpl	.-8      	; 0x154 <DIO_enuWriteChannel+0xd2>
 15c:	cb 01       	movw	r24, r22
 15e:	84 2b       	or	r24, r20
 160:	85 bb       	out	0x15, r24	; 21
#include "DIO_prv.h"



DIO_tenuErrorStatus DIO_enuWriteChannel(u8 Copy_u8ChannelId , u8 Copy_u8Level){
    DIO_tenuErrorStatus Local_u8Status = DIO_OK;
 162:	84 e0       	ldi	r24, 0x04	; 4
 164:	08 95       	ret
                {
                    SET_BIT(DIO_PORTC_Reg,Local_u8Pin);
                }  
            break;
            case DIO_PORTD:
                if(Copy_u8Level==DIO_CHANNEL_LOW)
 166:	61 11       	cpse	r22, r1
 168:	0f c0       	rjmp	.+30     	; 0x188 <DIO_enuWriteChannel+0x106>
                {
                    CLR_BIT(DIO_PORTD_Reg,Local_u8Pin);
 16a:	42 b3       	in	r20, 0x12	; 18
 16c:	21 e0       	ldi	r18, 0x01	; 1
 16e:	30 e0       	ldi	r19, 0x00	; 0
 170:	b9 01       	movw	r22, r18
 172:	02 c0       	rjmp	.+4      	; 0x178 <DIO_enuWriteChannel+0xf6>
 174:	66 0f       	add	r22, r22
 176:	77 1f       	adc	r23, r23
 178:	8a 95       	dec	r24
 17a:	e2 f7       	brpl	.-8      	; 0x174 <DIO_enuWriteChannel+0xf2>
 17c:	cb 01       	movw	r24, r22
 17e:	80 95       	com	r24
 180:	84 23       	and	r24, r20
 182:	82 bb       	out	0x12, r24	; 18
#include "DIO_prv.h"



DIO_tenuErrorStatus DIO_enuWriteChannel(u8 Copy_u8ChannelId , u8 Copy_u8Level){
    DIO_tenuErrorStatus Local_u8Status = DIO_OK;
 184:	84 e0       	ldi	r24, 0x04	; 4
 186:	08 95       	ret
                {
                    CLR_BIT(DIO_PORTD_Reg,Local_u8Pin);
                }
                else
                {
                    SET_BIT(DIO_PORTD_Reg,Local_u8Pin);
 188:	42 b3       	in	r20, 0x12	; 18
 18a:	21 e0       	ldi	r18, 0x01	; 1
 18c:	30 e0       	ldi	r19, 0x00	; 0
 18e:	b9 01       	movw	r22, r18
 190:	02 c0       	rjmp	.+4      	; 0x196 <DIO_enuWriteChannel+0x114>
 192:	66 0f       	add	r22, r22
 194:	77 1f       	adc	r23, r23
 196:	8a 95       	dec	r24
 198:	e2 f7       	brpl	.-8      	; 0x192 <DIO_enuWriteChannel+0x110>
 19a:	cb 01       	movw	r24, r22
 19c:	84 2b       	or	r24, r20
 19e:	82 bb       	out	0x12, r24	; 18
#include "DIO_prv.h"



DIO_tenuErrorStatus DIO_enuWriteChannel(u8 Copy_u8ChannelId , u8 Copy_u8Level){
    DIO_tenuErrorStatus Local_u8Status = DIO_OK;
 1a0:	84 e0       	ldi	r24, 0x04	; 4
 1a2:	08 95       	ret
    if((Copy_u8ChannelId>31)||(Copy_u8ChannelId<0)){
        Local_u8Status = DIO_WRONGCHANNEL;
 1a4:	80 e0       	ldi	r24, 0x00	; 0
 1a6:	08 95       	ret
    }
    else if((Copy_u8Level>1)||(Copy_u8Level<0))
    {
        Local_u8Status = DIO_WRONGDIR;
 1a8:	85 e0       	ldi	r24, 0x05	; 5
 1aa:	08 95       	ret
#include "DIO_prv.h"



DIO_tenuErrorStatus DIO_enuWriteChannel(u8 Copy_u8ChannelId , u8 Copy_u8Level){
    DIO_tenuErrorStatus Local_u8Status = DIO_OK;
 1ac:	84 e0       	ldi	r24, 0x04	; 4
                /*DO NOTHING*/
            break;
        }   
    }  
    return Local_u8Status;
}
 1ae:	08 95       	ret

000001b0 <LCD_VoidSendDataBus>:
}


void LCD_Calculator_Init() {
    LCD_VoidInit();
    LCD_VoidClear();
 1b0:	cf 93       	push	r28
 1b2:	c8 2f       	mov	r28, r24
 1b4:	84 fb       	bst	r24, 4
 1b6:	66 27       	eor	r22, r22
 1b8:	60 f9       	bld	r22, 0
 1ba:	82 e0       	ldi	r24, 0x02	; 2
 1bc:	0e 94 41 00 	call	0x82	; 0x82 <DIO_enuWriteChannel>
 1c0:	c5 fb       	bst	r28, 5
 1c2:	66 27       	eor	r22, r22
 1c4:	60 f9       	bld	r22, 0
 1c6:	83 e0       	ldi	r24, 0x03	; 3
 1c8:	0e 94 41 00 	call	0x82	; 0x82 <DIO_enuWriteChannel>
 1cc:	c6 fb       	bst	r28, 6
 1ce:	66 27       	eor	r22, r22
 1d0:	60 f9       	bld	r22, 0
 1d2:	84 e0       	ldi	r24, 0x04	; 4
 1d4:	0e 94 41 00 	call	0x82	; 0x82 <DIO_enuWriteChannel>
 1d8:	6c 2f       	mov	r22, r28
 1da:	66 1f       	adc	r22, r22
 1dc:	66 27       	eor	r22, r22
 1de:	66 1f       	adc	r22, r22
 1e0:	85 e0       	ldi	r24, 0x05	; 5
 1e2:	0e 94 41 00 	call	0x82	; 0x82 <DIO_enuWriteChannel>
 1e6:	61 e0       	ldi	r22, 0x01	; 1
 1e8:	81 e0       	ldi	r24, 0x01	; 1
 1ea:	0e 94 41 00 	call	0x82	; 0x82 <DIO_enuWriteChannel>
 1ee:	82 e0       	ldi	r24, 0x02	; 2
 1f0:	8a 95       	dec	r24
 1f2:	f1 f7       	brne	.-4      	; 0x1f0 <LCD_VoidSendDataBus+0x40>
 1f4:	00 c0       	rjmp	.+0      	; 0x1f6 <LCD_VoidSendDataBus+0x46>
 1f6:	60 e0       	ldi	r22, 0x00	; 0
 1f8:	81 e0       	ldi	r24, 0x01	; 1
 1fa:	0e 94 41 00 	call	0x82	; 0x82 <DIO_enuWriteChannel>
 1fe:	8f e8       	ldi	r24, 0x8F	; 143
 200:	91 e0       	ldi	r25, 0x01	; 1
 202:	01 97       	sbiw	r24, 0x01	; 1
 204:	f1 f7       	brne	.-4      	; 0x202 <LCD_VoidSendDataBus+0x52>
 206:	00 c0       	rjmp	.+0      	; 0x208 <LCD_VoidSendDataBus+0x58>
 208:	00 00       	nop
 20a:	6c 2f       	mov	r22, r28
 20c:	61 70       	andi	r22, 0x01	; 1
 20e:	82 e0       	ldi	r24, 0x02	; 2
 210:	0e 94 41 00 	call	0x82	; 0x82 <DIO_enuWriteChannel>
 214:	c1 fb       	bst	r28, 1
 216:	66 27       	eor	r22, r22
 218:	60 f9       	bld	r22, 0
 21a:	83 e0       	ldi	r24, 0x03	; 3
 21c:	0e 94 41 00 	call	0x82	; 0x82 <DIO_enuWriteChannel>
 220:	c2 fb       	bst	r28, 2
 222:	66 27       	eor	r22, r22
 224:	60 f9       	bld	r22, 0
 226:	84 e0       	ldi	r24, 0x04	; 4
 228:	0e 94 41 00 	call	0x82	; 0x82 <DIO_enuWriteChannel>
 22c:	c3 fb       	bst	r28, 3
 22e:	66 27       	eor	r22, r22
 230:	60 f9       	bld	r22, 0
 232:	85 e0       	ldi	r24, 0x05	; 5
 234:	0e 94 41 00 	call	0x82	; 0x82 <DIO_enuWriteChannel>
 238:	61 e0       	ldi	r22, 0x01	; 1
 23a:	81 e0       	ldi	r24, 0x01	; 1
 23c:	0e 94 41 00 	call	0x82	; 0x82 <DIO_enuWriteChannel>
 240:	92 e0       	ldi	r25, 0x02	; 2
 242:	9a 95       	dec	r25
 244:	f1 f7       	brne	.-4      	; 0x242 <LCD_VoidSendDataBus+0x92>
 246:	00 c0       	rjmp	.+0      	; 0x248 <LCD_VoidSendDataBus+0x98>
 248:	60 e0       	ldi	r22, 0x00	; 0
 24a:	81 e0       	ldi	r24, 0x01	; 1
 24c:	0e 94 41 00 	call	0x82	; 0x82 <DIO_enuWriteChannel>
 250:	8f e8       	ldi	r24, 0x8F	; 143
 252:	91 e0       	ldi	r25, 0x01	; 1
 254:	01 97       	sbiw	r24, 0x01	; 1
 256:	f1 f7       	brne	.-4      	; 0x254 <LCD_VoidSendDataBus+0xa4>
 258:	00 c0       	rjmp	.+0      	; 0x25a <LCD_VoidSendDataBus+0xaa>
 25a:	00 00       	nop
 25c:	cf 91       	pop	r28
 25e:	08 95       	ret

00000260 <LCD_VoidInit>:
 260:	8f e3       	ldi	r24, 0x3F	; 63
 262:	9c e9       	ldi	r25, 0x9C	; 156
 264:	01 97       	sbiw	r24, 0x01	; 1
 266:	f1 f7       	brne	.-4      	; 0x264 <LCD_VoidInit+0x4>
 268:	00 c0       	rjmp	.+0      	; 0x26a <LCD_VoidInit+0xa>
 26a:	00 00       	nop
 26c:	60 e0       	ldi	r22, 0x00	; 0
 26e:	80 e0       	ldi	r24, 0x00	; 0
 270:	0e 94 41 00 	call	0x82	; 0x82 <DIO_enuWriteChannel>
 274:	82 e0       	ldi	r24, 0x02	; 2
 276:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <LCD_VoidSendDataBus>
 27a:	88 e2       	ldi	r24, 0x28	; 40
 27c:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <LCD_VoidSendDataBus>
 280:	8c e0       	ldi	r24, 0x0C	; 12
 282:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <LCD_VoidSendDataBus>
 286:	86 e0       	ldi	r24, 0x06	; 6
 288:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <LCD_VoidSendDataBus>
 28c:	81 e0       	ldi	r24, 0x01	; 1
 28e:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <LCD_VoidSendDataBus>
 292:	8f e9       	ldi	r24, 0x9F	; 159
 294:	9f e0       	ldi	r25, 0x0F	; 15
 296:	01 97       	sbiw	r24, 0x01	; 1
 298:	f1 f7       	brne	.-4      	; 0x296 <LCD_VoidInit+0x36>
 29a:	00 c0       	rjmp	.+0      	; 0x29c <LCD_VoidInit+0x3c>
 29c:	00 00       	nop
 29e:	08 95       	ret

000002a0 <LCD_VOidSendChar>:
 2a0:	cf 93       	push	r28
 2a2:	c8 2f       	mov	r28, r24
 2a4:	61 e0       	ldi	r22, 0x01	; 1
 2a6:	80 e0       	ldi	r24, 0x00	; 0
 2a8:	0e 94 41 00 	call	0x82	; 0x82 <DIO_enuWriteChannel>
 2ac:	8c 2f       	mov	r24, r28
 2ae:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <LCD_VoidSendDataBus>
 2b2:	cf 91       	pop	r28
 2b4:	08 95       	ret

000002b6 <LCD_VoidSendString>:
 2b6:	cf 92       	push	r12
 2b8:	df 92       	push	r13
 2ba:	ef 92       	push	r14
 2bc:	ff 92       	push	r15
 2be:	cf 93       	push	r28
 2c0:	df 93       	push	r29
 2c2:	ec 01       	movw	r28, r24
 2c4:	c1 2c       	mov	r12, r1
 2c6:	d1 2c       	mov	r13, r1
 2c8:	76 01       	movw	r14, r12
 2ca:	07 c0       	rjmp	.+14     	; 0x2da <LCD_VoidSendString+0x24>
 2cc:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
 2d0:	8f ef       	ldi	r24, 0xFF	; 255
 2d2:	c8 1a       	sub	r12, r24
 2d4:	d8 0a       	sbc	r13, r24
 2d6:	e8 0a       	sbc	r14, r24
 2d8:	f8 0a       	sbc	r15, r24
 2da:	fe 01       	movw	r30, r28
 2dc:	ec 0d       	add	r30, r12
 2de:	fd 1d       	adc	r31, r13
 2e0:	80 81       	ld	r24, Z
 2e2:	81 11       	cpse	r24, r1
 2e4:	f3 cf       	rjmp	.-26     	; 0x2cc <LCD_VoidSendString+0x16>
 2e6:	df 91       	pop	r29
 2e8:	cf 91       	pop	r28
 2ea:	ff 90       	pop	r15
 2ec:	ef 90       	pop	r14
 2ee:	df 90       	pop	r13
 2f0:	cf 90       	pop	r12
 2f2:	08 95       	ret

000002f4 <LCD_Goto_xy>:
 2f4:	cf 93       	push	r28
 2f6:	df 93       	push	r29
 2f8:	d8 2f       	mov	r29, r24
 2fa:	c6 2f       	mov	r28, r22
 2fc:	60 e0       	ldi	r22, 0x00	; 0
 2fe:	80 e0       	ldi	r24, 0x00	; 0
 300:	0e 94 41 00 	call	0x82	; 0x82 <DIO_enuWriteChannel>
 304:	8d 2f       	mov	r24, r29
 306:	8c 0f       	add	r24, r28
 308:	80 58       	subi	r24, 0x80	; 128
 30a:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <LCD_VoidSendDataBus>
 30e:	df 91       	pop	r29
 310:	cf 91       	pop	r28
 312:	08 95       	ret

00000314 <LCD_VoidClear>:
 314:	60 e0       	ldi	r22, 0x00	; 0
 316:	80 e0       	ldi	r24, 0x00	; 0
 318:	0e 94 41 00 	call	0x82	; 0x82 <DIO_enuWriteChannel>
 31c:	81 e0       	ldi	r24, 0x01	; 1
 31e:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <LCD_VoidSendDataBus>
 322:	8f e9       	ldi	r24, 0x9F	; 159
 324:	9f e0       	ldi	r25, 0x0F	; 15
 326:	01 97       	sbiw	r24, 0x01	; 1
 328:	f1 f7       	brne	.-4      	; 0x326 <LCD_VoidClear+0x12>
 32a:	00 c0       	rjmp	.+0      	; 0x32c <LCD_VoidClear+0x18>
 32c:	00 00       	nop
 32e:	80 e8       	ldi	r24, 0x80	; 128
 330:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <LCD_VoidSendDataBus>
 334:	08 95       	ret

00000336 <LCD_VoidCreateSpectialChar>:
}

void LCD_VoidCreateSpectialChar(u8 Copy_u8Index, pu8 Copy_u8Data)
 {
 336:	0f 93       	push	r16
 338:	1f 93       	push	r17
 33a:	cf 93       	push	r28
 33c:	8b 01       	movw	r16, r22

	Copy_u8Index *= 8;
 33e:	c8 2f       	mov	r28, r24
 340:	cc 0f       	add	r28, r28
 342:	cc 0f       	add	r28, r28
 344:	cc 0f       	add	r28, r28
    DIO_enuWriteChannel(LCD_PIN_RS, LCD_PIN_LOW);
 346:	60 e0       	ldi	r22, 0x00	; 0
 348:	80 e0       	ldi	r24, 0x00	; 0
 34a:	0e 94 41 00 	call	0x82	; 0x82 <DIO_enuWriteChannel>
    LCD_VoidSendDataBus(0x40+Copy_u8Index); // Send CGRAM address
 34e:	80 e4       	ldi	r24, 0x40	; 64
 350:	8c 0f       	add	r24, r28
 352:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <LCD_VoidSendDataBus>
    DIO_enuWriteChannel(LCD_PIN_RS, LCD_PIN_HIGH);
 356:	61 e0       	ldi	r22, 0x01	; 1
 358:	80 e0       	ldi	r24, 0x00	; 0
 35a:	0e 94 41 00 	call	0x82	; 0x82 <DIO_enuWriteChannel>
    for (u8 i = 0; i < 8; i++) {
 35e:	c0 e0       	ldi	r28, 0x00	; 0
 360:	07 c0       	rjmp	.+14     	; 0x370 <LCD_VoidCreateSpectialChar+0x3a>
        LCD_VoidSendDataBus(Copy_u8Data[i]);
 362:	f8 01       	movw	r30, r16
 364:	ec 0f       	add	r30, r28
 366:	f1 1d       	adc	r31, r1
 368:	80 81       	ld	r24, Z
 36a:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <LCD_VoidSendDataBus>

	Copy_u8Index *= 8;
    DIO_enuWriteChannel(LCD_PIN_RS, LCD_PIN_LOW);
    LCD_VoidSendDataBus(0x40+Copy_u8Index); // Send CGRAM address
    DIO_enuWriteChannel(LCD_PIN_RS, LCD_PIN_HIGH);
    for (u8 i = 0; i < 8; i++) {
 36e:	cf 5f       	subi	r28, 0xFF	; 255
 370:	c8 30       	cpi	r28, 0x08	; 8
 372:	b8 f3       	brcs	.-18     	; 0x362 <LCD_VoidCreateSpectialChar+0x2c>
        LCD_VoidSendDataBus(Copy_u8Data[i]);
    }
 374:	cf 91       	pop	r28
 376:	1f 91       	pop	r17
 378:	0f 91       	pop	r16
 37a:	08 95       	ret

0000037c <Runningboy_Init>:
  0b00100,
  0b00100
};

  void Runningboy_Init()
  {
 37c:	cf 93       	push	r28
 37e:	df 93       	push	r29
    u8 Loc_u8ROW=0;
    u8 Loc_u8COL=0;
    
    for(Loc_u8ROW=0;Loc_u8ROW<4;Loc_u8ROW++){  
 380:	d0 e0       	ldi	r29, 0x00	; 0
 382:	37 c0       	rjmp	.+110    	; 0x3f2 <Runningboy_Init+0x76>
        for(Loc_u8COL=0;Loc_u8COL<20;Loc_u8COL++){
        
             switch(Loc_u8ROW)
 384:	d1 30       	cpi	r29, 0x01	; 1
 386:	c1 f0       	breq	.+48     	; 0x3b8 <Runningboy_Init+0x3c>
 388:	28 f0       	brcs	.+10     	; 0x394 <Runningboy_Init+0x18>
 38a:	d2 30       	cpi	r29, 0x02	; 2
 38c:	e9 f0       	breq	.+58     	; 0x3c8 <Runningboy_Init+0x4c>
 38e:	d3 30       	cpi	r29, 0x03	; 3
 390:	19 f1       	breq	.+70     	; 0x3d8 <Runningboy_Init+0x5c>
 392:	29 c0       	rjmp	.+82     	; 0x3e6 <Runningboy_Init+0x6a>
             {
                case 0:
                if(Loc_u8COL==0)
 394:	c1 11       	cpse	r28, r1
 396:	08 c0       	rjmp	.+16     	; 0x3a8 <Runningboy_Init+0x2c>
                {
                    LCD_Goto_xy(LCD_ROW_0, Loc_u8COL);
 398:	6c 2f       	mov	r22, r28
 39a:	80 e0       	ldi	r24, 0x00	; 0
 39c:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                    LCD_VOidSendChar(0); 
 3a0:	80 e0       	ldi	r24, 0x00	; 0
 3a2:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
 3a6:	1f c0       	rjmp	.+62     	; 0x3e6 <Runningboy_Init+0x6a>
                }
                else
                {
                LCD_Goto_xy(LCD_ROW_0, Loc_u8COL);
 3a8:	6c 2f       	mov	r22, r28
 3aa:	80 e0       	ldi	r24, 0x00	; 0
 3ac:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(1);
 3b0:	81 e0       	ldi	r24, 0x01	; 1
 3b2:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
 3b6:	17 c0       	rjmp	.+46     	; 0x3e6 <Runningboy_Init+0x6a>
                
                }
                break ;
                case 1:
                LCD_Goto_xy(LCD_ROW_1, Loc_u8COL);
 3b8:	6c 2f       	mov	r22, r28
 3ba:	80 e4       	ldi	r24, 0x40	; 64
 3bc:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(1);
 3c0:	81 e0       	ldi	r24, 0x01	; 1
 3c2:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                
                break;
 3c6:	0f c0       	rjmp	.+30     	; 0x3e6 <Runningboy_Init+0x6a>
                case 2:
                LCD_Goto_xy(LCD_ROW_2, Loc_u8COL);
 3c8:	6c 2f       	mov	r22, r28
 3ca:	84 e1       	ldi	r24, 0x14	; 20
 3cc:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(1);
 3d0:	81 e0       	ldi	r24, 0x01	; 1
 3d2:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                
                break;
 3d6:	07 c0       	rjmp	.+14     	; 0x3e6 <Runningboy_Init+0x6a>
                case 3:
                LCD_Goto_xy(LCD_ROW_3, Loc_u8COL);
 3d8:	6c 2f       	mov	r22, r28
 3da:	84 e5       	ldi	r24, 0x54	; 84
 3dc:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(1);
 3e0:	81 e0       	ldi	r24, 0x01	; 1
 3e2:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
  {
    u8 Loc_u8ROW=0;
    u8 Loc_u8COL=0;
    
    for(Loc_u8ROW=0;Loc_u8ROW<4;Loc_u8ROW++){  
        for(Loc_u8COL=0;Loc_u8COL<20;Loc_u8COL++){
 3e6:	cf 5f       	subi	r28, 0xFF	; 255
 3e8:	01 c0       	rjmp	.+2      	; 0x3ec <Runningboy_Init+0x70>
 3ea:	c0 e0       	ldi	r28, 0x00	; 0
 3ec:	c4 31       	cpi	r28, 0x14	; 20
 3ee:	50 f2       	brcs	.-108    	; 0x384 <Runningboy_Init+0x8>
  void Runningboy_Init()
  {
    u8 Loc_u8ROW=0;
    u8 Loc_u8COL=0;
    
    for(Loc_u8ROW=0;Loc_u8ROW<4;Loc_u8ROW++){  
 3f0:	df 5f       	subi	r29, 0xFF	; 255
 3f2:	d4 30       	cpi	r29, 0x04	; 4
 3f4:	d0 f3       	brcs	.-12     	; 0x3ea <Runningboy_Init+0x6e>
             } 
        
        }    
        
    }
  }
 3f6:	df 91       	pop	r29
 3f8:	cf 91       	pop	r28
 3fa:	08 95       	ret

000003fc <Runningboy_First>:

void Runningboy_First()
  {
 3fc:	cf 93       	push	r28
 3fe:	df 93       	push	r29
    u8 Loc_u8ROW=0;
    u8 Loc_u8COL=0;
    
    for(Loc_u8ROW=0;Loc_u8ROW<4;Loc_u8ROW++){  
 400:	d0 e0       	ldi	r29, 0x00	; 0
 402:	d4 c0       	rjmp	.+424    	; 0x5ac <__EEPROM_REGION_LENGTH__+0x1ac>
        for(Loc_u8COL=0;Loc_u8COL<20;Loc_u8COL++){
        
             switch(Loc_u8ROW)
 404:	d1 30       	cpi	r29, 0x01	; 1
 406:	91 f1       	breq	.+100    	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
 408:	38 f0       	brcs	.+14     	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 40a:	d2 30       	cpi	r29, 0x02	; 2
 40c:	09 f4       	brne	.+2      	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 40e:	5f c0       	rjmp	.+190    	; 0x4ce <__EEPROM_REGION_LENGTH__+0xce>
 410:	d3 30       	cpi	r29, 0x03	; 3
 412:	09 f4       	brne	.+2      	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 414:	8d c0       	rjmp	.+282    	; 0x530 <__EEPROM_REGION_LENGTH__+0x130>
 416:	c3 c0       	rjmp	.+390    	; 0x59e <__EEPROM_REGION_LENGTH__+0x19e>
             {
                case 0:
                LCD_Goto_xy(LCD_ROW_0, Loc_u8COL-1);
 418:	6f ef       	ldi	r22, 0xFF	; 255
 41a:	6c 0f       	add	r22, r28
 41c:	80 e0       	ldi	r24, 0x00	; 0
 41e:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(1);               
 422:	81 e0       	ldi	r24, 0x01	; 1
 424:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                LCD_Goto_xy(LCD_ROW_0, Loc_u8COL);
 428:	6c 2f       	mov	r22, r28
 42a:	80 e0       	ldi	r24, 0x00	; 0
 42c:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(0);
 430:	80 e0       	ldi	r24, 0x00	; 0
 432:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                LCD_Goto_xy(LCD_ROW_0, Loc_u8COL+1);
 436:	61 e0       	ldi	r22, 0x01	; 1
 438:	6c 0f       	add	r22, r28
 43a:	80 e0       	ldi	r24, 0x00	; 0
 43c:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(1); 
 440:	81 e0       	ldi	r24, 0x01	; 1
 442:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                if(Loc_u8COL==19)
 446:	c3 31       	cpi	r28, 0x13	; 19
 448:	39 f4       	brne	.+14     	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
                {
                LCD_Goto_xy(LCD_ROW_0, 19);
 44a:	63 e1       	ldi	r22, 0x13	; 19
 44c:	80 e0       	ldi	r24, 0x00	; 0
 44e:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(0);
 452:	80 e0       	ldi	r24, 0x00	; 0
 454:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 458:	2f e7       	ldi	r18, 0x7F	; 127
 45a:	88 e3       	ldi	r24, 0x38	; 56
 45c:	91 e0       	ldi	r25, 0x01	; 1
 45e:	21 50       	subi	r18, 0x01	; 1
 460:	80 40       	sbci	r24, 0x00	; 0
 462:	90 40       	sbci	r25, 0x00	; 0
 464:	e1 f7       	brne	.-8      	; 0x45e <__EEPROM_REGION_LENGTH__+0x5e>
 466:	00 c0       	rjmp	.+0      	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
 468:	00 00       	nop
 46a:	99 c0       	rjmp	.+306    	; 0x59e <__EEPROM_REGION_LENGTH__+0x19e>
                }

                _delay_ms(50);
                break ;
                case 1:
                LCD_Goto_xy(LCD_ROW_0,19);
 46c:	63 e1       	ldi	r22, 0x13	; 19
 46e:	80 e0       	ldi	r24, 0x00	; 0
 470:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(1); 
 474:	81 e0       	ldi	r24, 0x01	; 1
 476:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                LCD_Goto_xy(LCD_ROW_1, Loc_u8COL-1);
 47a:	6f ef       	ldi	r22, 0xFF	; 255
 47c:	6c 0f       	add	r22, r28
 47e:	80 e4       	ldi	r24, 0x40	; 64
 480:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(1);               
 484:	81 e0       	ldi	r24, 0x01	; 1
 486:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                LCD_Goto_xy(LCD_ROW_1, Loc_u8COL);
 48a:	6c 2f       	mov	r22, r28
 48c:	80 e4       	ldi	r24, 0x40	; 64
 48e:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(0); 
 492:	80 e0       	ldi	r24, 0x00	; 0
 494:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                LCD_Goto_xy(LCD_ROW_1, Loc_u8COL+1);
 498:	61 e0       	ldi	r22, 0x01	; 1
 49a:	6c 0f       	add	r22, r28
 49c:	80 e4       	ldi	r24, 0x40	; 64
 49e:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(1);
 4a2:	81 e0       	ldi	r24, 0x01	; 1
 4a4:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                if(Loc_u8COL==19)
 4a8:	c3 31       	cpi	r28, 0x13	; 19
 4aa:	39 f4       	brne	.+14     	; 0x4ba <__EEPROM_REGION_LENGTH__+0xba>
                {
                LCD_Goto_xy(LCD_ROW_1, 19);
 4ac:	63 e1       	ldi	r22, 0x13	; 19
 4ae:	80 e4       	ldi	r24, 0x40	; 64
 4b0:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(0);
 4b4:	80 e0       	ldi	r24, 0x00	; 0
 4b6:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
 4ba:	2f e7       	ldi	r18, 0x7F	; 127
 4bc:	88 e3       	ldi	r24, 0x38	; 56
 4be:	91 e0       	ldi	r25, 0x01	; 1
 4c0:	21 50       	subi	r18, 0x01	; 1
 4c2:	80 40       	sbci	r24, 0x00	; 0
 4c4:	90 40       	sbci	r25, 0x00	; 0
 4c6:	e1 f7       	brne	.-8      	; 0x4c0 <__EEPROM_REGION_LENGTH__+0xc0>
 4c8:	00 c0       	rjmp	.+0      	; 0x4ca <__EEPROM_REGION_LENGTH__+0xca>
 4ca:	00 00       	nop
 4cc:	68 c0       	rjmp	.+208    	; 0x59e <__EEPROM_REGION_LENGTH__+0x19e>

                }
                _delay_ms(50);
                break;
                case 2:
                LCD_Goto_xy(LCD_ROW_1,19);
 4ce:	63 e1       	ldi	r22, 0x13	; 19
 4d0:	80 e4       	ldi	r24, 0x40	; 64
 4d2:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(1); 
 4d6:	81 e0       	ldi	r24, 0x01	; 1
 4d8:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                LCD_Goto_xy(LCD_ROW_2, Loc_u8COL-1);
 4dc:	6f ef       	ldi	r22, 0xFF	; 255
 4de:	6c 0f       	add	r22, r28
 4e0:	84 e1       	ldi	r24, 0x14	; 20
 4e2:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(1);               
 4e6:	81 e0       	ldi	r24, 0x01	; 1
 4e8:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                LCD_Goto_xy(LCD_ROW_2, Loc_u8COL);
 4ec:	6c 2f       	mov	r22, r28
 4ee:	84 e1       	ldi	r24, 0x14	; 20
 4f0:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(0); 
 4f4:	80 e0       	ldi	r24, 0x00	; 0
 4f6:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                LCD_Goto_xy(LCD_ROW_2, Loc_u8COL+1);
 4fa:	61 e0       	ldi	r22, 0x01	; 1
 4fc:	6c 0f       	add	r22, r28
 4fe:	84 e1       	ldi	r24, 0x14	; 20
 500:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(1);
 504:	81 e0       	ldi	r24, 0x01	; 1
 506:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                 if(Loc_u8COL==19)
 50a:	c3 31       	cpi	r28, 0x13	; 19
 50c:	39 f4       	brne	.+14     	; 0x51c <__EEPROM_REGION_LENGTH__+0x11c>
                {
                LCD_Goto_xy(LCD_ROW_2, 19);
 50e:	63 e1       	ldi	r22, 0x13	; 19
 510:	84 e1       	ldi	r24, 0x14	; 20
 512:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(0);
 516:	80 e0       	ldi	r24, 0x00	; 0
 518:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
 51c:	2f e7       	ldi	r18, 0x7F	; 127
 51e:	88 e3       	ldi	r24, 0x38	; 56
 520:	91 e0       	ldi	r25, 0x01	; 1
 522:	21 50       	subi	r18, 0x01	; 1
 524:	80 40       	sbci	r24, 0x00	; 0
 526:	90 40       	sbci	r25, 0x00	; 0
 528:	e1 f7       	brne	.-8      	; 0x522 <__EEPROM_REGION_LENGTH__+0x122>
 52a:	00 c0       	rjmp	.+0      	; 0x52c <__EEPROM_REGION_LENGTH__+0x12c>
 52c:	00 00       	nop
 52e:	37 c0       	rjmp	.+110    	; 0x59e <__EEPROM_REGION_LENGTH__+0x19e>

                } 
                _delay_ms(50);              
                break;
                case 3:
                LCD_Goto_xy(LCD_ROW_2,19);
 530:	63 e1       	ldi	r22, 0x13	; 19
 532:	84 e1       	ldi	r24, 0x14	; 20
 534:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(1); 
 538:	81 e0       	ldi	r24, 0x01	; 1
 53a:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                LCD_Goto_xy(LCD_ROW_3, Loc_u8COL-1);
 53e:	6f ef       	ldi	r22, 0xFF	; 255
 540:	6c 0f       	add	r22, r28
 542:	84 e5       	ldi	r24, 0x54	; 84
 544:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(1);               
 548:	81 e0       	ldi	r24, 0x01	; 1
 54a:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                LCD_Goto_xy(LCD_ROW_3, Loc_u8COL);
 54e:	6c 2f       	mov	r22, r28
 550:	84 e5       	ldi	r24, 0x54	; 84
 552:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(0); 
 556:	80 e0       	ldi	r24, 0x00	; 0
 558:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                LCD_Goto_xy(LCD_ROW_3, Loc_u8COL+1);
 55c:	61 e0       	ldi	r22, 0x01	; 1
 55e:	6c 0f       	add	r22, r28
 560:	84 e5       	ldi	r24, 0x54	; 84
 562:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(1);
 566:	81 e0       	ldi	r24, 0x01	; 1
 568:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                if(Loc_u8COL==19)
 56c:	c3 31       	cpi	r28, 0x13	; 19
 56e:	71 f4       	brne	.+28     	; 0x58c <__EEPROM_REGION_LENGTH__+0x18c>
                {
                LCD_Goto_xy(LCD_ROW_3, 19);
 570:	63 e1       	ldi	r22, 0x13	; 19
 572:	84 e5       	ldi	r24, 0x54	; 84
 574:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(0);
 578:	80 e0       	ldi	r24, 0x00	; 0
 57a:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                LCD_Goto_xy(LCD_ROW_3,19);
 57e:	63 e1       	ldi	r22, 0x13	; 19
 580:	84 e5       	ldi	r24, 0x54	; 84
 582:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(1); 
 586:	81 e0       	ldi	r24, 0x01	; 1
 588:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
 58c:	2f e7       	ldi	r18, 0x7F	; 127
 58e:	88 e3       	ldi	r24, 0x38	; 56
 590:	91 e0       	ldi	r25, 0x01	; 1
 592:	21 50       	subi	r18, 0x01	; 1
 594:	80 40       	sbci	r24, 0x00	; 0
 596:	90 40       	sbci	r25, 0x00	; 0
 598:	e1 f7       	brne	.-8      	; 0x592 <__EEPROM_REGION_LENGTH__+0x192>
 59a:	00 c0       	rjmp	.+0      	; 0x59c <__EEPROM_REGION_LENGTH__+0x19c>
 59c:	00 00       	nop
  {
    u8 Loc_u8ROW=0;
    u8 Loc_u8COL=0;
    
    for(Loc_u8ROW=0;Loc_u8ROW<4;Loc_u8ROW++){  
        for(Loc_u8COL=0;Loc_u8COL<20;Loc_u8COL++){
 59e:	cf 5f       	subi	r28, 0xFF	; 255
 5a0:	01 c0       	rjmp	.+2      	; 0x5a4 <__EEPROM_REGION_LENGTH__+0x1a4>
 5a2:	c0 e0       	ldi	r28, 0x00	; 0
 5a4:	c4 31       	cpi	r28, 0x14	; 20
 5a6:	08 f4       	brcc	.+2      	; 0x5aa <__EEPROM_REGION_LENGTH__+0x1aa>
 5a8:	2d cf       	rjmp	.-422    	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
void Runningboy_First()
  {
    u8 Loc_u8ROW=0;
    u8 Loc_u8COL=0;
    
    for(Loc_u8ROW=0;Loc_u8ROW<4;Loc_u8ROW++){  
 5aa:	df 5f       	subi	r29, 0xFF	; 255
 5ac:	d4 30       	cpi	r29, 0x04	; 4
 5ae:	c8 f3       	brcs	.-14     	; 0x5a2 <__EEPROM_REGION_LENGTH__+0x1a2>
             } 
        
        }    
        
    }
    LCD_Goto_xy(LCD_ROW_3, 19);
 5b0:	63 e1       	ldi	r22, 0x13	; 19
 5b2:	84 e5       	ldi	r24, 0x54	; 84
 5b4:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
    LCD_VOidSendChar(0); 
 5b8:	80 e0       	ldi	r24, 0x00	; 0
 5ba:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
 5be:	2f e7       	ldi	r18, 0x7F	; 127
 5c0:	88 e3       	ldi	r24, 0x38	; 56
 5c2:	91 e0       	ldi	r25, 0x01	; 1
 5c4:	21 50       	subi	r18, 0x01	; 1
 5c6:	80 40       	sbci	r24, 0x00	; 0
 5c8:	90 40       	sbci	r25, 0x00	; 0
 5ca:	e1 f7       	brne	.-8      	; 0x5c4 <__EEPROM_REGION_LENGTH__+0x1c4>
 5cc:	00 c0       	rjmp	.+0      	; 0x5ce <__EEPROM_REGION_LENGTH__+0x1ce>
 5ce:	00 00       	nop
    _delay_ms(50);
    LCD_Goto_xy(LCD_ROW_3, 19);
 5d0:	63 e1       	ldi	r22, 0x13	; 19
 5d2:	84 e5       	ldi	r24, 0x54	; 84
 5d4:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
    LCD_VOidSendChar(1);
 5d8:	81 e0       	ldi	r24, 0x01	; 1
 5da:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
  }
 5de:	df 91       	pop	r29
 5e0:	cf 91       	pop	r28
 5e2:	08 95       	ret

000005e4 <Runningboy_Second>:
void Runningboy_Second()
  {
 5e4:	cf 93       	push	r28
    LCD_Goto_xy(LCD_ROW_0,13);
 5e6:	6d e0       	ldi	r22, 0x0D	; 13
 5e8:	80 e0       	ldi	r24, 0x00	; 0
 5ea:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
    LCD_VOidSendChar(' ');
 5ee:	80 e2       	ldi	r24, 0x20	; 32
 5f0:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
   
    u8 Loc_u8COL=0;
        for(Loc_u8COL=0;Loc_u8COL<20;Loc_u8COL++){
 5f4:	c0 e0       	ldi	r28, 0x00	; 0
 5f6:	80 c0       	rjmp	.+256    	; 0x6f8 <Runningboy_Second+0x114>
                if(Loc_u8COL<13)
 5f8:	cd 30       	cpi	r28, 0x0D	; 13
 5fa:	18 f5       	brcc	.+70     	; 0x642 <Runningboy_Second+0x5e>
                {
                LCD_Goto_xy(LCD_ROW_0, Loc_u8COL-1);
 5fc:	6f ef       	ldi	r22, 0xFF	; 255
 5fe:	6c 0f       	add	r22, r28
 600:	80 e0       	ldi	r24, 0x00	; 0
 602:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(1);               
 606:	81 e0       	ldi	r24, 0x01	; 1
 608:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                LCD_Goto_xy(LCD_ROW_0, Loc_u8COL);
 60c:	6c 2f       	mov	r22, r28
 60e:	80 e0       	ldi	r24, 0x00	; 0
 610:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(0);
 614:	80 e0       	ldi	r24, 0x00	; 0
 616:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                if(Loc_u8COL!=12)
 61a:	cc 30       	cpi	r28, 0x0C	; 12
 61c:	41 f0       	breq	.+16     	; 0x62e <Runningboy_Second+0x4a>
                {
                    LCD_Goto_xy(LCD_ROW_0, Loc_u8COL+1);
 61e:	61 e0       	ldi	r22, 0x01	; 1
 620:	6c 0f       	add	r22, r28
 622:	80 e0       	ldi	r24, 0x00	; 0
 624:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                    LCD_VOidSendChar(1); 
 628:	81 e0       	ldi	r24, 0x01	; 1
 62a:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
 62e:	2f e7       	ldi	r18, 0x7F	; 127
 630:	88 e3       	ldi	r24, 0x38	; 56
 632:	91 e0       	ldi	r25, 0x01	; 1
 634:	21 50       	subi	r18, 0x01	; 1
 636:	80 40       	sbci	r24, 0x00	; 0
 638:	90 40       	sbci	r25, 0x00	; 0
 63a:	e1 f7       	brne	.-8      	; 0x634 <Runningboy_Second+0x50>
 63c:	00 c0       	rjmp	.+0      	; 0x63e <Runningboy_Second+0x5a>
 63e:	00 00       	nop
 640:	5a c0       	rjmp	.+180    	; 0x6f6 <Runningboy_Second+0x112>
                }

                _delay_ms(50);                    
                }  
                else if(Loc_u8COL==13)
 642:	cd 30       	cpi	r28, 0x0D	; 13
 644:	c1 f5       	brne	.+112    	; 0x6b6 <Runningboy_Second+0xd2>
                {
                LCD_Goto_xy(LCD_ROW_0, 12);
 646:	6c e0       	ldi	r22, 0x0C	; 12
 648:	80 e0       	ldi	r24, 0x00	; 0
 64a:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(1); 
 64e:	81 e0       	ldi	r24, 0x01	; 1
 650:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                LCD_Goto_xy(LCD_ROW_0, 13);
 654:	6d e0       	ldi	r22, 0x0D	; 13
 656:	80 e0       	ldi	r24, 0x00	; 0
 658:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(0);
 65c:	80 e0       	ldi	r24, 0x00	; 0
 65e:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
 662:	2f e7       	ldi	r18, 0x7F	; 127
 664:	88 e3       	ldi	r24, 0x38	; 56
 666:	91 e0       	ldi	r25, 0x01	; 1
 668:	21 50       	subi	r18, 0x01	; 1
 66a:	80 40       	sbci	r24, 0x00	; 0
 66c:	90 40       	sbci	r25, 0x00	; 0
 66e:	e1 f7       	brne	.-8      	; 0x668 <Runningboy_Second+0x84>
 670:	00 c0       	rjmp	.+0      	; 0x672 <Runningboy_Second+0x8e>
 672:	00 00       	nop
                _delay_ms(50); 
                LCD_Goto_xy(LCD_ROW_0,13);
 674:	6d e0       	ldi	r22, 0x0D	; 13
 676:	80 e0       	ldi	r24, 0x00	; 0
 678:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(' ');
 67c:	80 e2       	ldi	r24, 0x20	; 32
 67e:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
 682:	2f e7       	ldi	r18, 0x7F	; 127
 684:	88 e3       	ldi	r24, 0x38	; 56
 686:	91 e0       	ldi	r25, 0x01	; 1
 688:	21 50       	subi	r18, 0x01	; 1
 68a:	80 40       	sbci	r24, 0x00	; 0
 68c:	90 40       	sbci	r25, 0x00	; 0
 68e:	e1 f7       	brne	.-8      	; 0x688 <Runningboy_Second+0xa4>
 690:	00 c0       	rjmp	.+0      	; 0x692 <Runningboy_Second+0xae>
 692:	00 00       	nop
                _delay_ms(50);
                LCD_Goto_xy(LCD_ROW_1, 13);
 694:	6d e0       	ldi	r22, 0x0D	; 13
 696:	80 e4       	ldi	r24, 0x40	; 64
 698:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(0);               
 69c:	80 e0       	ldi	r24, 0x00	; 0
 69e:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
 6a2:	2f e7       	ldi	r18, 0x7F	; 127
 6a4:	88 e3       	ldi	r24, 0x38	; 56
 6a6:	91 e0       	ldi	r25, 0x01	; 1
 6a8:	21 50       	subi	r18, 0x01	; 1
 6aa:	80 40       	sbci	r24, 0x00	; 0
 6ac:	90 40       	sbci	r25, 0x00	; 0
 6ae:	e1 f7       	brne	.-8      	; 0x6a8 <Runningboy_Second+0xc4>
 6b0:	00 c0       	rjmp	.+0      	; 0x6b2 <Runningboy_Second+0xce>
 6b2:	00 00       	nop
 6b4:	20 c0       	rjmp	.+64     	; 0x6f6 <Runningboy_Second+0x112>
                
                }
                else
                {
   
                LCD_Goto_xy(LCD_ROW_1, Loc_u8COL-2);
 6b6:	6e ef       	ldi	r22, 0xFE	; 254
 6b8:	6c 0f       	add	r22, r28
 6ba:	80 e4       	ldi	r24, 0x40	; 64
 6bc:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(1);               
 6c0:	81 e0       	ldi	r24, 0x01	; 1
 6c2:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                LCD_Goto_xy(LCD_ROW_1, Loc_u8COL-1);
 6c6:	6f ef       	ldi	r22, 0xFF	; 255
 6c8:	6c 0f       	add	r22, r28
 6ca:	80 e4       	ldi	r24, 0x40	; 64
 6cc:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(0); 
 6d0:	80 e0       	ldi	r24, 0x00	; 0
 6d2:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                LCD_Goto_xy(LCD_ROW_1, Loc_u8COL);
 6d6:	6c 2f       	mov	r22, r28
 6d8:	80 e4       	ldi	r24, 0x40	; 64
 6da:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(1);   
 6de:	81 e0       	ldi	r24, 0x01	; 1
 6e0:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
 6e4:	2f e7       	ldi	r18, 0x7F	; 127
 6e6:	88 e3       	ldi	r24, 0x38	; 56
 6e8:	91 e0       	ldi	r25, 0x01	; 1
 6ea:	21 50       	subi	r18, 0x01	; 1
 6ec:	80 40       	sbci	r24, 0x00	; 0
 6ee:	90 40       	sbci	r25, 0x00	; 0
 6f0:	e1 f7       	brne	.-8      	; 0x6ea <Runningboy_Second+0x106>
 6f2:	00 c0       	rjmp	.+0      	; 0x6f4 <Runningboy_Second+0x110>
 6f4:	00 00       	nop
  {
    LCD_Goto_xy(LCD_ROW_0,13);
    LCD_VOidSendChar(' ');
   
    u8 Loc_u8COL=0;
        for(Loc_u8COL=0;Loc_u8COL<20;Loc_u8COL++){
 6f6:	cf 5f       	subi	r28, 0xFF	; 255
 6f8:	c4 31       	cpi	r28, 0x14	; 20
 6fa:	08 f4       	brcc	.+2      	; 0x6fe <Runningboy_Second+0x11a>
 6fc:	7d cf       	rjmp	.-262    	; 0x5f8 <Runningboy_Second+0x14>
                _delay_ms(50);

                }

             } 
    LCD_Goto_xy(LCD_ROW_1, 18);
 6fe:	62 e1       	ldi	r22, 0x12	; 18
 700:	80 e4       	ldi	r24, 0x40	; 64
 702:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
    LCD_VOidSendChar(0); 
 706:	80 e0       	ldi	r24, 0x00	; 0
 708:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
    LCD_Goto_xy(LCD_ROW_1, 18);
 70c:	62 e1       	ldi	r22, 0x12	; 18
 70e:	80 e4       	ldi	r24, 0x40	; 64
 710:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
    LCD_VOidSendChar(1);
 714:	81 e0       	ldi	r24, 0x01	; 1
 716:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
    LCD_Goto_xy(LCD_ROW_1, 19);
 71a:	63 e1       	ldi	r22, 0x13	; 19
 71c:	80 e4       	ldi	r24, 0x40	; 64
 71e:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
    LCD_VOidSendChar(0); 
 722:	80 e0       	ldi	r24, 0x00	; 0
 724:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
    LCD_Goto_xy(LCD_ROW_1, 19);
 728:	63 e1       	ldi	r22, 0x13	; 19
 72a:	80 e4       	ldi	r24, 0x40	; 64
 72c:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
    LCD_VOidSendChar(1); 
 730:	81 e0       	ldi	r24, 0x01	; 1
 732:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>

  
  }
 736:	cf 91       	pop	r28
 738:	08 95       	ret

0000073a <Runningboy_Third>:

void Runningboy_Third()
{
 73a:	cf 93       	push	r28
    LCD_Goto_xy(LCD_ROW_1,13);
 73c:	6d e0       	ldi	r22, 0x0D	; 13
 73e:	80 e4       	ldi	r24, 0x40	; 64
 740:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
    LCD_VOidSendChar(2);
 744:	82 e0       	ldi	r24, 0x02	; 2
 746:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
    LCD_Goto_xy(LCD_ROW_0,13);
 74a:	6d e0       	ldi	r22, 0x0D	; 13
 74c:	80 e0       	ldi	r24, 0x00	; 0
 74e:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
    LCD_VOidSendChar(' ');
 752:	80 e2       	ldi	r24, 0x20	; 32
 754:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
    
    u8 Loc_u8COL=0;
        for(Loc_u8COL=0;Loc_u8COL<20;Loc_u8COL++){
 758:	c0 e0       	ldi	r28, 0x00	; 0
 75a:	98 c0       	rjmp	.+304    	; 0x88c <__stack+0x2d>
                if(Loc_u8COL<13)
 75c:	cd 30       	cpi	r28, 0x0D	; 13
 75e:	18 f5       	brcc	.+70     	; 0x7a6 <Runningboy_Third+0x6c>
                {
                LCD_Goto_xy(LCD_ROW_1, Loc_u8COL-1);
 760:	6f ef       	ldi	r22, 0xFF	; 255
 762:	6c 0f       	add	r22, r28
 764:	80 e4       	ldi	r24, 0x40	; 64
 766:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(1);               
 76a:	81 e0       	ldi	r24, 0x01	; 1
 76c:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                LCD_Goto_xy(LCD_ROW_1, Loc_u8COL);
 770:	6c 2f       	mov	r22, r28
 772:	80 e4       	ldi	r24, 0x40	; 64
 774:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(0);
 778:	80 e0       	ldi	r24, 0x00	; 0
 77a:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                if(Loc_u8COL!=12)
 77e:	cc 30       	cpi	r28, 0x0C	; 12
 780:	41 f0       	breq	.+16     	; 0x792 <Runningboy_Third+0x58>
                {
                    LCD_Goto_xy(LCD_ROW_1, Loc_u8COL+1);
 782:	61 e0       	ldi	r22, 0x01	; 1
 784:	6c 0f       	add	r22, r28
 786:	80 e4       	ldi	r24, 0x40	; 64
 788:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                    LCD_VOidSendChar(1); 
 78c:	81 e0       	ldi	r24, 0x01	; 1
 78e:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
 792:	2f e7       	ldi	r18, 0x7F	; 127
 794:	88 e3       	ldi	r24, 0x38	; 56
 796:	91 e0       	ldi	r25, 0x01	; 1
 798:	21 50       	subi	r18, 0x01	; 1
 79a:	80 40       	sbci	r24, 0x00	; 0
 79c:	90 40       	sbci	r25, 0x00	; 0
 79e:	e1 f7       	brne	.-8      	; 0x798 <Runningboy_Third+0x5e>
 7a0:	00 c0       	rjmp	.+0      	; 0x7a2 <Runningboy_Third+0x68>
 7a2:	00 00       	nop
 7a4:	72 c0       	rjmp	.+228    	; 0x88a <__stack+0x2b>
                }

                _delay_ms(50);                    
                }  
                else if(Loc_u8COL==13)
 7a6:	cd 30       	cpi	r28, 0x0D	; 13
 7a8:	09 f0       	breq	.+2      	; 0x7ac <Runningboy_Third+0x72>
 7aa:	48 c0       	rjmp	.+144    	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
                {
                LCD_Goto_xy(LCD_ROW_1, 12);
 7ac:	6c e0       	ldi	r22, 0x0C	; 12
 7ae:	80 e4       	ldi	r24, 0x40	; 64
 7b0:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(1); 
 7b4:	81 e0       	ldi	r24, 0x01	; 1
 7b6:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                LCD_Goto_xy(LCD_ROW_1, 13);
 7ba:	6d e0       	ldi	r22, 0x0D	; 13
 7bc:	80 e4       	ldi	r24, 0x40	; 64
 7be:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(0);
 7c2:	80 e0       	ldi	r24, 0x00	; 0
 7c4:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
 7c8:	2f e7       	ldi	r18, 0x7F	; 127
 7ca:	88 e3       	ldi	r24, 0x38	; 56
 7cc:	91 e0       	ldi	r25, 0x01	; 1
 7ce:	21 50       	subi	r18, 0x01	; 1
 7d0:	80 40       	sbci	r24, 0x00	; 0
 7d2:	90 40       	sbci	r25, 0x00	; 0
 7d4:	e1 f7       	brne	.-8      	; 0x7ce <Runningboy_Third+0x94>
 7d6:	00 c0       	rjmp	.+0      	; 0x7d8 <Runningboy_Third+0x9e>
 7d8:	00 00       	nop
                _delay_ms(50); 
                LCD_Goto_xy(LCD_ROW_1,13);
 7da:	6d e0       	ldi	r22, 0x0D	; 13
 7dc:	80 e4       	ldi	r24, 0x40	; 64
 7de:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(2);
 7e2:	82 e0       	ldi	r24, 0x02	; 2
 7e4:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
 7e8:	2f e7       	ldi	r18, 0x7F	; 127
 7ea:	88 e3       	ldi	r24, 0x38	; 56
 7ec:	91 e0       	ldi	r25, 0x01	; 1
 7ee:	21 50       	subi	r18, 0x01	; 1
 7f0:	80 40       	sbci	r24, 0x00	; 0
 7f2:	90 40       	sbci	r25, 0x00	; 0
 7f4:	e1 f7       	brne	.-8      	; 0x7ee <Runningboy_Third+0xb4>
 7f6:	00 c0       	rjmp	.+0      	; 0x7f8 <Runningboy_Third+0xbe>
 7f8:	00 00       	nop
                _delay_ms(50);
                LCD_Goto_xy(LCD_ROW_0,13);
 7fa:	6d e0       	ldi	r22, 0x0D	; 13
 7fc:	80 e0       	ldi	r24, 0x00	; 0
 7fe:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(' ');
 802:	80 e2       	ldi	r24, 0x20	; 32
 804:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
 808:	2f e7       	ldi	r18, 0x7F	; 127
 80a:	88 e3       	ldi	r24, 0x38	; 56
 80c:	91 e0       	ldi	r25, 0x01	; 1
 80e:	21 50       	subi	r18, 0x01	; 1
 810:	80 40       	sbci	r24, 0x00	; 0
 812:	90 40       	sbci	r25, 0x00	; 0
 814:	e1 f7       	brne	.-8      	; 0x80e <__DATA_REGION_LENGTH__+0xe>
 816:	00 c0       	rjmp	.+0      	; 0x818 <__DATA_REGION_LENGTH__+0x18>
 818:	00 00       	nop
                _delay_ms(50);
                LCD_Goto_xy(LCD_ROW_0, 13);
 81a:	6d e0       	ldi	r22, 0x0D	; 13
 81c:	80 e0       	ldi	r24, 0x00	; 0
 81e:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(0);               
 822:	80 e0       	ldi	r24, 0x00	; 0
 824:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
 828:	2f e7       	ldi	r18, 0x7F	; 127
 82a:	88 e3       	ldi	r24, 0x38	; 56
 82c:	91 e0       	ldi	r25, 0x01	; 1
 82e:	21 50       	subi	r18, 0x01	; 1
 830:	80 40       	sbci	r24, 0x00	; 0
 832:	90 40       	sbci	r25, 0x00	; 0
 834:	e1 f7       	brne	.-8      	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
 836:	00 c0       	rjmp	.+0      	; 0x838 <__DATA_REGION_LENGTH__+0x38>
 838:	00 00       	nop
 83a:	27 c0       	rjmp	.+78     	; 0x88a <__stack+0x2b>
                _delay_ms(50);
                
                }
                else
                {
                LCD_Goto_xy(LCD_ROW_0,13);
 83c:	6d e0       	ldi	r22, 0x0D	; 13
 83e:	80 e0       	ldi	r24, 0x00	; 0
 840:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(' ');
 844:	80 e2       	ldi	r24, 0x20	; 32
 846:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                LCD_Goto_xy(LCD_ROW_0, Loc_u8COL-2);
 84a:	6e ef       	ldi	r22, 0xFE	; 254
 84c:	6c 0f       	add	r22, r28
 84e:	80 e0       	ldi	r24, 0x00	; 0
 850:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(1);               
 854:	81 e0       	ldi	r24, 0x01	; 1
 856:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                LCD_Goto_xy(LCD_ROW_0, Loc_u8COL-1);
 85a:	6f ef       	ldi	r22, 0xFF	; 255
 85c:	6c 0f       	add	r22, r28
 85e:	80 e0       	ldi	r24, 0x00	; 0
 860:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(0); 
 864:	80 e0       	ldi	r24, 0x00	; 0
 866:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                LCD_Goto_xy(LCD_ROW_0, Loc_u8COL);
 86a:	6c 2f       	mov	r22, r28
 86c:	80 e0       	ldi	r24, 0x00	; 0
 86e:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(1);   
 872:	81 e0       	ldi	r24, 0x01	; 1
 874:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
 878:	2f e7       	ldi	r18, 0x7F	; 127
 87a:	88 e3       	ldi	r24, 0x38	; 56
 87c:	91 e0       	ldi	r25, 0x01	; 1
 87e:	21 50       	subi	r18, 0x01	; 1
 880:	80 40       	sbci	r24, 0x00	; 0
 882:	90 40       	sbci	r25, 0x00	; 0
 884:	e1 f7       	brne	.-8      	; 0x87e <__stack+0x1f>
 886:	00 c0       	rjmp	.+0      	; 0x888 <__stack+0x29>
 888:	00 00       	nop
    LCD_VOidSendChar(2);
    LCD_Goto_xy(LCD_ROW_0,13);
    LCD_VOidSendChar(' ');
    
    u8 Loc_u8COL=0;
        for(Loc_u8COL=0;Loc_u8COL<20;Loc_u8COL++){
 88a:	cf 5f       	subi	r28, 0xFF	; 255
 88c:	c4 31       	cpi	r28, 0x14	; 20
 88e:	08 f4       	brcc	.+2      	; 0x892 <__stack+0x33>
 890:	65 cf       	rjmp	.-310    	; 0x75c <Runningboy_Third+0x22>

                }

             } 

    LCD_Goto_xy(LCD_ROW_0, 18);
 892:	62 e1       	ldi	r22, 0x12	; 18
 894:	80 e0       	ldi	r24, 0x00	; 0
 896:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
    LCD_VOidSendChar(0); 
 89a:	80 e0       	ldi	r24, 0x00	; 0
 89c:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
    LCD_Goto_xy(LCD_ROW_0, 18);
 8a0:	62 e1       	ldi	r22, 0x12	; 18
 8a2:	80 e0       	ldi	r24, 0x00	; 0
 8a4:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
    LCD_VOidSendChar(1);
 8a8:	81 e0       	ldi	r24, 0x01	; 1
 8aa:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
    LCD_Goto_xy(LCD_ROW_0, 19);
 8ae:	63 e1       	ldi	r22, 0x13	; 19
 8b0:	80 e0       	ldi	r24, 0x00	; 0
 8b2:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
    LCD_VOidSendChar(0); 
 8b6:	80 e0       	ldi	r24, 0x00	; 0
 8b8:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
    LCD_Goto_xy(LCD_ROW_0, 19);
 8bc:	63 e1       	ldi	r22, 0x13	; 19
 8be:	80 e0       	ldi	r24, 0x00	; 0
 8c0:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
    LCD_VOidSendChar(1); 
 8c4:	81 e0       	ldi	r24, 0x01	; 1
 8c6:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
}
 8ca:	cf 91       	pop	r28
 8cc:	08 95       	ret

000008ce <Runningboy_Fourth>:


void Runningboy_Fourth()
  {
 8ce:	cf 93       	push	r28
 8d0:	df 93       	push	r29
    LCD_Goto_xy(LCD_ROW_1,13);
 8d2:	6d e0       	ldi	r22, 0x0D	; 13
 8d4:	80 e4       	ldi	r24, 0x40	; 64
 8d6:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
    LCD_VOidSendChar(1);
 8da:	81 e0       	ldi	r24, 0x01	; 1
 8dc:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
    LCD_Goto_xy(LCD_ROW_0,13);
 8e0:	6d e0       	ldi	r22, 0x0D	; 13
 8e2:	80 e0       	ldi	r24, 0x00	; 0
 8e4:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
    LCD_VOidSendChar(1);
 8e8:	81 e0       	ldi	r24, 0x01	; 1
 8ea:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
    LCD_Goto_xy(LCD_ROW_1,10);
 8ee:	6a e0       	ldi	r22, 0x0A	; 10
 8f0:	80 e4       	ldi	r24, 0x40	; 64
 8f2:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
    LCD_VOidSendChar(3);
 8f6:	83 e0       	ldi	r24, 0x03	; 3
 8f8:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
    u8 Loc_u8ROW=0;
    u8 Loc_u8COL=0;
    
    for(Loc_u8ROW=0;Loc_u8ROW<=1;Loc_u8ROW++){  
 8fc:	d0 e0       	ldi	r29, 0x00	; 0
 8fe:	5f c0       	rjmp	.+190    	; 0x9be <Runningboy_Fourth+0xf0>
        for(Loc_u8COL=0;Loc_u8COL<20;Loc_u8COL++){
        
             switch(Loc_u8ROW)
 900:	dd 23       	and	r29, r29
 902:	19 f0       	breq	.+6      	; 0x90a <Runningboy_Fourth+0x3c>
 904:	d1 30       	cpi	r29, 0x01	; 1
 906:	59 f1       	breq	.+86     	; 0x95e <Runningboy_Fourth+0x90>
 908:	53 c0       	rjmp	.+166    	; 0x9b0 <Runningboy_Fourth+0xe2>
             {
                case 0:
                LCD_Goto_xy(LCD_ROW_0, Loc_u8COL-1);
 90a:	6f ef       	ldi	r22, 0xFF	; 255
 90c:	6c 0f       	add	r22, r28
 90e:	80 e0       	ldi	r24, 0x00	; 0
 910:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(1);               
 914:	81 e0       	ldi	r24, 0x01	; 1
 916:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                LCD_Goto_xy(LCD_ROW_0, Loc_u8COL);
 91a:	6c 2f       	mov	r22, r28
 91c:	80 e0       	ldi	r24, 0x00	; 0
 91e:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(0);
 922:	80 e0       	ldi	r24, 0x00	; 0
 924:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                LCD_Goto_xy(LCD_ROW_0, Loc_u8COL+1);
 928:	61 e0       	ldi	r22, 0x01	; 1
 92a:	6c 0f       	add	r22, r28
 92c:	80 e0       	ldi	r24, 0x00	; 0
 92e:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(1); 
 932:	81 e0       	ldi	r24, 0x01	; 1
 934:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                if(Loc_u8COL==19)
 938:	c3 31       	cpi	r28, 0x13	; 19
 93a:	39 f4       	brne	.+14     	; 0x94a <Runningboy_Fourth+0x7c>
                {
                LCD_Goto_xy(LCD_ROW_0, 19);
 93c:	63 e1       	ldi	r22, 0x13	; 19
 93e:	80 e0       	ldi	r24, 0x00	; 0
 940:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(0);
 944:	80 e0       	ldi	r24, 0x00	; 0
 946:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
 94a:	2f e7       	ldi	r18, 0x7F	; 127
 94c:	88 e3       	ldi	r24, 0x38	; 56
 94e:	91 e0       	ldi	r25, 0x01	; 1
 950:	21 50       	subi	r18, 0x01	; 1
 952:	80 40       	sbci	r24, 0x00	; 0
 954:	90 40       	sbci	r25, 0x00	; 0
 956:	e1 f7       	brne	.-8      	; 0x950 <Runningboy_Fourth+0x82>
 958:	00 c0       	rjmp	.+0      	; 0x95a <Runningboy_Fourth+0x8c>
 95a:	00 00       	nop
 95c:	29 c0       	rjmp	.+82     	; 0x9b0 <Runningboy_Fourth+0xe2>

                _delay_ms(50);
                break ;
                case 1:

                if(Loc_u8COL<10)
 95e:	ca 30       	cpi	r28, 0x0A	; 10
 960:	38 f5       	brcc	.+78     	; 0x9b0 <Runningboy_Fourth+0xe2>
                {
                LCD_Goto_xy(LCD_ROW_0,19);
 962:	63 e1       	ldi	r22, 0x13	; 19
 964:	80 e0       	ldi	r24, 0x00	; 0
 966:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(1); 
 96a:	81 e0       	ldi	r24, 0x01	; 1
 96c:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                LCD_Goto_xy(LCD_ROW_1, Loc_u8COL-1);
 970:	6f ef       	ldi	r22, 0xFF	; 255
 972:	6c 0f       	add	r22, r28
 974:	80 e4       	ldi	r24, 0x40	; 64
 976:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(1);               
 97a:	81 e0       	ldi	r24, 0x01	; 1
 97c:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                LCD_Goto_xy(LCD_ROW_1, Loc_u8COL);
 980:	6c 2f       	mov	r22, r28
 982:	80 e4       	ldi	r24, 0x40	; 64
 984:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(0); 
 988:	80 e0       	ldi	r24, 0x00	; 0
 98a:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
                LCD_Goto_xy(LCD_ROW_1, Loc_u8COL+1);
 98e:	61 e0       	ldi	r22, 0x01	; 1
 990:	6c 0f       	add	r22, r28
 992:	80 e4       	ldi	r24, 0x40	; 64
 994:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
                LCD_VOidSendChar(1);
 998:	81 e0       	ldi	r24, 0x01	; 1
 99a:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
 99e:	2f e7       	ldi	r18, 0x7F	; 127
 9a0:	88 e3       	ldi	r24, 0x38	; 56
 9a2:	91 e0       	ldi	r25, 0x01	; 1
 9a4:	21 50       	subi	r18, 0x01	; 1
 9a6:	80 40       	sbci	r24, 0x00	; 0
 9a8:	90 40       	sbci	r25, 0x00	; 0
 9aa:	e1 f7       	brne	.-8      	; 0x9a4 <Runningboy_Fourth+0xd6>
 9ac:	00 c0       	rjmp	.+0      	; 0x9ae <Runningboy_Fourth+0xe0>
 9ae:	00 00       	nop
    LCD_VOidSendChar(3);
    u8 Loc_u8ROW=0;
    u8 Loc_u8COL=0;
    
    for(Loc_u8ROW=0;Loc_u8ROW<=1;Loc_u8ROW++){  
        for(Loc_u8COL=0;Loc_u8COL<20;Loc_u8COL++){
 9b0:	cf 5f       	subi	r28, 0xFF	; 255
 9b2:	01 c0       	rjmp	.+2      	; 0x9b6 <Runningboy_Fourth+0xe8>
 9b4:	c0 e0       	ldi	r28, 0x00	; 0
 9b6:	c4 31       	cpi	r28, 0x14	; 20
 9b8:	08 f4       	brcc	.+2      	; 0x9bc <Runningboy_Fourth+0xee>
 9ba:	a2 cf       	rjmp	.-188    	; 0x900 <Runningboy_Fourth+0x32>
    LCD_Goto_xy(LCD_ROW_1,10);
    LCD_VOidSendChar(3);
    u8 Loc_u8ROW=0;
    u8 Loc_u8COL=0;
    
    for(Loc_u8ROW=0;Loc_u8ROW<=1;Loc_u8ROW++){  
 9bc:	df 5f       	subi	r29, 0xFF	; 255
 9be:	d2 30       	cpi	r29, 0x02	; 2
 9c0:	c8 f3       	brcs	.-14     	; 0x9b4 <Runningboy_Fourth+0xe6>
             } 
        
        }    
        
    }
    LCD_Goto_xy(LCD_ROW_1,6);
 9c2:	66 e0       	ldi	r22, 0x06	; 6
 9c4:	80 e4       	ldi	r24, 0x40	; 64
 9c6:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
    LCD_VoidSendString("GAME OVER");
 9ca:	80 e8       	ldi	r24, 0x80	; 128
 9cc:	90 e0       	ldi	r25, 0x00	; 0
 9ce:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <LCD_VoidSendString>
    LCD_Goto_xy(LCD_ROW_1,19);
 9d2:	63 e1       	ldi	r22, 0x13	; 19
 9d4:	80 e4       	ldi	r24, 0x40	; 64
 9d6:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <LCD_Goto_xy>
    LCD_VOidSendChar(1);
 9da:	81 e0       	ldi	r24, 0x01	; 1
 9dc:	0e 94 50 01 	call	0x2a0	; 0x2a0 <LCD_VOidSendChar>
 9e0:	2f e7       	ldi	r18, 0x7F	; 127
 9e2:	88 e3       	ldi	r24, 0x38	; 56
 9e4:	91 e0       	ldi	r25, 0x01	; 1
 9e6:	21 50       	subi	r18, 0x01	; 1
 9e8:	80 40       	sbci	r24, 0x00	; 0
 9ea:	90 40       	sbci	r25, 0x00	; 0
 9ec:	e1 f7       	brne	.-8      	; 0x9e6 <Runningboy_Fourth+0x118>
 9ee:	00 c0       	rjmp	.+0      	; 0x9f0 <Runningboy_Fourth+0x122>
 9f0:	00 00       	nop
    _delay_ms(50);
  }
 9f2:	df 91       	pop	r29
 9f4:	cf 91       	pop	r28
 9f6:	08 95       	ret

000009f8 <main>:
int main() {
        PORT_VoidInit();
 9f8:	0e 94 21 05 	call	0xa42	; 0xa42 <PORT_VoidInit>
        LCD_VoidInit();
 9fc:	0e 94 30 01 	call	0x260	; 0x260 <LCD_VoidInit>
        LCD_VoidClear();
 a00:	0e 94 8a 01 	call	0x314	; 0x314 <LCD_VoidClear>
        LCD_VoidCreateSpectialChar(0,LCD_BOY);
 a04:	68 e7       	ldi	r22, 0x78	; 120
 a06:	70 e0       	ldi	r23, 0x00	; 0
 a08:	80 e0       	ldi	r24, 0x00	; 0
 a0a:	0e 94 9b 01 	call	0x336	; 0x336 <LCD_VoidCreateSpectialChar>
        LCD_VoidCreateSpectialChar(1,LCD_Ground);
 a0e:	60 e7       	ldi	r22, 0x70	; 112
 a10:	70 e0       	ldi	r23, 0x00	; 0
 a12:	81 e0       	ldi	r24, 0x01	; 1
 a14:	0e 94 9b 01 	call	0x336	; 0x336 <LCD_VoidCreateSpectialChar>
        LCD_VoidCreateSpectialChar(2,LCD_Ladder);
 a18:	68 e6       	ldi	r22, 0x68	; 104
 a1a:	70 e0       	ldi	r23, 0x00	; 0
 a1c:	82 e0       	ldi	r24, 0x02	; 2
 a1e:	0e 94 9b 01 	call	0x336	; 0x336 <LCD_VoidCreateSpectialChar>
        LCD_VoidCreateSpectialChar(3,LCD_obsticale);
 a22:	60 e6       	ldi	r22, 0x60	; 96
 a24:	70 e0       	ldi	r23, 0x00	; 0
 a26:	83 e0       	ldi	r24, 0x03	; 3
 a28:	0e 94 9b 01 	call	0x336	; 0x336 <LCD_VoidCreateSpectialChar>
        Runningboy_Init();
 a2c:	0e 94 be 01 	call	0x37c	; 0x37c <Runningboy_Init>
        Runningboy_First();
 a30:	0e 94 fe 01 	call	0x3fc	; 0x3fc <Runningboy_First>
        Runningboy_Second();
 a34:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <Runningboy_Second>
        Runningboy_Third();
 a38:	0e 94 9d 03 	call	0x73a	; 0x73a <Runningboy_Third>
        Runningboy_Fourth();
 a3c:	0e 94 67 04 	call	0x8ce	; 0x8ce <Runningboy_Fourth>
 a40:	ff cf       	rjmp	.-2      	; 0xa40 <main+0x48>

00000a42 <PORT_VoidInit>:
	#define PORT_INPUT_FLOATING 0

	#undef PORT_INPUT_PULLUP
	#define PORT_INPUT_PULLUP 0
   
	DDRA_Reg = CONC(PORT_PA7_INTIAL_STATE,PORT_PA6_INTIAL_STATE,PORT_PA5_INTIAL_STATE,PORT_PA4_INTIAL_STATE,PORT_PA3_INTIAL_STATE,PORT_PA2_INTIAL_STATE,PORT_PA1_INTIAL_STATE,PORT_PA0_INTIAL_STATE);
 a42:	8f ef       	ldi	r24, 0xFF	; 255
 a44:	8a bb       	out	0x1a, r24	; 26
    
	DDRB_Reg = CONC(PORT_PB7_INTIAL_STATE,PORT_PB6_INTIAL_STATE,PORT_PB5_INTIAL_STATE,PORT_PB4_INTIAL_STATE,PORT_PB3_INTIAL_STATE,PORT_PB2_INTIAL_STATE,PORT_PB1_INTIAL_STATE,PORT_PB0_INTIAL_STATE);
 a46:	9f e0       	ldi	r25, 0x0F	; 15
 a48:	97 bb       	out	0x17, r25	; 23
   
	DDRC_Reg = CONC(PORT_PC7_INTIAL_STATE,PORT_PC6_INTIAL_STATE,PORT_PC5_INTIAL_STATE,PORT_PC4_INTIAL_STATE,PORT_PC3_INTIAL_STATE,PORT_PC2_INTIAL_STATE,PORT_PC1_INTIAL_STATE,PORT_PC0_INTIAL_STATE);
 a4a:	84 bb       	out	0x14, r24	; 20
                  
	DDRD_Reg = CONC(PORT_PD7_INTIAL_STATE,PORT_PD6_INTIAL_STATE,PORT_PD5_INTIAL_STATE,PORT_PD4_INTIAL_STATE,PORT_PD3_INTIAL_STATE,PORT_PD2_INTIAL_STATE,PORT_PD1_INTIAL_STATE,PORT_PD0_INTIAL_STATE);	
 a4c:	81 bb       	out	0x11, r24	; 17

	#undef PORT_INPUT_PULLUP
	#define PORT_INPUT_PULLUP 1											 


	PORTA_Reg = CONC(PORT_PA7_INTIAL_STATE,PORT_PA6_INTIAL_STATE,PORT_PA5_INTIAL_STATE,PORT_PA4_INTIAL_STATE,PORT_PA3_INTIAL_STATE,PORT_PA2_INTIAL_STATE,PORT_PA1_INTIAL_STATE,PORT_PA0_INTIAL_STATE);
 a4e:	1b ba       	out	0x1b, r1	; 27
	
    PORTB_Reg = CONC(PORT_PB7_INTIAL_STATE,PORT_PB6_INTIAL_STATE,PORT_PB5_INTIAL_STATE,PORT_PB4_INTIAL_STATE,PORT_PB3_INTIAL_STATE,PORT_PB2_INTIAL_STATE,PORT_PB1_INTIAL_STATE,PORT_PB0_INTIAL_STATE);
 a50:	90 ef       	ldi	r25, 0xF0	; 240
 a52:	98 bb       	out	0x18, r25	; 24

	PORTC_Reg = CONC(PORT_PC7_INTIAL_STATE,PORT_PC6_INTIAL_STATE,PORT_PC5_INTIAL_STATE,PORT_PC4_INTIAL_STATE,PORT_PC3_INTIAL_STATE,PORT_PC2_INTIAL_STATE,PORT_PC1_INTIAL_STATE,PORT_PC0_INTIAL_STATE);  
 a54:	15 ba       	out	0x15, r1	; 21

 	PORTD_Reg = CONC(PORT_PD7_INTIAL_STATE,PORT_PD6_INTIAL_STATE,PORT_PD5_INTIAL_STATE,PORT_PD4_INTIAL_STATE,PORT_PD3_INTIAL_STATE,PORT_PD2_INTIAL_STATE,PORT_PD1_INTIAL_STATE,PORT_PD0_INTIAL_STATE);  
 a56:	82 bb       	out	0x12, r24	; 18
 a58:	08 95       	ret

00000a5a <_exit>:
 a5a:	f8 94       	cli

00000a5c <__stop_program>:
 a5c:	ff cf       	rjmp	.-2      	; 0xa5c <__stop_program>
